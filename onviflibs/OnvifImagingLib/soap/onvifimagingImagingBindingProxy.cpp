/* onvifimagingImagingBindingProxy.cpp
   Generated by gSOAP 2.8.22 from rcx.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "onvifimagingImagingBindingProxy.h"

ImagingBindingProxy::ImagingBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	ImagingBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ImagingBindingProxy::ImagingBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	ImagingBindingProxy_init(_soap->imode, _soap->omode);
}

ImagingBindingProxy::ImagingBindingProxy(const char *url)
{	this->soap = soap_new();
	this->soap_own = true;
	ImagingBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

ImagingBindingProxy::ImagingBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ImagingBindingProxy_init(iomode, iomode);
}

ImagingBindingProxy::ImagingBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ImagingBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

ImagingBindingProxy::ImagingBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	ImagingBindingProxy_init(imode, omode);
}

ImagingBindingProxy::~ImagingBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void ImagingBindingProxy::ImagingBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"imagingws", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void ImagingBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void ImagingBindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	ImagingBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ImagingBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void ImagingBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
}

const SOAP_ENV__Header *ImagingBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *ImagingBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *ImagingBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *ImagingBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int ImagingBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int ImagingBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void ImagingBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ImagingBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *ImagingBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int ImagingBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _imagingws__GetServiceCapabilities *imagingws__GetServiceCapabilities, _imagingws__GetServiceCapabilitiesResponse &imagingws__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __imagingws__GetServiceCapabilities soap_tmp___imagingws__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___imagingws__GetServiceCapabilities.imagingws__GetServiceCapabilities = imagingws__GetServiceCapabilities;
	soap_serializeheader(soap);
	soap_serialize___imagingws__GetServiceCapabilities(soap, &soap_tmp___imagingws__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___imagingws__GetServiceCapabilities(soap, &soap_tmp___imagingws__GetServiceCapabilities, "-imagingws:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___imagingws__GetServiceCapabilities(soap, &soap_tmp___imagingws__GetServiceCapabilities, "-imagingws:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&imagingws__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	imagingws__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	imagingws__GetServiceCapabilitiesResponse.soap_get(soap, "imagingws:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::GetImagingSettings(const char *endpoint, const char *soap_action, _imagingws__GetImagingSettings *imagingws__GetImagingSettings, _imagingws__GetImagingSettingsResponse &imagingws__GetImagingSettingsResponse)
{	struct soap *soap = this->soap;
	struct __imagingws__GetImagingSettings soap_tmp___imagingws__GetImagingSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___imagingws__GetImagingSettings.imagingws__GetImagingSettings = imagingws__GetImagingSettings;
	soap_serializeheader(soap);
	soap_serialize___imagingws__GetImagingSettings(soap, &soap_tmp___imagingws__GetImagingSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___imagingws__GetImagingSettings(soap, &soap_tmp___imagingws__GetImagingSettings, "-imagingws:GetImagingSettings", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___imagingws__GetImagingSettings(soap, &soap_tmp___imagingws__GetImagingSettings, "-imagingws:GetImagingSettings", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&imagingws__GetImagingSettingsResponse)
		return soap_closesock(soap);
	imagingws__GetImagingSettingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	imagingws__GetImagingSettingsResponse.soap_get(soap, "imagingws:GetImagingSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::SetImagingSettings(const char *endpoint, const char *soap_action, _imagingws__SetImagingSettings *imagingws__SetImagingSettings, _imagingws__SetImagingSettingsResponse &imagingws__SetImagingSettingsResponse)
{	struct soap *soap = this->soap;
	struct __imagingws__SetImagingSettings soap_tmp___imagingws__SetImagingSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___imagingws__SetImagingSettings.imagingws__SetImagingSettings = imagingws__SetImagingSettings;
	soap_serializeheader(soap);
	soap_serialize___imagingws__SetImagingSettings(soap, &soap_tmp___imagingws__SetImagingSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___imagingws__SetImagingSettings(soap, &soap_tmp___imagingws__SetImagingSettings, "-imagingws:SetImagingSettings", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___imagingws__SetImagingSettings(soap, &soap_tmp___imagingws__SetImagingSettings, "-imagingws:SetImagingSettings", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&imagingws__SetImagingSettingsResponse)
		return soap_closesock(soap);
	imagingws__SetImagingSettingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	imagingws__SetImagingSettingsResponse.soap_get(soap, "imagingws:SetImagingSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::GetOptions(const char *endpoint, const char *soap_action, _imagingws__GetOptions *imagingws__GetOptions, _imagingws__GetOptionsResponse &imagingws__GetOptionsResponse)
{	struct soap *soap = this->soap;
	struct __imagingws__GetOptions soap_tmp___imagingws__GetOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___imagingws__GetOptions.imagingws__GetOptions = imagingws__GetOptions;
	soap_serializeheader(soap);
	soap_serialize___imagingws__GetOptions(soap, &soap_tmp___imagingws__GetOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___imagingws__GetOptions(soap, &soap_tmp___imagingws__GetOptions, "-imagingws:GetOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___imagingws__GetOptions(soap, &soap_tmp___imagingws__GetOptions, "-imagingws:GetOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&imagingws__GetOptionsResponse)
		return soap_closesock(soap);
	imagingws__GetOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	imagingws__GetOptionsResponse.soap_get(soap, "imagingws:GetOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::Move(const char *endpoint, const char *soap_action, _imagingws__Move *imagingws__Move, _imagingws__MoveResponse &imagingws__MoveResponse)
{	struct soap *soap = this->soap;
	struct __imagingws__Move soap_tmp___imagingws__Move;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/Move";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___imagingws__Move.imagingws__Move = imagingws__Move;
	soap_serializeheader(soap);
	soap_serialize___imagingws__Move(soap, &soap_tmp___imagingws__Move);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___imagingws__Move(soap, &soap_tmp___imagingws__Move, "-imagingws:Move", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___imagingws__Move(soap, &soap_tmp___imagingws__Move, "-imagingws:Move", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&imagingws__MoveResponse)
		return soap_closesock(soap);
	imagingws__MoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	imagingws__MoveResponse.soap_get(soap, "imagingws:MoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::Stop(const char *endpoint, const char *soap_action, _imagingws__Stop *imagingws__Stop, _imagingws__StopResponse &imagingws__StopResponse)
{	struct soap *soap = this->soap;
	struct __imagingws__Stop soap_tmp___imagingws__Stop;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/FocusStop";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___imagingws__Stop.imagingws__Stop = imagingws__Stop;
	soap_serializeheader(soap);
	soap_serialize___imagingws__Stop(soap, &soap_tmp___imagingws__Stop);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___imagingws__Stop(soap, &soap_tmp___imagingws__Stop, "-imagingws:Stop", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___imagingws__Stop(soap, &soap_tmp___imagingws__Stop, "-imagingws:Stop", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&imagingws__StopResponse)
		return soap_closesock(soap);
	imagingws__StopResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	imagingws__StopResponse.soap_get(soap, "imagingws:StopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::GetStatus(const char *endpoint, const char *soap_action, _imagingws__GetStatus *imagingws__GetStatus, _imagingws__GetStatusResponse &imagingws__GetStatusResponse)
{	struct soap *soap = this->soap;
	struct __imagingws__GetStatus soap_tmp___imagingws__GetStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetStatus";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___imagingws__GetStatus.imagingws__GetStatus = imagingws__GetStatus;
	soap_serializeheader(soap);
	soap_serialize___imagingws__GetStatus(soap, &soap_tmp___imagingws__GetStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___imagingws__GetStatus(soap, &soap_tmp___imagingws__GetStatus, "-imagingws:GetStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___imagingws__GetStatus(soap, &soap_tmp___imagingws__GetStatus, "-imagingws:GetStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&imagingws__GetStatusResponse)
		return soap_closesock(soap);
	imagingws__GetStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	imagingws__GetStatusResponse.soap_get(soap, "imagingws:GetStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::GetMoveOptions(const char *endpoint, const char *soap_action, _imagingws__GetMoveOptions *imagingws__GetMoveOptions, _imagingws__GetMoveOptionsResponse &imagingws__GetMoveOptionsResponse)
{	struct soap *soap = this->soap;
	struct __imagingws__GetMoveOptions soap_tmp___imagingws__GetMoveOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___imagingws__GetMoveOptions.imagingws__GetMoveOptions = imagingws__GetMoveOptions;
	soap_serializeheader(soap);
	soap_serialize___imagingws__GetMoveOptions(soap, &soap_tmp___imagingws__GetMoveOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___imagingws__GetMoveOptions(soap, &soap_tmp___imagingws__GetMoveOptions, "-imagingws:GetMoveOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___imagingws__GetMoveOptions(soap, &soap_tmp___imagingws__GetMoveOptions, "-imagingws:GetMoveOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&imagingws__GetMoveOptionsResponse)
		return soap_closesock(soap);
	imagingws__GetMoveOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	imagingws__GetMoveOptionsResponse.soap_get(soap, "imagingws:GetMoveOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
