/* onvifvideoanalyticsdeviceAnalyticsDeviceBindingService.cpp
   Generated by gSOAP 2.8.22 from rcx.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "onvifvideoanalyticsdeviceAnalyticsDeviceBindingService.h"

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService()
{	this->soap = soap_new();
	this->soap_own = true;
	AnalyticsDeviceBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	AnalyticsDeviceBindingService_init(_soap->imode, _soap->omode);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AnalyticsDeviceBindingService_init(iomode, iomode);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	AnalyticsDeviceBindingService_init(imode, omode);
}

AnalyticsDeviceBindingService::~AnalyticsDeviceBindingService()
{	if (this->soap_own)
		soap_free(this->soap);
}

void AnalyticsDeviceBindingService::AnalyticsDeviceBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"videoanalyticsdevicews", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void AnalyticsDeviceBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void AnalyticsDeviceBindingService::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	AnalyticsDeviceBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
AnalyticsDeviceBindingService *AnalyticsDeviceBindingService::copy()
{	AnalyticsDeviceBindingService *dup = SOAP_NEW_COPY(AnalyticsDeviceBindingService);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

int AnalyticsDeviceBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int AnalyticsDeviceBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int AnalyticsDeviceBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void AnalyticsDeviceBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AnalyticsDeviceBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *AnalyticsDeviceBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void AnalyticsDeviceBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void AnalyticsDeviceBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
}

const SOAP_ENV__Header *AnalyticsDeviceBindingService::soap_header()
{	return this->soap->header;
}

int AnalyticsDeviceBindingService::run(int port)
{	if (soap_valid_socket(this->soap->master) || soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()) || serve())
				break;
			soap_destroy(this->soap);
			soap_end(this->soap);
		}
	}
	return this->soap->error;
}

SOAP_SOCKET AnalyticsDeviceBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET AnalyticsDeviceBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int AnalyticsDeviceBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif

int AnalyticsDeviceBindingService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->soap->max_keep_alive;
#endif
	do
	{

#ifndef WITH_FASTCGI
		if (this->soap->max_keep_alive > 0 && !--k)
			this->soap->keep_alive = 0;
#endif

		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if (dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___videoanalyticsdevicews__GetServiceCapabilities(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__DeleteAnalyticsEngineControl(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__CreateAnalyticsEngineControl(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__SetAnalyticsEngineControl(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__GetAnalyticsEngineControl(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__GetAnalyticsEngineControls(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__GetAnalyticsEngine(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__GetAnalyticsEngines(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__SetVideoAnalyticsConfiguration(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__SetAnalyticsEngineInput(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__GetAnalyticsEngineInput(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__GetAnalyticsEngineInputs(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__GetVideoAnalyticsConfiguration(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__CreateAnalyticsEngineInputs(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__DeleteAnalyticsEngineInputs(struct soap*, AnalyticsDeviceBindingService*);
static int serve___videoanalyticsdevicews__GetAnalyticsState(struct soap*, AnalyticsDeviceBindingService*);

int AnalyticsDeviceBindingService::dispatch()
{	return dispatch(this->soap);
}

int AnalyticsDeviceBindingService::dispatch(struct soap* soap)
{	AnalyticsDeviceBindingService_init(soap->imode, soap->omode);
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:GetServiceCapabilities"))
		return serve___videoanalyticsdevicews__GetServiceCapabilities(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:DeleteAnalyticsEngineControl"))
		return serve___videoanalyticsdevicews__DeleteAnalyticsEngineControl(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:CreateAnalyticsEngineControl"))
		return serve___videoanalyticsdevicews__CreateAnalyticsEngineControl(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:SetAnalyticsEngineControl"))
		return serve___videoanalyticsdevicews__SetAnalyticsEngineControl(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:GetAnalyticsEngineControl"))
		return serve___videoanalyticsdevicews__GetAnalyticsEngineControl(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:GetAnalyticsEngineControls"))
		return serve___videoanalyticsdevicews__GetAnalyticsEngineControls(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:GetAnalyticsEngine"))
		return serve___videoanalyticsdevicews__GetAnalyticsEngine(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:GetAnalyticsEngines"))
		return serve___videoanalyticsdevicews__GetAnalyticsEngines(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:SetVideoAnalyticsConfiguration"))
		return serve___videoanalyticsdevicews__SetVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:SetAnalyticsEngineInput"))
		return serve___videoanalyticsdevicews__SetAnalyticsEngineInput(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:GetAnalyticsEngineInput"))
		return serve___videoanalyticsdevicews__GetAnalyticsEngineInput(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:GetAnalyticsEngineInputs"))
		return serve___videoanalyticsdevicews__GetAnalyticsEngineInputs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:GetAnalyticsDeviceStreamUri"))
		return serve___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:GetVideoAnalyticsConfiguration"))
		return serve___videoanalyticsdevicews__GetVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:CreateAnalyticsEngineInputs"))
		return serve___videoanalyticsdevicews__CreateAnalyticsEngineInputs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:DeleteAnalyticsEngineInputs"))
		return serve___videoanalyticsdevicews__DeleteAnalyticsEngineInputs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "videoanalyticsdevicews:GetAnalyticsState"))
		return serve___videoanalyticsdevicews__GetAnalyticsState(soap, this);
	return soap->error = SOAP_NO_METHOD;
}

static int serve___videoanalyticsdevicews__GetServiceCapabilities(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__GetServiceCapabilities soap_tmp___videoanalyticsdevicews__GetServiceCapabilities;
	_videoanalyticsdevicews__GetServiceCapabilitiesResponse videoanalyticsdevicews__GetServiceCapabilitiesResponse;
	videoanalyticsdevicews__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__GetServiceCapabilities(soap, &soap_tmp___videoanalyticsdevicews__GetServiceCapabilities);
	if (!soap_get___videoanalyticsdevicews__GetServiceCapabilities(soap, &soap_tmp___videoanalyticsdevicews__GetServiceCapabilities, "-videoanalyticsdevicews:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___videoanalyticsdevicews__GetServiceCapabilities.videoanalyticsdevicews__GetServiceCapabilities, videoanalyticsdevicews__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__GetServiceCapabilitiesResponse.soap_put(soap, "videoanalyticsdevicews:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__GetServiceCapabilitiesResponse.soap_put(soap, "videoanalyticsdevicews:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__DeleteAnalyticsEngineControl(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__DeleteAnalyticsEngineControl soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineControl;
	_videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse;
	videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__DeleteAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineControl);
	if (!soap_get___videoanalyticsdevicews__DeleteAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineControl, "-videoanalyticsdevicews:DeleteAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteAnalyticsEngineControl(soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineControl.videoanalyticsdevicews__DeleteAnalyticsEngineControl, videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse.soap_put(soap, "videoanalyticsdevicews:DeleteAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse.soap_put(soap, "videoanalyticsdevicews:DeleteAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__CreateAnalyticsEngineControl(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__CreateAnalyticsEngineControl soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineControl;
	_videoanalyticsdevicews__CreateAnalyticsEngineControlResponse videoanalyticsdevicews__CreateAnalyticsEngineControlResponse;
	videoanalyticsdevicews__CreateAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__CreateAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineControl);
	if (!soap_get___videoanalyticsdevicews__CreateAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineControl, "-videoanalyticsdevicews:CreateAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateAnalyticsEngineControl(soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineControl.videoanalyticsdevicews__CreateAnalyticsEngineControl, videoanalyticsdevicews__CreateAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__CreateAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__CreateAnalyticsEngineControlResponse.soap_put(soap, "videoanalyticsdevicews:CreateAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__CreateAnalyticsEngineControlResponse.soap_put(soap, "videoanalyticsdevicews:CreateAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__SetAnalyticsEngineControl(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__SetAnalyticsEngineControl soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineControl;
	_videoanalyticsdevicews__SetAnalyticsEngineControlResponse videoanalyticsdevicews__SetAnalyticsEngineControlResponse;
	videoanalyticsdevicews__SetAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__SetAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineControl);
	if (!soap_get___videoanalyticsdevicews__SetAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineControl, "-videoanalyticsdevicews:SetAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAnalyticsEngineControl(soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineControl.videoanalyticsdevicews__SetAnalyticsEngineControl, videoanalyticsdevicews__SetAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__SetAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__SetAnalyticsEngineControlResponse.soap_put(soap, "videoanalyticsdevicews:SetAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__SetAnalyticsEngineControlResponse.soap_put(soap, "videoanalyticsdevicews:SetAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__GetAnalyticsEngineControl(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__GetAnalyticsEngineControl soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControl;
	_videoanalyticsdevicews__GetAnalyticsEngineControlResponse videoanalyticsdevicews__GetAnalyticsEngineControlResponse;
	videoanalyticsdevicews__GetAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__GetAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControl);
	if (!soap_get___videoanalyticsdevicews__GetAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControl, "-videoanalyticsdevicews:GetAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineControl(soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControl.videoanalyticsdevicews__GetAnalyticsEngineControl, videoanalyticsdevicews__GetAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__GetAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__GetAnalyticsEngineControlResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__GetAnalyticsEngineControlResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__GetAnalyticsEngineControls(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__GetAnalyticsEngineControls soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControls;
	_videoanalyticsdevicews__GetAnalyticsEngineControlsResponse videoanalyticsdevicews__GetAnalyticsEngineControlsResponse;
	videoanalyticsdevicews__GetAnalyticsEngineControlsResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__GetAnalyticsEngineControls(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControls);
	if (!soap_get___videoanalyticsdevicews__GetAnalyticsEngineControls(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControls, "-videoanalyticsdevicews:GetAnalyticsEngineControls", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineControls(soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControls.videoanalyticsdevicews__GetAnalyticsEngineControls, videoanalyticsdevicews__GetAnalyticsEngineControlsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__GetAnalyticsEngineControlsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__GetAnalyticsEngineControlsResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEngineControlsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__GetAnalyticsEngineControlsResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEngineControlsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__GetAnalyticsEngine(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__GetAnalyticsEngine soap_tmp___videoanalyticsdevicews__GetAnalyticsEngine;
	_videoanalyticsdevicews__GetAnalyticsEngineResponse videoanalyticsdevicews__GetAnalyticsEngineResponse;
	videoanalyticsdevicews__GetAnalyticsEngineResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__GetAnalyticsEngine(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngine);
	if (!soap_get___videoanalyticsdevicews__GetAnalyticsEngine(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngine, "-videoanalyticsdevicews:GetAnalyticsEngine", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngine(soap_tmp___videoanalyticsdevicews__GetAnalyticsEngine.videoanalyticsdevicews__GetAnalyticsEngine, videoanalyticsdevicews__GetAnalyticsEngineResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__GetAnalyticsEngineResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__GetAnalyticsEngineResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEngineResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__GetAnalyticsEngineResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEngineResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__GetAnalyticsEngines(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__GetAnalyticsEngines soap_tmp___videoanalyticsdevicews__GetAnalyticsEngines;
	_videoanalyticsdevicews__GetAnalyticsEnginesResponse videoanalyticsdevicews__GetAnalyticsEnginesResponse;
	videoanalyticsdevicews__GetAnalyticsEnginesResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__GetAnalyticsEngines(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngines);
	if (!soap_get___videoanalyticsdevicews__GetAnalyticsEngines(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngines, "-videoanalyticsdevicews:GetAnalyticsEngines", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngines(soap_tmp___videoanalyticsdevicews__GetAnalyticsEngines.videoanalyticsdevicews__GetAnalyticsEngines, videoanalyticsdevicews__GetAnalyticsEnginesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__GetAnalyticsEnginesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__GetAnalyticsEnginesResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEnginesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__GetAnalyticsEnginesResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEnginesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__SetVideoAnalyticsConfiguration(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__SetVideoAnalyticsConfiguration soap_tmp___videoanalyticsdevicews__SetVideoAnalyticsConfiguration;
	_videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse;
	videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__SetVideoAnalyticsConfiguration(soap, &soap_tmp___videoanalyticsdevicews__SetVideoAnalyticsConfiguration);
	if (!soap_get___videoanalyticsdevicews__SetVideoAnalyticsConfiguration(soap, &soap_tmp___videoanalyticsdevicews__SetVideoAnalyticsConfiguration, "-videoanalyticsdevicews:SetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoAnalyticsConfiguration(soap_tmp___videoanalyticsdevicews__SetVideoAnalyticsConfiguration.videoanalyticsdevicews__SetVideoAnalyticsConfiguration, videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "videoanalyticsdevicews:SetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "videoanalyticsdevicews:SetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__SetAnalyticsEngineInput(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__SetAnalyticsEngineInput soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineInput;
	_videoanalyticsdevicews__SetAnalyticsEngineInputResponse videoanalyticsdevicews__SetAnalyticsEngineInputResponse;
	videoanalyticsdevicews__SetAnalyticsEngineInputResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__SetAnalyticsEngineInput(soap, &soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineInput);
	if (!soap_get___videoanalyticsdevicews__SetAnalyticsEngineInput(soap, &soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineInput, "-videoanalyticsdevicews:SetAnalyticsEngineInput", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAnalyticsEngineInput(soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineInput.videoanalyticsdevicews__SetAnalyticsEngineInput, videoanalyticsdevicews__SetAnalyticsEngineInputResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__SetAnalyticsEngineInputResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__SetAnalyticsEngineInputResponse.soap_put(soap, "videoanalyticsdevicews:SetAnalyticsEngineInputResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__SetAnalyticsEngineInputResponse.soap_put(soap, "videoanalyticsdevicews:SetAnalyticsEngineInputResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__GetAnalyticsEngineInput(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__GetAnalyticsEngineInput soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInput;
	_videoanalyticsdevicews__GetAnalyticsEngineInputResponse videoanalyticsdevicews__GetAnalyticsEngineInputResponse;
	videoanalyticsdevicews__GetAnalyticsEngineInputResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__GetAnalyticsEngineInput(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInput);
	if (!soap_get___videoanalyticsdevicews__GetAnalyticsEngineInput(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInput, "-videoanalyticsdevicews:GetAnalyticsEngineInput", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineInput(soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInput.videoanalyticsdevicews__GetAnalyticsEngineInput, videoanalyticsdevicews__GetAnalyticsEngineInputResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__GetAnalyticsEngineInputResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__GetAnalyticsEngineInputResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEngineInputResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__GetAnalyticsEngineInputResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEngineInputResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__GetAnalyticsEngineInputs(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__GetAnalyticsEngineInputs soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInputs;
	_videoanalyticsdevicews__GetAnalyticsEngineInputsResponse videoanalyticsdevicews__GetAnalyticsEngineInputsResponse;
	videoanalyticsdevicews__GetAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__GetAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInputs);
	if (!soap_get___videoanalyticsdevicews__GetAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInputs, "-videoanalyticsdevicews:GetAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineInputs(soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInputs.videoanalyticsdevicews__GetAnalyticsEngineInputs, videoanalyticsdevicews__GetAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__GetAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__GetAnalyticsEngineInputsResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__GetAnalyticsEngineInputsResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__GetAnalyticsDeviceStreamUri soap_tmp___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri;
	_videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse;
	videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri);
	if (!soap_get___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri, "-videoanalyticsdevicews:GetAnalyticsDeviceStreamUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsDeviceStreamUri(soap_tmp___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri.videoanalyticsdevicews__GetAnalyticsDeviceStreamUri, videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsDeviceStreamUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsDeviceStreamUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__GetVideoAnalyticsConfiguration(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__GetVideoAnalyticsConfiguration soap_tmp___videoanalyticsdevicews__GetVideoAnalyticsConfiguration;
	_videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse;
	videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__GetVideoAnalyticsConfiguration(soap, &soap_tmp___videoanalyticsdevicews__GetVideoAnalyticsConfiguration);
	if (!soap_get___videoanalyticsdevicews__GetVideoAnalyticsConfiguration(soap, &soap_tmp___videoanalyticsdevicews__GetVideoAnalyticsConfiguration, "-videoanalyticsdevicews:GetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoAnalyticsConfiguration(soap_tmp___videoanalyticsdevicews__GetVideoAnalyticsConfiguration.videoanalyticsdevicews__GetVideoAnalyticsConfiguration, videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "videoanalyticsdevicews:GetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "videoanalyticsdevicews:GetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__CreateAnalyticsEngineInputs(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__CreateAnalyticsEngineInputs soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineInputs;
	_videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse;
	videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__CreateAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineInputs);
	if (!soap_get___videoanalyticsdevicews__CreateAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineInputs, "-videoanalyticsdevicews:CreateAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateAnalyticsEngineInputs(soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineInputs.videoanalyticsdevicews__CreateAnalyticsEngineInputs, videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse.soap_put(soap, "videoanalyticsdevicews:CreateAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse.soap_put(soap, "videoanalyticsdevicews:CreateAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__DeleteAnalyticsEngineInputs(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__DeleteAnalyticsEngineInputs soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineInputs;
	_videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse;
	videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__DeleteAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineInputs);
	if (!soap_get___videoanalyticsdevicews__DeleteAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineInputs, "-videoanalyticsdevicews:DeleteAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteAnalyticsEngineInputs(soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineInputs.videoanalyticsdevicews__DeleteAnalyticsEngineInputs, videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse.soap_put(soap, "videoanalyticsdevicews:DeleteAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse.soap_put(soap, "videoanalyticsdevicews:DeleteAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___videoanalyticsdevicews__GetAnalyticsState(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __videoanalyticsdevicews__GetAnalyticsState soap_tmp___videoanalyticsdevicews__GetAnalyticsState;
	_videoanalyticsdevicews__GetAnalyticsStateResponse videoanalyticsdevicews__GetAnalyticsStateResponse;
	videoanalyticsdevicews__GetAnalyticsStateResponse.soap_default(soap);
	soap_default___videoanalyticsdevicews__GetAnalyticsState(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsState);
	if (!soap_get___videoanalyticsdevicews__GetAnalyticsState(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsState, "-videoanalyticsdevicews:GetAnalyticsState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsState(soap_tmp___videoanalyticsdevicews__GetAnalyticsState.videoanalyticsdevicews__GetAnalyticsState, videoanalyticsdevicews__GetAnalyticsStateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	videoanalyticsdevicews__GetAnalyticsStateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || videoanalyticsdevicews__GetAnalyticsStateResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsStateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || videoanalyticsdevicews__GetAnalyticsStateResponse.soap_put(soap, "videoanalyticsdevicews:GetAnalyticsStateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
