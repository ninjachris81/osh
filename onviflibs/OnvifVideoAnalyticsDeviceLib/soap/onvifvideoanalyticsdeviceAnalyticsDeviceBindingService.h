/* onvifvideoanalyticsdeviceAnalyticsDeviceBindingService.h
   Generated by gSOAP 2.8.22 from rcx.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef onvifvideoanalyticsdeviceAnalyticsDeviceBindingService_H
#define onvifvideoanalyticsdeviceAnalyticsDeviceBindingService_H
#include "onvifvideoanalyticsdeviceH.h"
class SOAP_CMAC AnalyticsDeviceBindingService
{ public:
	struct soap *soap;
	bool soap_own;
	/// Variables globally declared in rcx.h (non-static)
	/// Constructor
	AnalyticsDeviceBindingService();
	/// Constructor to use/share an engine state
	AnalyticsDeviceBindingService(struct soap*);
	/// Constructor with engine input+output mode control
	AnalyticsDeviceBindingService(soap_mode iomode);
	/// Constructor with engine input and output mode control
	AnalyticsDeviceBindingService(soap_mode imode, soap_mode omode);
	/// Destructor, also frees all deserialized data
	virtual ~AnalyticsDeviceBindingService();
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to defaults
	virtual	void reset();
	/// Initializer used by constructor
	virtual	void AnalyticsDeviceBindingService_init(soap_mode imode, soap_mode omode);
	/// Create a copy
	virtual	AnalyticsDeviceBindingService *copy() SOAP_PURE_VIRTUAL;
	/// Close connection (normally automatic)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Return sender-related fault to sender
	virtual	int soap_senderfault(const char *string, const char *detailXML);
	/// Return sender-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Return receiver-related fault to sender
	virtual	int soap_receiverfault(const char *string, const char *detailXML);
	/// Return receiver-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Run simple single-thread (iterative, non-SSL) service on port until a connection error occurs (returns error code or SOAP_OK), use this->bind_flag = SO_REUSEADDR to rebind for a rerun
	virtual	int run(int port);
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog);
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept();
#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
	/// Then accept SSL handshake, when SSL is used
	virtual	int ssl_accept();
#endif
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve();
	/// Used by serve() to dispatch a request (returns error or SOAP_OK)
	virtual	int dispatch();
	virtual	int dispatch(struct soap *soap);

	///
	/// Service operations (you should define these):
	/// Note: compile with -DWITH_PURE_VIRTUAL for pure virtual methods
	///

	/// Web service operation 'GetServiceCapabilities' (returns error code or SOAP_OK)
	virtual	int GetServiceCapabilities(_videoanalyticsdevicews__GetServiceCapabilities *videoanalyticsdevicews__GetServiceCapabilities, _videoanalyticsdevicews__GetServiceCapabilitiesResponse &videoanalyticsdevicews__GetServiceCapabilitiesResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteAnalyticsEngineControl' (returns error code or SOAP_OK)
	virtual	int DeleteAnalyticsEngineControl(_videoanalyticsdevicews__DeleteAnalyticsEngineControl *videoanalyticsdevicews__DeleteAnalyticsEngineControl, _videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse &videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'CreateAnalyticsEngineControl' (returns error code or SOAP_OK)
	virtual	int CreateAnalyticsEngineControl(_videoanalyticsdevicews__CreateAnalyticsEngineControl *videoanalyticsdevicews__CreateAnalyticsEngineControl, _videoanalyticsdevicews__CreateAnalyticsEngineControlResponse &videoanalyticsdevicews__CreateAnalyticsEngineControlResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetAnalyticsEngineControl' (returns error code or SOAP_OK)
	virtual	int SetAnalyticsEngineControl(_videoanalyticsdevicews__SetAnalyticsEngineControl *videoanalyticsdevicews__SetAnalyticsEngineControl, _videoanalyticsdevicews__SetAnalyticsEngineControlResponse &videoanalyticsdevicews__SetAnalyticsEngineControlResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngineControl' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngineControl(_videoanalyticsdevicews__GetAnalyticsEngineControl *videoanalyticsdevicews__GetAnalyticsEngineControl, _videoanalyticsdevicews__GetAnalyticsEngineControlResponse &videoanalyticsdevicews__GetAnalyticsEngineControlResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngineControls' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngineControls(_videoanalyticsdevicews__GetAnalyticsEngineControls *videoanalyticsdevicews__GetAnalyticsEngineControls, _videoanalyticsdevicews__GetAnalyticsEngineControlsResponse &videoanalyticsdevicews__GetAnalyticsEngineControlsResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngine' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngine(_videoanalyticsdevicews__GetAnalyticsEngine *videoanalyticsdevicews__GetAnalyticsEngine, _videoanalyticsdevicews__GetAnalyticsEngineResponse &videoanalyticsdevicews__GetAnalyticsEngineResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngines' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngines(_videoanalyticsdevicews__GetAnalyticsEngines *videoanalyticsdevicews__GetAnalyticsEngines, _videoanalyticsdevicews__GetAnalyticsEnginesResponse &videoanalyticsdevicews__GetAnalyticsEnginesResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetVideoAnalyticsConfiguration' (returns error code or SOAP_OK)
	virtual	int SetVideoAnalyticsConfiguration(_videoanalyticsdevicews__SetVideoAnalyticsConfiguration *videoanalyticsdevicews__SetVideoAnalyticsConfiguration, _videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse &videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetAnalyticsEngineInput' (returns error code or SOAP_OK)
	virtual	int SetAnalyticsEngineInput(_videoanalyticsdevicews__SetAnalyticsEngineInput *videoanalyticsdevicews__SetAnalyticsEngineInput, _videoanalyticsdevicews__SetAnalyticsEngineInputResponse &videoanalyticsdevicews__SetAnalyticsEngineInputResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngineInput' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngineInput(_videoanalyticsdevicews__GetAnalyticsEngineInput *videoanalyticsdevicews__GetAnalyticsEngineInput, _videoanalyticsdevicews__GetAnalyticsEngineInputResponse &videoanalyticsdevicews__GetAnalyticsEngineInputResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngineInputs' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngineInputs(_videoanalyticsdevicews__GetAnalyticsEngineInputs *videoanalyticsdevicews__GetAnalyticsEngineInputs, _videoanalyticsdevicews__GetAnalyticsEngineInputsResponse &videoanalyticsdevicews__GetAnalyticsEngineInputsResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsDeviceStreamUri' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsDeviceStreamUri(_videoanalyticsdevicews__GetAnalyticsDeviceStreamUri *videoanalyticsdevicews__GetAnalyticsDeviceStreamUri, _videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse &videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetVideoAnalyticsConfiguration' (returns error code or SOAP_OK)
	virtual	int GetVideoAnalyticsConfiguration(_videoanalyticsdevicews__GetVideoAnalyticsConfiguration *videoanalyticsdevicews__GetVideoAnalyticsConfiguration, _videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse &videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'CreateAnalyticsEngineInputs' (returns error code or SOAP_OK)
	virtual	int CreateAnalyticsEngineInputs(_videoanalyticsdevicews__CreateAnalyticsEngineInputs *videoanalyticsdevicews__CreateAnalyticsEngineInputs, _videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse &videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteAnalyticsEngineInputs' (returns error code or SOAP_OK)
	virtual	int DeleteAnalyticsEngineInputs(_videoanalyticsdevicews__DeleteAnalyticsEngineInputs *videoanalyticsdevicews__DeleteAnalyticsEngineInputs, _videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse &videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsState' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsState(_videoanalyticsdevicews__GetAnalyticsState *videoanalyticsdevicews__GetAnalyticsState, _videoanalyticsdevicews__GetAnalyticsStateResponse &videoanalyticsdevicews__GetAnalyticsStateResponse) SOAP_PURE_VIRTUAL;
};
#endif
