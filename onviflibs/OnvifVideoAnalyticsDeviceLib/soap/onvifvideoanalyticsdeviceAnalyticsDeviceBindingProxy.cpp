/* onvifvideoanalyticsdeviceAnalyticsDeviceBindingProxy.cpp
   Generated by gSOAP 2.8.22 from rcx.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "onvifvideoanalyticsdeviceAnalyticsDeviceBindingProxy.h"

AnalyticsDeviceBindingProxy::AnalyticsDeviceBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	AnalyticsDeviceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AnalyticsDeviceBindingProxy::AnalyticsDeviceBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	AnalyticsDeviceBindingProxy_init(_soap->imode, _soap->omode);
}

AnalyticsDeviceBindingProxy::AnalyticsDeviceBindingProxy(const char *url)
{	this->soap = soap_new();
	this->soap_own = true;
	AnalyticsDeviceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

AnalyticsDeviceBindingProxy::AnalyticsDeviceBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AnalyticsDeviceBindingProxy_init(iomode, iomode);
}

AnalyticsDeviceBindingProxy::AnalyticsDeviceBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AnalyticsDeviceBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

AnalyticsDeviceBindingProxy::AnalyticsDeviceBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	AnalyticsDeviceBindingProxy_init(imode, omode);
}

AnalyticsDeviceBindingProxy::~AnalyticsDeviceBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void AnalyticsDeviceBindingProxy::AnalyticsDeviceBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"videoanalyticsdevicews", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void AnalyticsDeviceBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void AnalyticsDeviceBindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	AnalyticsDeviceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void AnalyticsDeviceBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void AnalyticsDeviceBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
}

const SOAP_ENV__Header *AnalyticsDeviceBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *AnalyticsDeviceBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *AnalyticsDeviceBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *AnalyticsDeviceBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int AnalyticsDeviceBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int AnalyticsDeviceBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void AnalyticsDeviceBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AnalyticsDeviceBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *AnalyticsDeviceBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int AnalyticsDeviceBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__GetServiceCapabilities *videoanalyticsdevicews__GetServiceCapabilities, _videoanalyticsdevicews__GetServiceCapabilitiesResponse &videoanalyticsdevicews__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__GetServiceCapabilities soap_tmp___videoanalyticsdevicews__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetServiceCapabilities";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__GetServiceCapabilities.videoanalyticsdevicews__GetServiceCapabilities = videoanalyticsdevicews__GetServiceCapabilities;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__GetServiceCapabilities(soap, &soap_tmp___videoanalyticsdevicews__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__GetServiceCapabilities(soap, &soap_tmp___videoanalyticsdevicews__GetServiceCapabilities, "-videoanalyticsdevicews:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__GetServiceCapabilities(soap, &soap_tmp___videoanalyticsdevicews__GetServiceCapabilities, "-videoanalyticsdevicews:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__GetServiceCapabilitiesResponse.soap_get(soap, "videoanalyticsdevicews:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::DeleteAnalyticsEngineControl(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__DeleteAnalyticsEngineControl *videoanalyticsdevicews__DeleteAnalyticsEngineControl, _videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse &videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__DeleteAnalyticsEngineControl soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineControl;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineControl";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineControl.videoanalyticsdevicews__DeleteAnalyticsEngineControl = videoanalyticsdevicews__DeleteAnalyticsEngineControl;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__DeleteAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineControl);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__DeleteAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineControl, "-videoanalyticsdevicews:DeleteAnalyticsEngineControl", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__DeleteAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineControl, "-videoanalyticsdevicews:DeleteAnalyticsEngineControl", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__DeleteAnalyticsEngineControlResponse.soap_get(soap, "videoanalyticsdevicews:DeleteAnalyticsEngineControlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::CreateAnalyticsEngineControl(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__CreateAnalyticsEngineControl *videoanalyticsdevicews__CreateAnalyticsEngineControl, _videoanalyticsdevicews__CreateAnalyticsEngineControlResponse &videoanalyticsdevicews__CreateAnalyticsEngineControlResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__CreateAnalyticsEngineControl soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineControl;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineControl";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineControl.videoanalyticsdevicews__CreateAnalyticsEngineControl = videoanalyticsdevicews__CreateAnalyticsEngineControl;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__CreateAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineControl);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__CreateAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineControl, "-videoanalyticsdevicews:CreateAnalyticsEngineControl", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__CreateAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineControl, "-videoanalyticsdevicews:CreateAnalyticsEngineControl", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__CreateAnalyticsEngineControlResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__CreateAnalyticsEngineControlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__CreateAnalyticsEngineControlResponse.soap_get(soap, "videoanalyticsdevicews:CreateAnalyticsEngineControlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::SetAnalyticsEngineControl(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__SetAnalyticsEngineControl *videoanalyticsdevicews__SetAnalyticsEngineControl, _videoanalyticsdevicews__SetAnalyticsEngineControlResponse &videoanalyticsdevicews__SetAnalyticsEngineControlResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__SetAnalyticsEngineControl soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineControl;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineControl";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineControl.videoanalyticsdevicews__SetAnalyticsEngineControl = videoanalyticsdevicews__SetAnalyticsEngineControl;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__SetAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineControl);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__SetAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineControl, "-videoanalyticsdevicews:SetAnalyticsEngineControl", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__SetAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineControl, "-videoanalyticsdevicews:SetAnalyticsEngineControl", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__SetAnalyticsEngineControlResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__SetAnalyticsEngineControlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__SetAnalyticsEngineControlResponse.soap_get(soap, "videoanalyticsdevicews:SetAnalyticsEngineControlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::GetAnalyticsEngineControl(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__GetAnalyticsEngineControl *videoanalyticsdevicews__GetAnalyticsEngineControl, _videoanalyticsdevicews__GetAnalyticsEngineControlResponse &videoanalyticsdevicews__GetAnalyticsEngineControlResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__GetAnalyticsEngineControl soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControl;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControl";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControl.videoanalyticsdevicews__GetAnalyticsEngineControl = videoanalyticsdevicews__GetAnalyticsEngineControl;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__GetAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControl);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__GetAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControl, "-videoanalyticsdevicews:GetAnalyticsEngineControl", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__GetAnalyticsEngineControl(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControl, "-videoanalyticsdevicews:GetAnalyticsEngineControl", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__GetAnalyticsEngineControlResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEngineControlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEngineControlResponse.soap_get(soap, "videoanalyticsdevicews:GetAnalyticsEngineControlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::GetAnalyticsEngineControls(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__GetAnalyticsEngineControls *videoanalyticsdevicews__GetAnalyticsEngineControls, _videoanalyticsdevicews__GetAnalyticsEngineControlsResponse &videoanalyticsdevicews__GetAnalyticsEngineControlsResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__GetAnalyticsEngineControls soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControls;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControls";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControls.videoanalyticsdevicews__GetAnalyticsEngineControls = videoanalyticsdevicews__GetAnalyticsEngineControls;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__GetAnalyticsEngineControls(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControls);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__GetAnalyticsEngineControls(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControls, "-videoanalyticsdevicews:GetAnalyticsEngineControls", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__GetAnalyticsEngineControls(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineControls, "-videoanalyticsdevicews:GetAnalyticsEngineControls", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__GetAnalyticsEngineControlsResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEngineControlsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEngineControlsResponse.soap_get(soap, "videoanalyticsdevicews:GetAnalyticsEngineControlsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::GetAnalyticsEngine(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__GetAnalyticsEngine *videoanalyticsdevicews__GetAnalyticsEngine, _videoanalyticsdevicews__GetAnalyticsEngineResponse &videoanalyticsdevicews__GetAnalyticsEngineResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__GetAnalyticsEngine soap_tmp___videoanalyticsdevicews__GetAnalyticsEngine;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngine";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__GetAnalyticsEngine.videoanalyticsdevicews__GetAnalyticsEngine = videoanalyticsdevicews__GetAnalyticsEngine;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__GetAnalyticsEngine(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngine);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__GetAnalyticsEngine(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngine, "-videoanalyticsdevicews:GetAnalyticsEngine", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__GetAnalyticsEngine(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngine, "-videoanalyticsdevicews:GetAnalyticsEngine", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__GetAnalyticsEngineResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEngineResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEngineResponse.soap_get(soap, "videoanalyticsdevicews:GetAnalyticsEngineResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::GetAnalyticsEngines(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__GetAnalyticsEngines *videoanalyticsdevicews__GetAnalyticsEngines, _videoanalyticsdevicews__GetAnalyticsEnginesResponse &videoanalyticsdevicews__GetAnalyticsEnginesResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__GetAnalyticsEngines soap_tmp___videoanalyticsdevicews__GetAnalyticsEngines;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngines";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__GetAnalyticsEngines.videoanalyticsdevicews__GetAnalyticsEngines = videoanalyticsdevicews__GetAnalyticsEngines;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__GetAnalyticsEngines(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngines);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__GetAnalyticsEngines(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngines, "-videoanalyticsdevicews:GetAnalyticsEngines", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__GetAnalyticsEngines(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngines, "-videoanalyticsdevicews:GetAnalyticsEngines", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__GetAnalyticsEnginesResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEnginesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEnginesResponse.soap_get(soap, "videoanalyticsdevicews:GetAnalyticsEnginesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::SetVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__SetVideoAnalyticsConfiguration *videoanalyticsdevicews__SetVideoAnalyticsConfiguration, _videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse &videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__SetVideoAnalyticsConfiguration soap_tmp___videoanalyticsdevicews__SetVideoAnalyticsConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetVideoAnalyticsConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__SetVideoAnalyticsConfiguration.videoanalyticsdevicews__SetVideoAnalyticsConfiguration = videoanalyticsdevicews__SetVideoAnalyticsConfiguration;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__SetVideoAnalyticsConfiguration(soap, &soap_tmp___videoanalyticsdevicews__SetVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__SetVideoAnalyticsConfiguration(soap, &soap_tmp___videoanalyticsdevicews__SetVideoAnalyticsConfiguration, "-videoanalyticsdevicews:SetVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__SetVideoAnalyticsConfiguration(soap, &soap_tmp___videoanalyticsdevicews__SetVideoAnalyticsConfiguration, "-videoanalyticsdevicews:SetVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__SetVideoAnalyticsConfigurationResponse.soap_get(soap, "videoanalyticsdevicews:SetVideoAnalyticsConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::SetAnalyticsEngineInput(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__SetAnalyticsEngineInput *videoanalyticsdevicews__SetAnalyticsEngineInput, _videoanalyticsdevicews__SetAnalyticsEngineInputResponse &videoanalyticsdevicews__SetAnalyticsEngineInputResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__SetAnalyticsEngineInput soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineInput;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineInput";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineInput.videoanalyticsdevicews__SetAnalyticsEngineInput = videoanalyticsdevicews__SetAnalyticsEngineInput;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__SetAnalyticsEngineInput(soap, &soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineInput);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__SetAnalyticsEngineInput(soap, &soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineInput, "-videoanalyticsdevicews:SetAnalyticsEngineInput", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__SetAnalyticsEngineInput(soap, &soap_tmp___videoanalyticsdevicews__SetAnalyticsEngineInput, "-videoanalyticsdevicews:SetAnalyticsEngineInput", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__SetAnalyticsEngineInputResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__SetAnalyticsEngineInputResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__SetAnalyticsEngineInputResponse.soap_get(soap, "videoanalyticsdevicews:SetAnalyticsEngineInputResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::GetAnalyticsEngineInput(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__GetAnalyticsEngineInput *videoanalyticsdevicews__GetAnalyticsEngineInput, _videoanalyticsdevicews__GetAnalyticsEngineInputResponse &videoanalyticsdevicews__GetAnalyticsEngineInputResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__GetAnalyticsEngineInput soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInput;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInput";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInput.videoanalyticsdevicews__GetAnalyticsEngineInput = videoanalyticsdevicews__GetAnalyticsEngineInput;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__GetAnalyticsEngineInput(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInput);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__GetAnalyticsEngineInput(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInput, "-videoanalyticsdevicews:GetAnalyticsEngineInput", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__GetAnalyticsEngineInput(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInput, "-videoanalyticsdevicews:GetAnalyticsEngineInput", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__GetAnalyticsEngineInputResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEngineInputResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEngineInputResponse.soap_get(soap, "videoanalyticsdevicews:GetAnalyticsEngineInputResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::GetAnalyticsEngineInputs(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__GetAnalyticsEngineInputs *videoanalyticsdevicews__GetAnalyticsEngineInputs, _videoanalyticsdevicews__GetAnalyticsEngineInputsResponse &videoanalyticsdevicews__GetAnalyticsEngineInputsResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__GetAnalyticsEngineInputs soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInputs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInputs";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInputs.videoanalyticsdevicews__GetAnalyticsEngineInputs = videoanalyticsdevicews__GetAnalyticsEngineInputs;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__GetAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInputs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__GetAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInputs, "-videoanalyticsdevicews:GetAnalyticsEngineInputs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__GetAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsEngineInputs, "-videoanalyticsdevicews:GetAnalyticsEngineInputs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__GetAnalyticsEngineInputsResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEngineInputsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsEngineInputsResponse.soap_get(soap, "videoanalyticsdevicews:GetAnalyticsEngineInputsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::GetAnalyticsDeviceStreamUri(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__GetAnalyticsDeviceStreamUri *videoanalyticsdevicews__GetAnalyticsDeviceStreamUri, _videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse &videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__GetAnalyticsDeviceStreamUri soap_tmp___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsDeviceStreamUri";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri.videoanalyticsdevicews__GetAnalyticsDeviceStreamUri = videoanalyticsdevicews__GetAnalyticsDeviceStreamUri;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri, "-videoanalyticsdevicews:GetAnalyticsDeviceStreamUri", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsDeviceStreamUri, "-videoanalyticsdevicews:GetAnalyticsDeviceStreamUri", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsDeviceStreamUriResponse.soap_get(soap, "videoanalyticsdevicews:GetAnalyticsDeviceStreamUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::GetVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__GetVideoAnalyticsConfiguration *videoanalyticsdevicews__GetVideoAnalyticsConfiguration, _videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse &videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__GetVideoAnalyticsConfiguration soap_tmp___videoanalyticsdevicews__GetVideoAnalyticsConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetVideoAnalyticsConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__GetVideoAnalyticsConfiguration.videoanalyticsdevicews__GetVideoAnalyticsConfiguration = videoanalyticsdevicews__GetVideoAnalyticsConfiguration;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__GetVideoAnalyticsConfiguration(soap, &soap_tmp___videoanalyticsdevicews__GetVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__GetVideoAnalyticsConfiguration(soap, &soap_tmp___videoanalyticsdevicews__GetVideoAnalyticsConfiguration, "-videoanalyticsdevicews:GetVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__GetVideoAnalyticsConfiguration(soap, &soap_tmp___videoanalyticsdevicews__GetVideoAnalyticsConfiguration, "-videoanalyticsdevicews:GetVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__GetVideoAnalyticsConfigurationResponse.soap_get(soap, "videoanalyticsdevicews:GetVideoAnalyticsConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::CreateAnalyticsEngineInputs(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__CreateAnalyticsEngineInputs *videoanalyticsdevicews__CreateAnalyticsEngineInputs, _videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse &videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__CreateAnalyticsEngineInputs soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineInputs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineInputs";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineInputs.videoanalyticsdevicews__CreateAnalyticsEngineInputs = videoanalyticsdevicews__CreateAnalyticsEngineInputs;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__CreateAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineInputs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__CreateAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineInputs, "-videoanalyticsdevicews:CreateAnalyticsEngineInputs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__CreateAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__CreateAnalyticsEngineInputs, "-videoanalyticsdevicews:CreateAnalyticsEngineInputs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__CreateAnalyticsEngineInputsResponse.soap_get(soap, "videoanalyticsdevicews:CreateAnalyticsEngineInputsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::DeleteAnalyticsEngineInputs(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__DeleteAnalyticsEngineInputs *videoanalyticsdevicews__DeleteAnalyticsEngineInputs, _videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse &videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__DeleteAnalyticsEngineInputs soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineInputs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineInputs";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineInputs.videoanalyticsdevicews__DeleteAnalyticsEngineInputs = videoanalyticsdevicews__DeleteAnalyticsEngineInputs;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__DeleteAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineInputs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__DeleteAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineInputs, "-videoanalyticsdevicews:DeleteAnalyticsEngineInputs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__DeleteAnalyticsEngineInputs(soap, &soap_tmp___videoanalyticsdevicews__DeleteAnalyticsEngineInputs, "-videoanalyticsdevicews:DeleteAnalyticsEngineInputs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__DeleteAnalyticsEngineInputsResponse.soap_get(soap, "videoanalyticsdevicews:DeleteAnalyticsEngineInputsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AnalyticsDeviceBindingProxy::GetAnalyticsState(const char *endpoint, const char *soap_action, _videoanalyticsdevicews__GetAnalyticsState *videoanalyticsdevicews__GetAnalyticsState, _videoanalyticsdevicews__GetAnalyticsStateResponse &videoanalyticsdevicews__GetAnalyticsStateResponse)
{	struct soap *soap = this->soap;
	struct __videoanalyticsdevicews__GetAnalyticsState soap_tmp___videoanalyticsdevicews__GetAnalyticsState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsState";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___videoanalyticsdevicews__GetAnalyticsState.videoanalyticsdevicews__GetAnalyticsState = videoanalyticsdevicews__GetAnalyticsState;
	soap_serializeheader(soap);
	soap_serialize___videoanalyticsdevicews__GetAnalyticsState(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___videoanalyticsdevicews__GetAnalyticsState(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsState, "-videoanalyticsdevicews:GetAnalyticsState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___videoanalyticsdevicews__GetAnalyticsState(soap, &soap_tmp___videoanalyticsdevicews__GetAnalyticsState, "-videoanalyticsdevicews:GetAnalyticsState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&videoanalyticsdevicews__GetAnalyticsStateResponse)
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	videoanalyticsdevicews__GetAnalyticsStateResponse.soap_get(soap, "videoanalyticsdevicews:GetAnalyticsStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
