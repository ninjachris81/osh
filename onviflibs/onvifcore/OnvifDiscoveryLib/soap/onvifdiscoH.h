/* onvifdiscoH.h
   Generated by gSOAP 2.8.22 from rcx.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef onvifdiscoH_H
#define onvifdiscoH_H
#include "onvifdiscoStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 onvifdisco_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 onvifdisco_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 onvifdisco_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data), 0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data), 0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _wsa__ReplyAfter is a typedef element/attribute synonym for unsignedInt */

#ifndef SOAP_TYPE__wsa__ReplyAfter
#define SOAP_TYPE__wsa__ReplyAfter (29)
#endif

#define soap_default__wsa__ReplyAfter(soap, a) soap_default_unsignedInt(soap, a)


#define soap_out__wsa__ReplyAfter soap_out_unsignedInt


#define soap_in__wsa__ReplyAfter soap_in_unsignedInt


#define soap_put__wsa__ReplyAfter soap_put_unsignedInt


#define soap_get__wsa__ReplyAfter soap_get_unsignedInt


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedInt(soap, data), 0) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsdd__FaultCodeType
#define SOAP_TYPE_wsdd__FaultCodeType (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__FaultCodeType(struct soap*, enum wsdd__FaultCodeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__FaultCodeType(struct soap*, const char*, int, const enum wsdd__FaultCodeType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsdd__FaultCodeType2s(struct soap*, enum wsdd__FaultCodeType);
SOAP_FMAC3 enum wsdd__FaultCodeType * SOAP_FMAC4 soap_in_wsdd__FaultCodeType(struct soap*, const char*, enum wsdd__FaultCodeType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsdd__FaultCodeType(struct soap*, const char*, enum wsdd__FaultCodeType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__FaultCodeType(struct soap*, const enum wsdd__FaultCodeType *, const char*, const char*);

#ifndef soap_write_wsdd__FaultCodeType
#define soap_write_wsdd__FaultCodeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__FaultCodeType(soap, data), 0) || soap_put_wsdd__FaultCodeType(soap, data, "wsdd:FaultCodeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsdd__FaultCodeType * SOAP_FMAC4 soap_get_wsdd__FaultCodeType(struct soap*, enum wsdd__FaultCodeType *, const char*, const char*);

#ifndef soap_read_wsdd__FaultCodeType
#define soap_read_wsdd__FaultCodeType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__FaultCodeType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa__FaultSubcodeValues
#define SOAP_TYPE_wsa__FaultSubcodeValues (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__FaultSubcodeValues(struct soap*, enum wsa__FaultSubcodeValues *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__FaultSubcodeValues(struct soap*, const char*, int, const enum wsa__FaultSubcodeValues *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa__FaultSubcodeValues2s(struct soap*, enum wsa__FaultSubcodeValues);
SOAP_FMAC3 enum wsa__FaultSubcodeValues * SOAP_FMAC4 soap_in_wsa__FaultSubcodeValues(struct soap*, const char*, enum wsa__FaultSubcodeValues *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa__FaultSubcodeValues(struct soap*, const char*, enum wsa__FaultSubcodeValues *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__FaultSubcodeValues(struct soap*, const enum wsa__FaultSubcodeValues *, const char*, const char*);

#ifndef soap_write_wsa__FaultSubcodeValues
#define soap_write_wsa__FaultSubcodeValues(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__FaultSubcodeValues(soap, data), 0) || soap_put_wsa__FaultSubcodeValues(soap, data, "wsa:FaultSubcodeValues", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa__FaultSubcodeValues * SOAP_FMAC4 soap_get_wsa__FaultSubcodeValues(struct soap*, enum wsa__FaultSubcodeValues *, const char*, const char*);

#ifndef soap_read_wsa__FaultSubcodeValues
#define soap_read_wsa__FaultSubcodeValues(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa__FaultSubcodeValues(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa__RelationshipTypeValues
#define SOAP_TYPE_wsa__RelationshipTypeValues (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__RelationshipTypeValues(struct soap*, enum wsa__RelationshipTypeValues *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__RelationshipTypeValues(struct soap*, const char*, int, const enum wsa__RelationshipTypeValues *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa__RelationshipTypeValues2s(struct soap*, enum wsa__RelationshipTypeValues);
SOAP_FMAC3 enum wsa__RelationshipTypeValues * SOAP_FMAC4 soap_in_wsa__RelationshipTypeValues(struct soap*, const char*, enum wsa__RelationshipTypeValues *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa__RelationshipTypeValues(struct soap*, const char*, enum wsa__RelationshipTypeValues *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__RelationshipTypeValues(struct soap*, const enum wsa__RelationshipTypeValues *, const char*, const char*);

#ifndef soap_write_wsa__RelationshipTypeValues
#define soap_write_wsa__RelationshipTypeValues(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__RelationshipTypeValues(soap, data), 0) || soap_put_wsa__RelationshipTypeValues(soap, data, "wsa:RelationshipTypeValues", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa__RelationshipTypeValues * SOAP_FMAC4 soap_get_wsa__RelationshipTypeValues(struct soap*, enum wsa__RelationshipTypeValues *, const char*, const char*);

#ifndef soap_read_wsa__RelationshipTypeValues
#define soap_read_wsa__RelationshipTypeValues(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa__RelationshipTypeValues(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___discows__Probe
#define SOAP_TYPE___discows__Probe (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___discows__Probe(struct soap*, struct __discows__Probe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___discows__Probe(struct soap*, const struct __discows__Probe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___discows__Probe(struct soap*, const char*, int, const struct __discows__Probe *, const char*);
SOAP_FMAC3 struct __discows__Probe * SOAP_FMAC4 soap_in___discows__Probe(struct soap*, const char*, struct __discows__Probe *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___discows__Probe(struct soap*, const struct __discows__Probe *, const char*, const char*);

#ifndef soap_write___discows__Probe
#define soap_write___discows__Probe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___discows__Probe(soap, data), 0) || soap_put___discows__Probe(soap, data, "-discows:Probe", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __discows__Probe * SOAP_FMAC4 soap_get___discows__Probe(struct soap*, struct __discows__Probe *, const char*, const char*);

#ifndef soap_read___discows__Probe
#define soap_read___discows__Probe(soap, data) ( soap_begin_recv(soap) || !soap_get___discows__Probe(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __discows__Probe * SOAP_FMAC2 soap_instantiate___discows__Probe(struct soap*, int, const char*, const char*, size_t*);

inline struct __discows__Probe * soap_new___discows__Probe(struct soap *soap, int n = -1) { return soap_instantiate___discows__Probe(soap, n, NULL, NULL, NULL); }

inline struct __discows__Probe * soap_new_req___discows__Probe(struct soap *soap, struct wsdd__ProbeType& discows__Probe) { struct __discows__Probe *_p = soap_instantiate___discows__Probe(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___discows__Probe(soap, _p); _p->discows__Probe = discows__Probe; } return _p; }

inline struct __discows__Probe * soap_new_set___discows__Probe(struct soap *soap, struct wsdd__ProbeType& discows__Probe) { struct __discows__Probe *_p = soap_instantiate___discows__Probe(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___discows__Probe(soap, _p); _p->discows__Probe = discows__Probe; } return _p; }

inline void soap_delete___discows__Probe(struct soap *soap, struct __discows__Probe *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___discows__Probe(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___discows__Bye
#define SOAP_TYPE___discows__Bye (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___discows__Bye(struct soap*, struct __discows__Bye *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___discows__Bye(struct soap*, const struct __discows__Bye *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___discows__Bye(struct soap*, const char*, int, const struct __discows__Bye *, const char*);
SOAP_FMAC3 struct __discows__Bye * SOAP_FMAC4 soap_in___discows__Bye(struct soap*, const char*, struct __discows__Bye *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___discows__Bye(struct soap*, const struct __discows__Bye *, const char*, const char*);

#ifndef soap_write___discows__Bye
#define soap_write___discows__Bye(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___discows__Bye(soap, data), 0) || soap_put___discows__Bye(soap, data, "-discows:Bye", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __discows__Bye * SOAP_FMAC4 soap_get___discows__Bye(struct soap*, struct __discows__Bye *, const char*, const char*);

#ifndef soap_read___discows__Bye
#define soap_read___discows__Bye(soap, data) ( soap_begin_recv(soap) || !soap_get___discows__Bye(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __discows__Bye * SOAP_FMAC2 soap_instantiate___discows__Bye(struct soap*, int, const char*, const char*, size_t*);

inline struct __discows__Bye * soap_new___discows__Bye(struct soap *soap, int n = -1) { return soap_instantiate___discows__Bye(soap, n, NULL, NULL, NULL); }

inline struct __discows__Bye * soap_new_req___discows__Bye(struct soap *soap, struct wsdd__ByeType& discows__Bye) { struct __discows__Bye *_p = soap_instantiate___discows__Bye(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___discows__Bye(soap, _p); _p->discows__Bye = discows__Bye; } return _p; }

inline struct __discows__Bye * soap_new_set___discows__Bye(struct soap *soap, struct wsdd__ByeType& discows__Bye) { struct __discows__Bye *_p = soap_instantiate___discows__Bye(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___discows__Bye(soap, _p); _p->discows__Bye = discows__Bye; } return _p; }

inline void soap_delete___discows__Bye(struct soap *soap, struct __discows__Bye *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___discows__Bye(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___discows__Hello
#define SOAP_TYPE___discows__Hello (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___discows__Hello(struct soap*, struct __discows__Hello *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___discows__Hello(struct soap*, const struct __discows__Hello *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___discows__Hello(struct soap*, const char*, int, const struct __discows__Hello *, const char*);
SOAP_FMAC3 struct __discows__Hello * SOAP_FMAC4 soap_in___discows__Hello(struct soap*, const char*, struct __discows__Hello *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___discows__Hello(struct soap*, const struct __discows__Hello *, const char*, const char*);

#ifndef soap_write___discows__Hello
#define soap_write___discows__Hello(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___discows__Hello(soap, data), 0) || soap_put___discows__Hello(soap, data, "-discows:Hello", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __discows__Hello * SOAP_FMAC4 soap_get___discows__Hello(struct soap*, struct __discows__Hello *, const char*, const char*);

#ifndef soap_read___discows__Hello
#define soap_read___discows__Hello(soap, data) ( soap_begin_recv(soap) || !soap_get___discows__Hello(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __discows__Hello * SOAP_FMAC2 soap_instantiate___discows__Hello(struct soap*, int, const char*, const char*, size_t*);

inline struct __discows__Hello * soap_new___discows__Hello(struct soap *soap, int n = -1) { return soap_instantiate___discows__Hello(soap, n, NULL, NULL, NULL); }

inline struct __discows__Hello * soap_new_req___discows__Hello(struct soap *soap, struct wsdd__HelloType& discows__Hello) { struct __discows__Hello *_p = soap_instantiate___discows__Hello(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___discows__Hello(soap, _p); _p->discows__Hello = discows__Hello; } return _p; }

inline struct __discows__Hello * soap_new_set___discows__Hello(struct soap *soap, struct wsdd__HelloType& discows__Hello) { struct __discows__Hello *_p = soap_instantiate___discows__Hello(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___discows__Hello(soap, _p); _p->discows__Hello = discows__Hello; } return _p; }

inline void soap_delete___discows__Hello(struct soap *soap, struct __discows__Hello *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___discows__Hello(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___wsdd__ResolveMatches
#define SOAP_TYPE___wsdd__ResolveMatches (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__ResolveMatches(struct soap*, struct __wsdd__ResolveMatches *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__ResolveMatches(struct soap*, const struct __wsdd__ResolveMatches *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__ResolveMatches(struct soap*, const char*, int, const struct __wsdd__ResolveMatches *, const char*);
SOAP_FMAC3 struct __wsdd__ResolveMatches * SOAP_FMAC4 soap_in___wsdd__ResolveMatches(struct soap*, const char*, struct __wsdd__ResolveMatches *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__ResolveMatches(struct soap*, const struct __wsdd__ResolveMatches *, const char*, const char*);

#ifndef soap_write___wsdd__ResolveMatches
#define soap_write___wsdd__ResolveMatches(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__ResolveMatches(soap, data), 0) || soap_put___wsdd__ResolveMatches(soap, data, "-wsdd:ResolveMatches", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__ResolveMatches * SOAP_FMAC4 soap_get___wsdd__ResolveMatches(struct soap*, struct __wsdd__ResolveMatches *, const char*, const char*);

#ifndef soap_read___wsdd__ResolveMatches
#define soap_read___wsdd__ResolveMatches(soap, data) ( soap_begin_recv(soap) || !soap_get___wsdd__ResolveMatches(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __wsdd__ResolveMatches * SOAP_FMAC2 soap_instantiate___wsdd__ResolveMatches(struct soap*, int, const char*, const char*, size_t*);

inline struct __wsdd__ResolveMatches * soap_new___wsdd__ResolveMatches(struct soap *soap, int n = -1) { return soap_instantiate___wsdd__ResolveMatches(soap, n, NULL, NULL, NULL); }

inline struct __wsdd__ResolveMatches * soap_new_req___wsdd__ResolveMatches(struct soap *soap) { struct __wsdd__ResolveMatches *_p = soap_instantiate___wsdd__ResolveMatches(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__ResolveMatches(soap, _p); } return _p; }

inline struct __wsdd__ResolveMatches * soap_new_set___wsdd__ResolveMatches(struct soap *soap, struct wsdd__ResolveMatchesType *wsdd__ResolveMatches) { struct __wsdd__ResolveMatches *_p = soap_instantiate___wsdd__ResolveMatches(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__ResolveMatches(soap, _p); _p->wsdd__ResolveMatches = wsdd__ResolveMatches; } return _p; }

inline void soap_delete___wsdd__ResolveMatches(struct soap *soap, struct __wsdd__ResolveMatches *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___wsdd__ResolveMatches(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___wsdd__Resolve
#define SOAP_TYPE___wsdd__Resolve (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Resolve(struct soap*, struct __wsdd__Resolve *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Resolve(struct soap*, const struct __wsdd__Resolve *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Resolve(struct soap*, const char*, int, const struct __wsdd__Resolve *, const char*);
SOAP_FMAC3 struct __wsdd__Resolve * SOAP_FMAC4 soap_in___wsdd__Resolve(struct soap*, const char*, struct __wsdd__Resolve *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Resolve(struct soap*, const struct __wsdd__Resolve *, const char*, const char*);

#ifndef soap_write___wsdd__Resolve
#define soap_write___wsdd__Resolve(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Resolve(soap, data), 0) || soap_put___wsdd__Resolve(soap, data, "-wsdd:Resolve", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Resolve * SOAP_FMAC4 soap_get___wsdd__Resolve(struct soap*, struct __wsdd__Resolve *, const char*, const char*);

#ifndef soap_read___wsdd__Resolve
#define soap_read___wsdd__Resolve(soap, data) ( soap_begin_recv(soap) || !soap_get___wsdd__Resolve(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __wsdd__Resolve * SOAP_FMAC2 soap_instantiate___wsdd__Resolve(struct soap*, int, const char*, const char*, size_t*);

inline struct __wsdd__Resolve * soap_new___wsdd__Resolve(struct soap *soap, int n = -1) { return soap_instantiate___wsdd__Resolve(soap, n, NULL, NULL, NULL); }

inline struct __wsdd__Resolve * soap_new_req___wsdd__Resolve(struct soap *soap) { struct __wsdd__Resolve *_p = soap_instantiate___wsdd__Resolve(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__Resolve(soap, _p); } return _p; }

inline struct __wsdd__Resolve * soap_new_set___wsdd__Resolve(struct soap *soap, struct wsdd__ResolveType *wsdd__Resolve) { struct __wsdd__Resolve *_p = soap_instantiate___wsdd__Resolve(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__Resolve(soap, _p); _p->wsdd__Resolve = wsdd__Resolve; } return _p; }

inline void soap_delete___wsdd__Resolve(struct soap *soap, struct __wsdd__Resolve *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___wsdd__Resolve(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___wsdd__ProbeMatches
#define SOAP_TYPE___wsdd__ProbeMatches (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__ProbeMatches(struct soap*, struct __wsdd__ProbeMatches *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__ProbeMatches(struct soap*, const struct __wsdd__ProbeMatches *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__ProbeMatches(struct soap*, const char*, int, const struct __wsdd__ProbeMatches *, const char*);
SOAP_FMAC3 struct __wsdd__ProbeMatches * SOAP_FMAC4 soap_in___wsdd__ProbeMatches(struct soap*, const char*, struct __wsdd__ProbeMatches *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__ProbeMatches(struct soap*, const struct __wsdd__ProbeMatches *, const char*, const char*);

#ifndef soap_write___wsdd__ProbeMatches
#define soap_write___wsdd__ProbeMatches(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__ProbeMatches(soap, data), 0) || soap_put___wsdd__ProbeMatches(soap, data, "-wsdd:ProbeMatches", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__ProbeMatches * SOAP_FMAC4 soap_get___wsdd__ProbeMatches(struct soap*, struct __wsdd__ProbeMatches *, const char*, const char*);

#ifndef soap_read___wsdd__ProbeMatches
#define soap_read___wsdd__ProbeMatches(soap, data) ( soap_begin_recv(soap) || !soap_get___wsdd__ProbeMatches(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __wsdd__ProbeMatches * SOAP_FMAC2 soap_instantiate___wsdd__ProbeMatches(struct soap*, int, const char*, const char*, size_t*);

inline struct __wsdd__ProbeMatches * soap_new___wsdd__ProbeMatches(struct soap *soap, int n = -1) { return soap_instantiate___wsdd__ProbeMatches(soap, n, NULL, NULL, NULL); }

inline struct __wsdd__ProbeMatches * soap_new_req___wsdd__ProbeMatches(struct soap *soap) { struct __wsdd__ProbeMatches *_p = soap_instantiate___wsdd__ProbeMatches(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__ProbeMatches(soap, _p); } return _p; }

inline struct __wsdd__ProbeMatches * soap_new_set___wsdd__ProbeMatches(struct soap *soap, struct wsdd__ProbeMatchesType *wsdd__ProbeMatches) { struct __wsdd__ProbeMatches *_p = soap_instantiate___wsdd__ProbeMatches(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__ProbeMatches(soap, _p); _p->wsdd__ProbeMatches = wsdd__ProbeMatches; } return _p; }

inline void soap_delete___wsdd__ProbeMatches(struct soap *soap, struct __wsdd__ProbeMatches *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___wsdd__ProbeMatches(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___wsdd__Probe
#define SOAP_TYPE___wsdd__Probe (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Probe(struct soap*, struct __wsdd__Probe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Probe(struct soap*, const struct __wsdd__Probe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Probe(struct soap*, const char*, int, const struct __wsdd__Probe *, const char*);
SOAP_FMAC3 struct __wsdd__Probe * SOAP_FMAC4 soap_in___wsdd__Probe(struct soap*, const char*, struct __wsdd__Probe *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Probe(struct soap*, const struct __wsdd__Probe *, const char*, const char*);

#ifndef soap_write___wsdd__Probe
#define soap_write___wsdd__Probe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Probe(soap, data), 0) || soap_put___wsdd__Probe(soap, data, "-wsdd:Probe", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Probe * SOAP_FMAC4 soap_get___wsdd__Probe(struct soap*, struct __wsdd__Probe *, const char*, const char*);

#ifndef soap_read___wsdd__Probe
#define soap_read___wsdd__Probe(soap, data) ( soap_begin_recv(soap) || !soap_get___wsdd__Probe(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __wsdd__Probe * SOAP_FMAC2 soap_instantiate___wsdd__Probe(struct soap*, int, const char*, const char*, size_t*);

inline struct __wsdd__Probe * soap_new___wsdd__Probe(struct soap *soap, int n = -1) { return soap_instantiate___wsdd__Probe(soap, n, NULL, NULL, NULL); }

inline struct __wsdd__Probe * soap_new_req___wsdd__Probe(struct soap *soap) { struct __wsdd__Probe *_p = soap_instantiate___wsdd__Probe(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__Probe(soap, _p); } return _p; }

inline struct __wsdd__Probe * soap_new_set___wsdd__Probe(struct soap *soap, struct wsdd__ProbeType *wsdd__Probe) { struct __wsdd__Probe *_p = soap_instantiate___wsdd__Probe(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__Probe(soap, _p); _p->wsdd__Probe = wsdd__Probe; } return _p; }

inline void soap_delete___wsdd__Probe(struct soap *soap, struct __wsdd__Probe *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___wsdd__Probe(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___wsdd__Bye
#define SOAP_TYPE___wsdd__Bye (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Bye(struct soap*, struct __wsdd__Bye *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Bye(struct soap*, const struct __wsdd__Bye *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Bye(struct soap*, const char*, int, const struct __wsdd__Bye *, const char*);
SOAP_FMAC3 struct __wsdd__Bye * SOAP_FMAC4 soap_in___wsdd__Bye(struct soap*, const char*, struct __wsdd__Bye *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Bye(struct soap*, const struct __wsdd__Bye *, const char*, const char*);

#ifndef soap_write___wsdd__Bye
#define soap_write___wsdd__Bye(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Bye(soap, data), 0) || soap_put___wsdd__Bye(soap, data, "-wsdd:Bye", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Bye * SOAP_FMAC4 soap_get___wsdd__Bye(struct soap*, struct __wsdd__Bye *, const char*, const char*);

#ifndef soap_read___wsdd__Bye
#define soap_read___wsdd__Bye(soap, data) ( soap_begin_recv(soap) || !soap_get___wsdd__Bye(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __wsdd__Bye * SOAP_FMAC2 soap_instantiate___wsdd__Bye(struct soap*, int, const char*, const char*, size_t*);

inline struct __wsdd__Bye * soap_new___wsdd__Bye(struct soap *soap, int n = -1) { return soap_instantiate___wsdd__Bye(soap, n, NULL, NULL, NULL); }

inline struct __wsdd__Bye * soap_new_req___wsdd__Bye(struct soap *soap) { struct __wsdd__Bye *_p = soap_instantiate___wsdd__Bye(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__Bye(soap, _p); } return _p; }

inline struct __wsdd__Bye * soap_new_set___wsdd__Bye(struct soap *soap, struct wsdd__ByeType *wsdd__Bye) { struct __wsdd__Bye *_p = soap_instantiate___wsdd__Bye(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__Bye(soap, _p); _p->wsdd__Bye = wsdd__Bye; } return _p; }

inline void soap_delete___wsdd__Bye(struct soap *soap, struct __wsdd__Bye *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___wsdd__Bye(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___wsdd__Hello
#define SOAP_TYPE___wsdd__Hello (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Hello(struct soap*, struct __wsdd__Hello *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Hello(struct soap*, const struct __wsdd__Hello *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Hello(struct soap*, const char*, int, const struct __wsdd__Hello *, const char*);
SOAP_FMAC3 struct __wsdd__Hello * SOAP_FMAC4 soap_in___wsdd__Hello(struct soap*, const char*, struct __wsdd__Hello *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Hello(struct soap*, const struct __wsdd__Hello *, const char*, const char*);

#ifndef soap_write___wsdd__Hello
#define soap_write___wsdd__Hello(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Hello(soap, data), 0) || soap_put___wsdd__Hello(soap, data, "-wsdd:Hello", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Hello * SOAP_FMAC4 soap_get___wsdd__Hello(struct soap*, struct __wsdd__Hello *, const char*, const char*);

#ifndef soap_read___wsdd__Hello
#define soap_read___wsdd__Hello(soap, data) ( soap_begin_recv(soap) || !soap_get___wsdd__Hello(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __wsdd__Hello * SOAP_FMAC2 soap_instantiate___wsdd__Hello(struct soap*, int, const char*, const char*, size_t*);

inline struct __wsdd__Hello * soap_new___wsdd__Hello(struct soap *soap, int n = -1) { return soap_instantiate___wsdd__Hello(soap, n, NULL, NULL, NULL); }

inline struct __wsdd__Hello * soap_new_req___wsdd__Hello(struct soap *soap) { struct __wsdd__Hello *_p = soap_instantiate___wsdd__Hello(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__Hello(soap, _p); } return _p; }

inline struct __wsdd__Hello * soap_new_set___wsdd__Hello(struct soap *soap, struct wsdd__HelloType *wsdd__Hello) { struct __wsdd__Hello *_p = soap_instantiate___wsdd__Hello(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___wsdd__Hello(soap, _p); _p->wsdd__Hello = wsdd__Hello; } return _p; }

inline void soap_delete___wsdd__Hello(struct soap *soap, struct __wsdd__Hello *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___wsdd__Hello(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__AppSequenceType
#define SOAP_TYPE_wsdd__AppSequenceType (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__AppSequenceType(struct soap*, const struct wsdd__AppSequenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__AppSequenceType(struct soap*, const char*, int, const struct wsdd__AppSequenceType *, const char*);
SOAP_FMAC3 struct wsdd__AppSequenceType * SOAP_FMAC4 soap_in_wsdd__AppSequenceType(struct soap*, const char*, struct wsdd__AppSequenceType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__AppSequenceType(struct soap*, const struct wsdd__AppSequenceType *, const char*, const char*);

#ifndef soap_write_wsdd__AppSequenceType
#define soap_write_wsdd__AppSequenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__AppSequenceType(soap, data), 0) || soap_put_wsdd__AppSequenceType(soap, data, "wsdd:AppSequenceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__AppSequenceType * SOAP_FMAC4 soap_get_wsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *, const char*, const char*);

#ifndef soap_read_wsdd__AppSequenceType
#define soap_read_wsdd__AppSequenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__AppSequenceType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__AppSequenceType * SOAP_FMAC2 soap_instantiate_wsdd__AppSequenceType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__AppSequenceType * soap_new_wsdd__AppSequenceType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__AppSequenceType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__AppSequenceType * soap_new_req_wsdd__AppSequenceType(struct soap *soap, unsigned int InstanceId, unsigned int MessageNumber) { struct wsdd__AppSequenceType *_p = soap_instantiate_wsdd__AppSequenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__AppSequenceType(soap, _p); _p->InstanceId = InstanceId; _p->MessageNumber = MessageNumber; } return _p; }

inline struct wsdd__AppSequenceType * soap_new_set_wsdd__AppSequenceType(struct soap *soap, unsigned int InstanceId, char *SequenceId, unsigned int MessageNumber) { struct wsdd__AppSequenceType *_p = soap_instantiate_wsdd__AppSequenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__AppSequenceType(soap, _p); _p->InstanceId = InstanceId; _p->SequenceId = SequenceId; _p->MessageNumber = MessageNumber; } return _p; }

inline void soap_delete_wsdd__AppSequenceType(struct soap *soap, struct wsdd__AppSequenceType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__AppSequenceType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__SigType
#define SOAP_TYPE_wsdd__SigType (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__SigType(struct soap*, struct wsdd__SigType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__SigType(struct soap*, const struct wsdd__SigType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__SigType(struct soap*, const char*, int, const struct wsdd__SigType *, const char*);
SOAP_FMAC3 struct wsdd__SigType * SOAP_FMAC4 soap_in_wsdd__SigType(struct soap*, const char*, struct wsdd__SigType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__SigType(struct soap*, const struct wsdd__SigType *, const char*, const char*);

#ifndef soap_write_wsdd__SigType
#define soap_write_wsdd__SigType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__SigType(soap, data), 0) || soap_put_wsdd__SigType(soap, data, "wsdd:SigType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__SigType * SOAP_FMAC4 soap_get_wsdd__SigType(struct soap*, struct wsdd__SigType *, const char*, const char*);

#ifndef soap_read_wsdd__SigType
#define soap_read_wsdd__SigType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__SigType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__SigType * SOAP_FMAC2 soap_instantiate_wsdd__SigType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__SigType * soap_new_wsdd__SigType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__SigType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__SigType * soap_new_req_wsdd__SigType(struct soap *soap, char *Scheme, char *Refs, char *Sig) { struct wsdd__SigType *_p = soap_instantiate_wsdd__SigType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__SigType(soap, _p); _p->Scheme = Scheme; _p->Refs = Refs; _p->Sig = Sig; } return _p; }

inline struct wsdd__SigType * soap_new_set_wsdd__SigType(struct soap *soap, char *Scheme, char *KeyId, char *Refs, char *Sig) { struct wsdd__SigType *_p = soap_instantiate_wsdd__SigType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__SigType(soap, _p); _p->Scheme = Scheme; _p->KeyId = KeyId; _p->Refs = Refs; _p->Sig = Sig; } return _p; }

inline void soap_delete_wsdd__SigType(struct soap *soap, struct wsdd__SigType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__SigType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__SecurityType
#define SOAP_TYPE_wsdd__SecurityType (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__SecurityType(struct soap*, struct wsdd__SecurityType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__SecurityType(struct soap*, const struct wsdd__SecurityType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__SecurityType(struct soap*, const char*, int, const struct wsdd__SecurityType *, const char*);
SOAP_FMAC3 struct wsdd__SecurityType * SOAP_FMAC4 soap_in_wsdd__SecurityType(struct soap*, const char*, struct wsdd__SecurityType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__SecurityType(struct soap*, const struct wsdd__SecurityType *, const char*, const char*);

#ifndef soap_write_wsdd__SecurityType
#define soap_write_wsdd__SecurityType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__SecurityType(soap, data), 0) || soap_put_wsdd__SecurityType(soap, data, "wsdd:SecurityType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__SecurityType * SOAP_FMAC4 soap_get_wsdd__SecurityType(struct soap*, struct wsdd__SecurityType *, const char*, const char*);

#ifndef soap_read_wsdd__SecurityType
#define soap_read_wsdd__SecurityType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__SecurityType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__SecurityType * SOAP_FMAC2 soap_instantiate_wsdd__SecurityType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__SecurityType * soap_new_wsdd__SecurityType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__SecurityType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__SecurityType * soap_new_req_wsdd__SecurityType(struct soap *soap) { struct wsdd__SecurityType *_p = soap_instantiate_wsdd__SecurityType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__SecurityType(soap, _p); } return _p; }

inline struct wsdd__SecurityType * soap_new_set_wsdd__SecurityType(struct soap *soap, struct wsdd__SigType *Sig) { struct wsdd__SecurityType *_p = soap_instantiate_wsdd__SecurityType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__SecurityType(soap, _p); _p->Sig = Sig; } return _p; }

inline void soap_delete_wsdd__SecurityType(struct soap *soap, struct wsdd__SecurityType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__SecurityType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__ScopesType
#define SOAP_TYPE_wsdd__ScopesType (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ScopesType(struct soap*, struct wsdd__ScopesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ScopesType(struct soap*, const struct wsdd__ScopesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ScopesType(struct soap*, const char*, int, const struct wsdd__ScopesType *, const char*);
SOAP_FMAC3 struct wsdd__ScopesType * SOAP_FMAC4 soap_in_wsdd__ScopesType(struct soap*, const char*, struct wsdd__ScopesType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ScopesType(struct soap*, const struct wsdd__ScopesType *, const char*, const char*);

#ifndef soap_write_wsdd__ScopesType
#define soap_write_wsdd__ScopesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ScopesType(soap, data), 0) || soap_put_wsdd__ScopesType(soap, data, "wsdd:ScopesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ScopesType * SOAP_FMAC4 soap_get_wsdd__ScopesType(struct soap*, struct wsdd__ScopesType *, const char*, const char*);

#ifndef soap_read_wsdd__ScopesType
#define soap_read_wsdd__ScopesType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__ScopesType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__ScopesType * SOAP_FMAC2 soap_instantiate_wsdd__ScopesType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__ScopesType * soap_new_wsdd__ScopesType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__ScopesType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__ScopesType * soap_new_req_wsdd__ScopesType(struct soap *soap) { struct wsdd__ScopesType *_p = soap_instantiate_wsdd__ScopesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ScopesType(soap, _p); } return _p; }

inline struct wsdd__ScopesType * soap_new_set_wsdd__ScopesType(struct soap *soap, char *__item, char *MatchBy) { struct wsdd__ScopesType *_p = soap_instantiate_wsdd__ScopesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ScopesType(soap, _p); _p->__item = __item; _p->MatchBy = MatchBy; } return _p; }

inline void soap_delete_wsdd__ScopesType(struct soap *soap, struct wsdd__ScopesType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__ScopesType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__ResolveMatchType
#define SOAP_TYPE_wsdd__ResolveMatchType (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveMatchType(struct soap*, const struct wsdd__ResolveMatchType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ResolveMatchType(struct soap*, const char*, int, const struct wsdd__ResolveMatchType *, const char*);
SOAP_FMAC3 struct wsdd__ResolveMatchType * SOAP_FMAC4 soap_in_wsdd__ResolveMatchType(struct soap*, const char*, struct wsdd__ResolveMatchType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ResolveMatchType(struct soap*, const struct wsdd__ResolveMatchType *, const char*, const char*);

#ifndef soap_write_wsdd__ResolveMatchType
#define soap_write_wsdd__ResolveMatchType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ResolveMatchType(soap, data), 0) || soap_put_wsdd__ResolveMatchType(soap, data, "wsdd:ResolveMatchType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveMatchType * SOAP_FMAC4 soap_get_wsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *, const char*, const char*);

#ifndef soap_read_wsdd__ResolveMatchType
#define soap_read_wsdd__ResolveMatchType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__ResolveMatchType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__ResolveMatchType * SOAP_FMAC2 soap_instantiate_wsdd__ResolveMatchType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__ResolveMatchType * soap_new_wsdd__ResolveMatchType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__ResolveMatchType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__ResolveMatchType * soap_new_req_wsdd__ResolveMatchType(struct soap *soap, struct wsa__EndpointReferenceType& wsa__EndpointReference, unsigned int MetadataVersion) { struct wsdd__ResolveMatchType *_p = soap_instantiate_wsdd__ResolveMatchType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ResolveMatchType(soap, _p); _p->wsa__EndpointReference = wsa__EndpointReference; _p->MetadataVersion = MetadataVersion; } return _p; }

inline struct wsdd__ResolveMatchType * soap_new_set_wsdd__ResolveMatchType(struct soap *soap, struct wsa__EndpointReferenceType& wsa__EndpointReference, char *Types, struct wsdd__ScopesType *Scopes, char *XAddrs, unsigned int MetadataVersion) { struct wsdd__ResolveMatchType *_p = soap_instantiate_wsdd__ResolveMatchType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ResolveMatchType(soap, _p); _p->wsa__EndpointReference = wsa__EndpointReference; _p->Types = Types; _p->Scopes = Scopes; _p->XAddrs = XAddrs; _p->MetadataVersion = MetadataVersion; } return _p; }

inline void soap_delete_wsdd__ResolveMatchType(struct soap *soap, struct wsdd__ResolveMatchType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__ResolveMatchType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__ResolveMatchesType
#define SOAP_TYPE_wsdd__ResolveMatchesType (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveMatchesType(struct soap*, const struct wsdd__ResolveMatchesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ResolveMatchesType(struct soap*, const char*, int, const struct wsdd__ResolveMatchesType *, const char*);
SOAP_FMAC3 struct wsdd__ResolveMatchesType * SOAP_FMAC4 soap_in_wsdd__ResolveMatchesType(struct soap*, const char*, struct wsdd__ResolveMatchesType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ResolveMatchesType(struct soap*, const struct wsdd__ResolveMatchesType *, const char*, const char*);

#ifndef soap_write_wsdd__ResolveMatchesType
#define soap_write_wsdd__ResolveMatchesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ResolveMatchesType(soap, data), 0) || soap_put_wsdd__ResolveMatchesType(soap, data, "wsdd:ResolveMatchesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveMatchesType * SOAP_FMAC4 soap_get_wsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *, const char*, const char*);

#ifndef soap_read_wsdd__ResolveMatchesType
#define soap_read_wsdd__ResolveMatchesType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__ResolveMatchesType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__ResolveMatchesType * SOAP_FMAC2 soap_instantiate_wsdd__ResolveMatchesType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__ResolveMatchesType * soap_new_wsdd__ResolveMatchesType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__ResolveMatchesType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__ResolveMatchesType * soap_new_req_wsdd__ResolveMatchesType(struct soap *soap) { struct wsdd__ResolveMatchesType *_p = soap_instantiate_wsdd__ResolveMatchesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ResolveMatchesType(soap, _p); } return _p; }

inline struct wsdd__ResolveMatchesType * soap_new_set_wsdd__ResolveMatchesType(struct soap *soap, struct wsdd__ResolveMatchType *ResolveMatch) { struct wsdd__ResolveMatchesType *_p = soap_instantiate_wsdd__ResolveMatchesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ResolveMatchesType(soap, _p); _p->ResolveMatch = ResolveMatch; } return _p; }

inline void soap_delete_wsdd__ResolveMatchesType(struct soap *soap, struct wsdd__ResolveMatchesType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__ResolveMatchesType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__ResolveType
#define SOAP_TYPE_wsdd__ResolveType (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ResolveType(struct soap*, struct wsdd__ResolveType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveType(struct soap*, const struct wsdd__ResolveType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ResolveType(struct soap*, const char*, int, const struct wsdd__ResolveType *, const char*);
SOAP_FMAC3 struct wsdd__ResolveType * SOAP_FMAC4 soap_in_wsdd__ResolveType(struct soap*, const char*, struct wsdd__ResolveType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ResolveType(struct soap*, const struct wsdd__ResolveType *, const char*, const char*);

#ifndef soap_write_wsdd__ResolveType
#define soap_write_wsdd__ResolveType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ResolveType(soap, data), 0) || soap_put_wsdd__ResolveType(soap, data, "wsdd:ResolveType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveType * SOAP_FMAC4 soap_get_wsdd__ResolveType(struct soap*, struct wsdd__ResolveType *, const char*, const char*);

#ifndef soap_read_wsdd__ResolveType
#define soap_read_wsdd__ResolveType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__ResolveType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__ResolveType * SOAP_FMAC2 soap_instantiate_wsdd__ResolveType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__ResolveType * soap_new_wsdd__ResolveType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__ResolveType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__ResolveType * soap_new_req_wsdd__ResolveType(struct soap *soap, struct wsa__EndpointReferenceType& wsa__EndpointReference) { struct wsdd__ResolveType *_p = soap_instantiate_wsdd__ResolveType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ResolveType(soap, _p); _p->wsa__EndpointReference = wsa__EndpointReference; } return _p; }

inline struct wsdd__ResolveType * soap_new_set_wsdd__ResolveType(struct soap *soap, struct wsa__EndpointReferenceType& wsa__EndpointReference) { struct wsdd__ResolveType *_p = soap_instantiate_wsdd__ResolveType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ResolveType(soap, _p); _p->wsa__EndpointReference = wsa__EndpointReference; } return _p; }

inline void soap_delete_wsdd__ResolveType(struct soap *soap, struct wsdd__ResolveType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__ResolveType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__ProbeMatchType
#define SOAP_TYPE_wsdd__ProbeMatchType (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeMatchType(struct soap*, const struct wsdd__ProbeMatchType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ProbeMatchType(struct soap*, const char*, int, const struct wsdd__ProbeMatchType *, const char*);
SOAP_FMAC3 struct wsdd__ProbeMatchType * SOAP_FMAC4 soap_in_wsdd__ProbeMatchType(struct soap*, const char*, struct wsdd__ProbeMatchType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ProbeMatchType(struct soap*, const struct wsdd__ProbeMatchType *, const char*, const char*);

#ifndef soap_write_wsdd__ProbeMatchType
#define soap_write_wsdd__ProbeMatchType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ProbeMatchType(soap, data), 0) || soap_put_wsdd__ProbeMatchType(soap, data, "wsdd:ProbeMatchType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeMatchType * SOAP_FMAC4 soap_get_wsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *, const char*, const char*);

#ifndef soap_read_wsdd__ProbeMatchType
#define soap_read_wsdd__ProbeMatchType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__ProbeMatchType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__ProbeMatchType * SOAP_FMAC2 soap_instantiate_wsdd__ProbeMatchType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__ProbeMatchType * soap_new_wsdd__ProbeMatchType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__ProbeMatchType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__ProbeMatchType * soap_new_req_wsdd__ProbeMatchType(struct soap *soap, struct wsa__EndpointReferenceType& wsa__EndpointReference, unsigned int MetadataVersion) { struct wsdd__ProbeMatchType *_p = soap_instantiate_wsdd__ProbeMatchType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ProbeMatchType(soap, _p); _p->wsa__EndpointReference = wsa__EndpointReference; _p->MetadataVersion = MetadataVersion; } return _p; }

inline struct wsdd__ProbeMatchType * soap_new_set_wsdd__ProbeMatchType(struct soap *soap, struct wsa__EndpointReferenceType& wsa__EndpointReference, char *Types, struct wsdd__ScopesType *Scopes, char *XAddrs, unsigned int MetadataVersion) { struct wsdd__ProbeMatchType *_p = soap_instantiate_wsdd__ProbeMatchType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ProbeMatchType(soap, _p); _p->wsa__EndpointReference = wsa__EndpointReference; _p->Types = Types; _p->Scopes = Scopes; _p->XAddrs = XAddrs; _p->MetadataVersion = MetadataVersion; } return _p; }

inline void soap_delete_wsdd__ProbeMatchType(struct soap *soap, struct wsdd__ProbeMatchType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__ProbeMatchType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__ProbeMatchesType
#define SOAP_TYPE_wsdd__ProbeMatchesType (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeMatchesType(struct soap*, const struct wsdd__ProbeMatchesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ProbeMatchesType(struct soap*, const char*, int, const struct wsdd__ProbeMatchesType *, const char*);
SOAP_FMAC3 struct wsdd__ProbeMatchesType * SOAP_FMAC4 soap_in_wsdd__ProbeMatchesType(struct soap*, const char*, struct wsdd__ProbeMatchesType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ProbeMatchesType(struct soap*, const struct wsdd__ProbeMatchesType *, const char*, const char*);

#ifndef soap_write_wsdd__ProbeMatchesType
#define soap_write_wsdd__ProbeMatchesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ProbeMatchesType(soap, data), 0) || soap_put_wsdd__ProbeMatchesType(soap, data, "wsdd:ProbeMatchesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeMatchesType * SOAP_FMAC4 soap_get_wsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *, const char*, const char*);

#ifndef soap_read_wsdd__ProbeMatchesType
#define soap_read_wsdd__ProbeMatchesType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__ProbeMatchesType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__ProbeMatchesType * SOAP_FMAC2 soap_instantiate_wsdd__ProbeMatchesType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__ProbeMatchesType * soap_new_wsdd__ProbeMatchesType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__ProbeMatchesType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__ProbeMatchesType * soap_new_req_wsdd__ProbeMatchesType(struct soap *soap, int __sizeProbeMatch, struct wsdd__ProbeMatchType *ProbeMatch) { struct wsdd__ProbeMatchesType *_p = soap_instantiate_wsdd__ProbeMatchesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ProbeMatchesType(soap, _p); _p->__sizeProbeMatch = __sizeProbeMatch; _p->ProbeMatch = ProbeMatch; } return _p; }

inline struct wsdd__ProbeMatchesType * soap_new_set_wsdd__ProbeMatchesType(struct soap *soap, int __sizeProbeMatch, struct wsdd__ProbeMatchType *ProbeMatch) { struct wsdd__ProbeMatchesType *_p = soap_instantiate_wsdd__ProbeMatchesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ProbeMatchesType(soap, _p); _p->__sizeProbeMatch = __sizeProbeMatch; _p->ProbeMatch = ProbeMatch; } return _p; }

inline void soap_delete_wsdd__ProbeMatchesType(struct soap *soap, struct wsdd__ProbeMatchesType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__ProbeMatchesType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__ProbeType
#define SOAP_TYPE_wsdd__ProbeType (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ProbeType(struct soap*, struct wsdd__ProbeType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeType(struct soap*, const struct wsdd__ProbeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ProbeType(struct soap*, const char*, int, const struct wsdd__ProbeType *, const char*);
SOAP_FMAC3 struct wsdd__ProbeType * SOAP_FMAC4 soap_in_wsdd__ProbeType(struct soap*, const char*, struct wsdd__ProbeType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ProbeType(struct soap*, const struct wsdd__ProbeType *, const char*, const char*);

#ifndef soap_write_wsdd__ProbeType
#define soap_write_wsdd__ProbeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ProbeType(soap, data), 0) || soap_put_wsdd__ProbeType(soap, data, "wsdd:ProbeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeType * SOAP_FMAC4 soap_get_wsdd__ProbeType(struct soap*, struct wsdd__ProbeType *, const char*, const char*);

#ifndef soap_read_wsdd__ProbeType
#define soap_read_wsdd__ProbeType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__ProbeType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__ProbeType * SOAP_FMAC2 soap_instantiate_wsdd__ProbeType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__ProbeType * soap_new_wsdd__ProbeType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__ProbeType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__ProbeType * soap_new_req_wsdd__ProbeType(struct soap *soap) { struct wsdd__ProbeType *_p = soap_instantiate_wsdd__ProbeType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ProbeType(soap, _p); } return _p; }

inline struct wsdd__ProbeType * soap_new_set_wsdd__ProbeType(struct soap *soap, char *Types, struct wsdd__ScopesType *Scopes) { struct wsdd__ProbeType *_p = soap_instantiate_wsdd__ProbeType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ProbeType(soap, _p); _p->Types = Types; _p->Scopes = Scopes; } return _p; }

inline void soap_delete_wsdd__ProbeType(struct soap *soap, struct wsdd__ProbeType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__ProbeType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__ByeType
#define SOAP_TYPE_wsdd__ByeType (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ByeType(struct soap*, struct wsdd__ByeType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ByeType(struct soap*, const struct wsdd__ByeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ByeType(struct soap*, const char*, int, const struct wsdd__ByeType *, const char*);
SOAP_FMAC3 struct wsdd__ByeType * SOAP_FMAC4 soap_in_wsdd__ByeType(struct soap*, const char*, struct wsdd__ByeType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ByeType(struct soap*, const struct wsdd__ByeType *, const char*, const char*);

#ifndef soap_write_wsdd__ByeType
#define soap_write_wsdd__ByeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ByeType(soap, data), 0) || soap_put_wsdd__ByeType(soap, data, "wsdd:ByeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ByeType * SOAP_FMAC4 soap_get_wsdd__ByeType(struct soap*, struct wsdd__ByeType *, const char*, const char*);

#ifndef soap_read_wsdd__ByeType
#define soap_read_wsdd__ByeType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__ByeType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__ByeType * SOAP_FMAC2 soap_instantiate_wsdd__ByeType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__ByeType * soap_new_wsdd__ByeType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__ByeType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__ByeType * soap_new_req_wsdd__ByeType(struct soap *soap, struct wsa__EndpointReferenceType& wsa__EndpointReference) { struct wsdd__ByeType *_p = soap_instantiate_wsdd__ByeType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ByeType(soap, _p); _p->wsa__EndpointReference = wsa__EndpointReference; } return _p; }

inline struct wsdd__ByeType * soap_new_set_wsdd__ByeType(struct soap *soap, struct wsa__EndpointReferenceType& wsa__EndpointReference, char *Types, struct wsdd__ScopesType *Scopes, char *XAddrs, unsigned int *MetadataVersion) { struct wsdd__ByeType *_p = soap_instantiate_wsdd__ByeType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__ByeType(soap, _p); _p->wsa__EndpointReference = wsa__EndpointReference; _p->Types = Types; _p->Scopes = Scopes; _p->XAddrs = XAddrs; _p->MetadataVersion = MetadataVersion; } return _p; }

inline void soap_delete_wsdd__ByeType(struct soap *soap, struct wsdd__ByeType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__ByeType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdd__HelloType
#define SOAP_TYPE_wsdd__HelloType (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__HelloType(struct soap*, struct wsdd__HelloType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__HelloType(struct soap*, const struct wsdd__HelloType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__HelloType(struct soap*, const char*, int, const struct wsdd__HelloType *, const char*);
SOAP_FMAC3 struct wsdd__HelloType * SOAP_FMAC4 soap_in_wsdd__HelloType(struct soap*, const char*, struct wsdd__HelloType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__HelloType(struct soap*, const struct wsdd__HelloType *, const char*, const char*);

#ifndef soap_write_wsdd__HelloType
#define soap_write_wsdd__HelloType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__HelloType(soap, data), 0) || soap_put_wsdd__HelloType(soap, data, "wsdd:HelloType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__HelloType * SOAP_FMAC4 soap_get_wsdd__HelloType(struct soap*, struct wsdd__HelloType *, const char*, const char*);

#ifndef soap_read_wsdd__HelloType
#define soap_read_wsdd__HelloType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__HelloType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsdd__HelloType * SOAP_FMAC2 soap_instantiate_wsdd__HelloType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsdd__HelloType * soap_new_wsdd__HelloType(struct soap *soap, int n = -1) { return soap_instantiate_wsdd__HelloType(soap, n, NULL, NULL, NULL); }

inline struct wsdd__HelloType * soap_new_req_wsdd__HelloType(struct soap *soap, struct wsa__EndpointReferenceType& wsa__EndpointReference, unsigned int MetadataVersion) { struct wsdd__HelloType *_p = soap_instantiate_wsdd__HelloType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__HelloType(soap, _p); _p->wsa__EndpointReference = wsa__EndpointReference; _p->MetadataVersion = MetadataVersion; } return _p; }

inline struct wsdd__HelloType * soap_new_set_wsdd__HelloType(struct soap *soap, struct wsa__EndpointReferenceType& wsa__EndpointReference, char *Types, struct wsdd__ScopesType *Scopes, char *XAddrs, unsigned int MetadataVersion) { struct wsdd__HelloType *_p = soap_instantiate_wsdd__HelloType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsdd__HelloType(soap, _p); _p->wsa__EndpointReference = wsa__EndpointReference; _p->Types = Types; _p->Scopes = Scopes; _p->XAddrs = XAddrs; _p->MetadataVersion = MetadataVersion; } return _p; }

inline void soap_delete_wsdd__HelloType(struct soap *soap, struct wsdd__HelloType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdd__HelloType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap, char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); _p->wsa__MessageID = wsa__MessageID; _p->wsa__RelatesTo = wsa__RelatesTo; _p->wsa__From = wsa__From; _p->wsa__ReplyTo = wsa__ReplyTo; _p->wsa__FaultTo = wsa__FaultTo; _p->wsa__To = wsa__To; _p->wsa__Action = wsa__Action; _p->wsdd__AppSequence = wsdd__AppSequence; } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* _wsa__FaultTo is a typedef element/attribute synonym for wsa__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa__FaultTo
#define SOAP_TYPE__wsa__FaultTo (27)
#endif

#define soap_default__wsa__FaultTo(soap, a) soap_default_wsa__EndpointReferenceType(soap, a)


#define soap_serialize__wsa__FaultTo soap_serialize_wsa__EndpointReferenceType


#define soap_out__wsa__FaultTo soap_out_wsa__EndpointReferenceType


#define soap_in__wsa__FaultTo soap_in_wsa__EndpointReferenceType


#define soap_put__wsa__FaultTo soap_put_wsa__EndpointReferenceType


#define soap_get__wsa__FaultTo soap_get_wsa__EndpointReferenceType


#define soap_instantiate__wsa__FaultTo soap_instantiate_wsa__EndpointReferenceType


#define soap_copy__wsa__FaultTo soap_copy_wsa__EndpointReferenceType

/* _wsa__ReplyTo is a typedef element/attribute synonym for wsa__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa__ReplyTo
#define SOAP_TYPE__wsa__ReplyTo (26)
#endif

#define soap_default__wsa__ReplyTo(soap, a) soap_default_wsa__EndpointReferenceType(soap, a)


#define soap_serialize__wsa__ReplyTo soap_serialize_wsa__EndpointReferenceType


#define soap_out__wsa__ReplyTo soap_out_wsa__EndpointReferenceType


#define soap_in__wsa__ReplyTo soap_in_wsa__EndpointReferenceType


#define soap_put__wsa__ReplyTo soap_put_wsa__EndpointReferenceType


#define soap_get__wsa__ReplyTo soap_get_wsa__EndpointReferenceType


#define soap_instantiate__wsa__ReplyTo soap_instantiate_wsa__EndpointReferenceType


#define soap_copy__wsa__ReplyTo soap_copy_wsa__EndpointReferenceType

/* _wsa__From is a typedef element/attribute synonym for wsa__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa__From
#define SOAP_TYPE__wsa__From (25)
#endif

#define soap_default__wsa__From(soap, a) soap_default_wsa__EndpointReferenceType(soap, a)


#define soap_serialize__wsa__From soap_serialize_wsa__EndpointReferenceType


#define soap_out__wsa__From soap_out_wsa__EndpointReferenceType


#define soap_in__wsa__From soap_in_wsa__EndpointReferenceType


#define soap_put__wsa__From soap_put_wsa__EndpointReferenceType


#define soap_get__wsa__From soap_get_wsa__EndpointReferenceType


#define soap_instantiate__wsa__From soap_instantiate_wsa__EndpointReferenceType


#define soap_copy__wsa__From soap_copy_wsa__EndpointReferenceType

/* _wsa__RelatesTo is a typedef element/attribute synonym for wsa__Relationship */

#ifndef SOAP_TYPE__wsa__RelatesTo
#define SOAP_TYPE__wsa__RelatesTo (22)
#endif

#define soap_default__wsa__RelatesTo(soap, a) soap_default_wsa__Relationship(soap, a)


#define soap_serialize__wsa__RelatesTo soap_serialize_wsa__Relationship


#define soap_out__wsa__RelatesTo soap_out_wsa__Relationship


#define soap_in__wsa__RelatesTo soap_in_wsa__Relationship


#define soap_put__wsa__RelatesTo soap_put_wsa__Relationship


#define soap_get__wsa__RelatesTo soap_get_wsa__Relationship


#define soap_instantiate__wsa__RelatesTo soap_instantiate_wsa__Relationship


#define soap_copy__wsa__RelatesTo soap_copy_wsa__Relationship

/* _wsa__EndpointReference is a typedef element/attribute synonym for wsa__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa__EndpointReference
#define SOAP_TYPE__wsa__EndpointReference (20)
#endif

#define soap_default__wsa__EndpointReference(soap, a) soap_default_wsa__EndpointReferenceType(soap, a)


#define soap_serialize__wsa__EndpointReference soap_serialize_wsa__EndpointReferenceType


#define soap_out__wsa__EndpointReference soap_out_wsa__EndpointReferenceType


#define soap_in__wsa__EndpointReference soap_in_wsa__EndpointReferenceType


#define soap_put__wsa__EndpointReference soap_put_wsa__EndpointReferenceType


#define soap_get__wsa__EndpointReference soap_get_wsa__EndpointReferenceType


#define soap_instantiate__wsa__EndpointReference soap_instantiate_wsa__EndpointReferenceType


#define soap_copy__wsa__EndpointReference soap_copy_wsa__EndpointReferenceType

#ifndef SOAP_TYPE_wsa__Relationship
#define SOAP_TYPE_wsa__Relationship (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__Relationship(struct soap*, struct wsa__Relationship *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__Relationship(struct soap*, const struct wsa__Relationship *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__Relationship(struct soap*, const char*, int, const struct wsa__Relationship *, const char*);
SOAP_FMAC3 struct wsa__Relationship * SOAP_FMAC4 soap_in_wsa__Relationship(struct soap*, const char*, struct wsa__Relationship *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__Relationship(struct soap*, const struct wsa__Relationship *, const char*, const char*);

#ifndef soap_write_wsa__Relationship
#define soap_write_wsa__Relationship(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__Relationship(soap, data), 0) || soap_put_wsa__Relationship(soap, data, "wsa:Relationship", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__Relationship * SOAP_FMAC4 soap_get_wsa__Relationship(struct soap*, struct wsa__Relationship *, const char*, const char*);

#ifndef soap_read_wsa__Relationship
#define soap_read_wsa__Relationship(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa__Relationship(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsa__Relationship * SOAP_FMAC2 soap_instantiate_wsa__Relationship(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa__Relationship * soap_new_wsa__Relationship(struct soap *soap, int n = -1) { return soap_instantiate_wsa__Relationship(soap, n, NULL, NULL, NULL); }

inline struct wsa__Relationship * soap_new_req_wsa__Relationship(struct soap *soap) { struct wsa__Relationship *_p = soap_instantiate_wsa__Relationship(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa__Relationship(soap, _p); } return _p; }

inline struct wsa__Relationship * soap_new_set_wsa__Relationship(struct soap *soap, char *__item, char *RelationshipType, char *__anyAttribute) { struct wsa__Relationship *_p = soap_instantiate_wsa__Relationship(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa__Relationship(soap, _p); _p->__item = __item; _p->RelationshipType = RelationshipType; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa__Relationship(struct soap *soap, struct wsa__Relationship *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa__Relationship(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa__ServiceNameType
#define SOAP_TYPE_wsa__ServiceNameType (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__ServiceNameType(struct soap*, struct wsa__ServiceNameType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__ServiceNameType(struct soap*, const struct wsa__ServiceNameType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__ServiceNameType(struct soap*, const char*, int, const struct wsa__ServiceNameType *, const char*);
SOAP_FMAC3 struct wsa__ServiceNameType * SOAP_FMAC4 soap_in_wsa__ServiceNameType(struct soap*, const char*, struct wsa__ServiceNameType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__ServiceNameType(struct soap*, const struct wsa__ServiceNameType *, const char*, const char*);

#ifndef soap_write_wsa__ServiceNameType
#define soap_write_wsa__ServiceNameType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__ServiceNameType(soap, data), 0) || soap_put_wsa__ServiceNameType(soap, data, "wsa:ServiceNameType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__ServiceNameType * SOAP_FMAC4 soap_get_wsa__ServiceNameType(struct soap*, struct wsa__ServiceNameType *, const char*, const char*);

#ifndef soap_read_wsa__ServiceNameType
#define soap_read_wsa__ServiceNameType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa__ServiceNameType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsa__ServiceNameType * SOAP_FMAC2 soap_instantiate_wsa__ServiceNameType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa__ServiceNameType * soap_new_wsa__ServiceNameType(struct soap *soap, int n = -1) { return soap_instantiate_wsa__ServiceNameType(soap, n, NULL, NULL, NULL); }

inline struct wsa__ServiceNameType * soap_new_req_wsa__ServiceNameType(struct soap *soap) { struct wsa__ServiceNameType *_p = soap_instantiate_wsa__ServiceNameType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa__ServiceNameType(soap, _p); } return _p; }

inline struct wsa__ServiceNameType * soap_new_set_wsa__ServiceNameType(struct soap *soap, char *__item, char *PortName, char *__anyAttribute) { struct wsa__ServiceNameType *_p = soap_instantiate_wsa__ServiceNameType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa__ServiceNameType(soap, _p); _p->__item = __item; _p->PortName = PortName; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa__ServiceNameType(struct soap *soap, struct wsa__ServiceNameType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa__ServiceNameType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa__ReferenceParametersType
#define SOAP_TYPE_wsa__ReferenceParametersType (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__ReferenceParametersType(struct soap*, struct wsa__ReferenceParametersType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__ReferenceParametersType(struct soap*, const struct wsa__ReferenceParametersType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__ReferenceParametersType(struct soap*, const char*, int, const struct wsa__ReferenceParametersType *, const char*);
SOAP_FMAC3 struct wsa__ReferenceParametersType * SOAP_FMAC4 soap_in_wsa__ReferenceParametersType(struct soap*, const char*, struct wsa__ReferenceParametersType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__ReferenceParametersType(struct soap*, const struct wsa__ReferenceParametersType *, const char*, const char*);

#ifndef soap_write_wsa__ReferenceParametersType
#define soap_write_wsa__ReferenceParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__ReferenceParametersType(soap, data), 0) || soap_put_wsa__ReferenceParametersType(soap, data, "wsa:ReferenceParametersType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__ReferenceParametersType * SOAP_FMAC4 soap_get_wsa__ReferenceParametersType(struct soap*, struct wsa__ReferenceParametersType *, const char*, const char*);

#ifndef soap_read_wsa__ReferenceParametersType
#define soap_read_wsa__ReferenceParametersType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa__ReferenceParametersType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsa__ReferenceParametersType * SOAP_FMAC2 soap_instantiate_wsa__ReferenceParametersType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa__ReferenceParametersType * soap_new_wsa__ReferenceParametersType(struct soap *soap, int n = -1) { return soap_instantiate_wsa__ReferenceParametersType(soap, n, NULL, NULL, NULL); }

inline struct wsa__ReferenceParametersType * soap_new_req_wsa__ReferenceParametersType(struct soap *soap, int __size, char **__any) { struct wsa__ReferenceParametersType *_p = soap_instantiate_wsa__ReferenceParametersType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa__ReferenceParametersType(soap, _p); _p->__size = __size; _p->__any = __any; } return _p; }

inline struct wsa__ReferenceParametersType * soap_new_set_wsa__ReferenceParametersType(struct soap *soap, int __size, char **__any) { struct wsa__ReferenceParametersType *_p = soap_instantiate_wsa__ReferenceParametersType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa__ReferenceParametersType(soap, _p); _p->__size = __size; _p->__any = __any; } return _p; }

inline void soap_delete_wsa__ReferenceParametersType(struct soap *soap, struct wsa__ReferenceParametersType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa__ReferenceParametersType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa__ReferencePropertiesType
#define SOAP_TYPE_wsa__ReferencePropertiesType (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__ReferencePropertiesType(struct soap*, struct wsa__ReferencePropertiesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__ReferencePropertiesType(struct soap*, const struct wsa__ReferencePropertiesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__ReferencePropertiesType(struct soap*, const char*, int, const struct wsa__ReferencePropertiesType *, const char*);
SOAP_FMAC3 struct wsa__ReferencePropertiesType * SOAP_FMAC4 soap_in_wsa__ReferencePropertiesType(struct soap*, const char*, struct wsa__ReferencePropertiesType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__ReferencePropertiesType(struct soap*, const struct wsa__ReferencePropertiesType *, const char*, const char*);

#ifndef soap_write_wsa__ReferencePropertiesType
#define soap_write_wsa__ReferencePropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__ReferencePropertiesType(soap, data), 0) || soap_put_wsa__ReferencePropertiesType(soap, data, "wsa:ReferencePropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__ReferencePropertiesType * SOAP_FMAC4 soap_get_wsa__ReferencePropertiesType(struct soap*, struct wsa__ReferencePropertiesType *, const char*, const char*);

#ifndef soap_read_wsa__ReferencePropertiesType
#define soap_read_wsa__ReferencePropertiesType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa__ReferencePropertiesType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsa__ReferencePropertiesType * SOAP_FMAC2 soap_instantiate_wsa__ReferencePropertiesType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa__ReferencePropertiesType * soap_new_wsa__ReferencePropertiesType(struct soap *soap, int n = -1) { return soap_instantiate_wsa__ReferencePropertiesType(soap, n, NULL, NULL, NULL); }

inline struct wsa__ReferencePropertiesType * soap_new_req_wsa__ReferencePropertiesType(struct soap *soap, int __size, char **__any) { struct wsa__ReferencePropertiesType *_p = soap_instantiate_wsa__ReferencePropertiesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa__ReferencePropertiesType(soap, _p); _p->__size = __size; _p->__any = __any; } return _p; }

inline struct wsa__ReferencePropertiesType * soap_new_set_wsa__ReferencePropertiesType(struct soap *soap, int __size, char **__any) { struct wsa__ReferencePropertiesType *_p = soap_instantiate_wsa__ReferencePropertiesType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa__ReferencePropertiesType(soap, _p); _p->__size = __size; _p->__any = __any; } return _p; }

inline void soap_delete_wsa__ReferencePropertiesType(struct soap *soap, struct wsa__ReferencePropertiesType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa__ReferencePropertiesType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa__EndpointReferenceType
#define SOAP_TYPE_wsa__EndpointReferenceType (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__EndpointReferenceType(struct soap*, struct wsa__EndpointReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__EndpointReferenceType(struct soap*, const struct wsa__EndpointReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__EndpointReferenceType(struct soap*, const char*, int, const struct wsa__EndpointReferenceType *, const char*);
SOAP_FMAC3 struct wsa__EndpointReferenceType * SOAP_FMAC4 soap_in_wsa__EndpointReferenceType(struct soap*, const char*, struct wsa__EndpointReferenceType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__EndpointReferenceType(struct soap*, const struct wsa__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write_wsa__EndpointReferenceType
#define soap_write_wsa__EndpointReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__EndpointReferenceType(soap, data), 0) || soap_put_wsa__EndpointReferenceType(soap, data, "wsa:EndpointReferenceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__EndpointReferenceType * SOAP_FMAC4 soap_get_wsa__EndpointReferenceType(struct soap*, struct wsa__EndpointReferenceType *, const char*, const char*);

#ifndef soap_read_wsa__EndpointReferenceType
#define soap_read_wsa__EndpointReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa__EndpointReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsa__EndpointReferenceType * SOAP_FMAC2 soap_instantiate_wsa__EndpointReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa__EndpointReferenceType * soap_new_wsa__EndpointReferenceType(struct soap *soap, int n = -1) { return soap_instantiate_wsa__EndpointReferenceType(soap, n, NULL, NULL, NULL); }

inline struct wsa__EndpointReferenceType * soap_new_req_wsa__EndpointReferenceType(struct soap *soap, char *Address, int __size, char **__any) { struct wsa__EndpointReferenceType *_p = soap_instantiate_wsa__EndpointReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa__EndpointReferenceType(soap, _p); _p->Address = Address; _p->__size = __size; _p->__any = __any; } return _p; }

inline struct wsa__EndpointReferenceType * soap_new_set_wsa__EndpointReferenceType(struct soap *soap, char *Address, struct wsa__ReferencePropertiesType *ReferenceProperties, struct wsa__ReferenceParametersType *ReferenceParameters, char **PortType, struct wsa__ServiceNameType *ServiceName, int __size, char **__any, char *__anyAttribute) { struct wsa__EndpointReferenceType *_p = soap_instantiate_wsa__EndpointReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa__EndpointReferenceType(soap, _p); _p->Address = Address; _p->ReferenceProperties = ReferenceProperties; _p->ReferenceParameters = ReferenceParameters; _p->PortType = PortType; _p->ServiceName = ServiceName; _p->__size = __size; _p->__any = __any; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa__EndpointReferenceType(struct soap *soap, struct wsa__EndpointReferenceType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa__EndpointReferenceType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_PointerTowsdd__ResolveMatchesType
#define SOAP_TYPE_PointerTowsdd__ResolveMatchesType (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ResolveMatchesType(struct soap*, const char *, int, struct wsdd__ResolveMatchesType *const*, const char *);
SOAP_FMAC3 struct wsdd__ResolveMatchesType ** SOAP_FMAC4 soap_in_PointerTowsdd__ResolveMatchesType(struct soap*, const char*, struct wsdd__ResolveMatchesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsdd__ResolveMatchesType
#define soap_write_PointerTowsdd__ResolveMatchesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsdd__ResolveMatchesType(soap, data), 0) || soap_put_PointerTowsdd__ResolveMatchesType(soap, data, "wsdd:ResolveMatchesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveMatchesType ** SOAP_FMAC4 soap_get_PointerTowsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType **, const char*, const char*);

#ifndef soap_read_PointerTowsdd__ResolveMatchesType
#define soap_read_PointerTowsdd__ResolveMatchesType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdd__ResolveMatchesType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsdd__ResolveType
#define SOAP_TYPE_PointerTowsdd__ResolveType (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ResolveType(struct soap*, struct wsdd__ResolveType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ResolveType(struct soap*, const char *, int, struct wsdd__ResolveType *const*, const char *);
SOAP_FMAC3 struct wsdd__ResolveType ** SOAP_FMAC4 soap_in_PointerTowsdd__ResolveType(struct soap*, const char*, struct wsdd__ResolveType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ResolveType(struct soap*, struct wsdd__ResolveType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsdd__ResolveType
#define soap_write_PointerTowsdd__ResolveType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsdd__ResolveType(soap, data), 0) || soap_put_PointerTowsdd__ResolveType(soap, data, "wsdd:ResolveType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveType ** SOAP_FMAC4 soap_get_PointerTowsdd__ResolveType(struct soap*, struct wsdd__ResolveType **, const char*, const char*);

#ifndef soap_read_PointerTowsdd__ResolveType
#define soap_read_PointerTowsdd__ResolveType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdd__ResolveType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsdd__ProbeMatchesType
#define SOAP_TYPE_PointerTowsdd__ProbeMatchesType (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ProbeMatchesType(struct soap*, const char *, int, struct wsdd__ProbeMatchesType *const*, const char *);
SOAP_FMAC3 struct wsdd__ProbeMatchesType ** SOAP_FMAC4 soap_in_PointerTowsdd__ProbeMatchesType(struct soap*, const char*, struct wsdd__ProbeMatchesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsdd__ProbeMatchesType
#define soap_write_PointerTowsdd__ProbeMatchesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsdd__ProbeMatchesType(soap, data), 0) || soap_put_PointerTowsdd__ProbeMatchesType(soap, data, "wsdd:ProbeMatchesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeMatchesType ** SOAP_FMAC4 soap_get_PointerTowsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType **, const char*, const char*);

#ifndef soap_read_PointerTowsdd__ProbeMatchesType
#define soap_read_PointerTowsdd__ProbeMatchesType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdd__ProbeMatchesType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsdd__ProbeType
#define SOAP_TYPE_PointerTowsdd__ProbeType (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ProbeType(struct soap*, struct wsdd__ProbeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ProbeType(struct soap*, const char *, int, struct wsdd__ProbeType *const*, const char *);
SOAP_FMAC3 struct wsdd__ProbeType ** SOAP_FMAC4 soap_in_PointerTowsdd__ProbeType(struct soap*, const char*, struct wsdd__ProbeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ProbeType(struct soap*, struct wsdd__ProbeType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsdd__ProbeType
#define soap_write_PointerTowsdd__ProbeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsdd__ProbeType(soap, data), 0) || soap_put_PointerTowsdd__ProbeType(soap, data, "wsdd:ProbeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeType ** SOAP_FMAC4 soap_get_PointerTowsdd__ProbeType(struct soap*, struct wsdd__ProbeType **, const char*, const char*);

#ifndef soap_read_PointerTowsdd__ProbeType
#define soap_read_PointerTowsdd__ProbeType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdd__ProbeType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsdd__ByeType
#define SOAP_TYPE_PointerTowsdd__ByeType (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ByeType(struct soap*, struct wsdd__ByeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ByeType(struct soap*, const char *, int, struct wsdd__ByeType *const*, const char *);
SOAP_FMAC3 struct wsdd__ByeType ** SOAP_FMAC4 soap_in_PointerTowsdd__ByeType(struct soap*, const char*, struct wsdd__ByeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ByeType(struct soap*, struct wsdd__ByeType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsdd__ByeType
#define soap_write_PointerTowsdd__ByeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsdd__ByeType(soap, data), 0) || soap_put_PointerTowsdd__ByeType(soap, data, "wsdd:ByeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ByeType ** SOAP_FMAC4 soap_get_PointerTowsdd__ByeType(struct soap*, struct wsdd__ByeType **, const char*, const char*);

#ifndef soap_read_PointerTowsdd__ByeType
#define soap_read_PointerTowsdd__ByeType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdd__ByeType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsdd__HelloType
#define SOAP_TYPE_PointerTowsdd__HelloType (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__HelloType(struct soap*, struct wsdd__HelloType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__HelloType(struct soap*, const char *, int, struct wsdd__HelloType *const*, const char *);
SOAP_FMAC3 struct wsdd__HelloType ** SOAP_FMAC4 soap_in_PointerTowsdd__HelloType(struct soap*, const char*, struct wsdd__HelloType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__HelloType(struct soap*, struct wsdd__HelloType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsdd__HelloType
#define soap_write_PointerTowsdd__HelloType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsdd__HelloType(soap, data), 0) || soap_put_PointerTowsdd__HelloType(soap, data, "wsdd:HelloType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__HelloType ** SOAP_FMAC4 soap_get_PointerTowsdd__HelloType(struct soap*, struct wsdd__HelloType **, const char*, const char*);

#ifndef soap_read_PointerTowsdd__HelloType
#define soap_read_PointerTowsdd__HelloType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdd__HelloType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsdd__AppSequenceType
#define SOAP_TYPE_PointerTowsdd__AppSequenceType (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__AppSequenceType(struct soap*, const char *, int, struct wsdd__AppSequenceType *const*, const char *);
SOAP_FMAC3 struct wsdd__AppSequenceType ** SOAP_FMAC4 soap_in_PointerTowsdd__AppSequenceType(struct soap*, const char*, struct wsdd__AppSequenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsdd__AppSequenceType
#define soap_write_PointerTowsdd__AppSequenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsdd__AppSequenceType(soap, data), 0) || soap_put_PointerTowsdd__AppSequenceType(soap, data, "wsdd:AppSequenceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__AppSequenceType ** SOAP_FMAC4 soap_get_PointerTowsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType **, const char*, const char*);

#ifndef soap_read_PointerTowsdd__AppSequenceType
#define soap_read_PointerTowsdd__AppSequenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdd__AppSequenceType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsdd__SigType
#define SOAP_TYPE_PointerTowsdd__SigType (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__SigType(struct soap*, struct wsdd__SigType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__SigType(struct soap*, const char *, int, struct wsdd__SigType *const*, const char *);
SOAP_FMAC3 struct wsdd__SigType ** SOAP_FMAC4 soap_in_PointerTowsdd__SigType(struct soap*, const char*, struct wsdd__SigType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__SigType(struct soap*, struct wsdd__SigType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsdd__SigType
#define soap_write_PointerTowsdd__SigType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsdd__SigType(soap, data), 0) || soap_put_PointerTowsdd__SigType(soap, data, "wsdd:SigType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__SigType ** SOAP_FMAC4 soap_get_PointerTowsdd__SigType(struct soap*, struct wsdd__SigType **, const char*, const char*);

#ifndef soap_read_PointerTowsdd__SigType
#define soap_read_PointerTowsdd__SigType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdd__SigType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsdd__ResolveMatchType
#define SOAP_TYPE_PointerTowsdd__ResolveMatchType (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ResolveMatchType(struct soap*, const char *, int, struct wsdd__ResolveMatchType *const*, const char *);
SOAP_FMAC3 struct wsdd__ResolveMatchType ** SOAP_FMAC4 soap_in_PointerTowsdd__ResolveMatchType(struct soap*, const char*, struct wsdd__ResolveMatchType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsdd__ResolveMatchType
#define soap_write_PointerTowsdd__ResolveMatchType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsdd__ResolveMatchType(soap, data), 0) || soap_put_PointerTowsdd__ResolveMatchType(soap, data, "wsdd:ResolveMatchType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveMatchType ** SOAP_FMAC4 soap_get_PointerTowsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType **, const char*, const char*);

#ifndef soap_read_PointerTowsdd__ResolveMatchType
#define soap_read_PointerTowsdd__ResolveMatchType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdd__ResolveMatchType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsdd__ProbeMatchType
#define SOAP_TYPE_PointerTowsdd__ProbeMatchType (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ProbeMatchType(struct soap*, const char *, int, struct wsdd__ProbeMatchType *const*, const char *);
SOAP_FMAC3 struct wsdd__ProbeMatchType ** SOAP_FMAC4 soap_in_PointerTowsdd__ProbeMatchType(struct soap*, const char*, struct wsdd__ProbeMatchType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsdd__ProbeMatchType
#define soap_write_PointerTowsdd__ProbeMatchType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsdd__ProbeMatchType(soap, data), 0) || soap_put_PointerTowsdd__ProbeMatchType(soap, data, "wsdd:ProbeMatchType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeMatchType ** SOAP_FMAC4 soap_get_PointerTowsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType **, const char*, const char*);

#ifndef soap_read_PointerTowsdd__ProbeMatchType
#define soap_read_PointerTowsdd__ProbeMatchType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdd__ProbeMatchType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedInt
#define SOAP_TYPE_PointerTounsignedInt (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedInt(struct soap*, unsigned int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedInt(struct soap*, const char *, int, unsigned int *const*, const char *);
SOAP_FMAC3 unsigned int ** SOAP_FMAC4 soap_in_PointerTounsignedInt(struct soap*, const char*, unsigned int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedInt(struct soap*, unsigned int *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedInt
#define soap_write_PointerTounsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedInt(soap, data), 0) || soap_put_PointerTounsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int ** SOAP_FMAC4 soap_get_PointerTounsignedInt(struct soap*, unsigned int **, const char*, const char*);

#ifndef soap_read_PointerTounsignedInt
#define soap_read_PointerTounsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsdd__ScopesType
#define SOAP_TYPE_PointerTowsdd__ScopesType (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ScopesType(struct soap*, struct wsdd__ScopesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ScopesType(struct soap*, const char *, int, struct wsdd__ScopesType *const*, const char *);
SOAP_FMAC3 struct wsdd__ScopesType ** SOAP_FMAC4 soap_in_PointerTowsdd__ScopesType(struct soap*, const char*, struct wsdd__ScopesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ScopesType(struct soap*, struct wsdd__ScopesType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsdd__ScopesType
#define soap_write_PointerTowsdd__ScopesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsdd__ScopesType(soap, data), 0) || soap_put_PointerTowsdd__ScopesType(soap, data, "wsdd:ScopesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ScopesType ** SOAP_FMAC4 soap_get_PointerTowsdd__ScopesType(struct soap*, struct wsdd__ScopesType **, const char*, const char*);

#ifndef soap_read_PointerTowsdd__ScopesType
#define soap_read_PointerTowsdd__ScopesType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdd__ScopesType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsdd__FaultCodeOpenType
#define SOAP_TYPE_wsdd__FaultCodeOpenType (58)
#endif

#define soap_default_wsdd__FaultCodeOpenType(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__FaultCodeOpenType(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__FaultCodeOpenType(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsdd__FaultCodeOpenType(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__FaultCodeOpenType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsdd__FaultCodeOpenType
#define soap_write_wsdd__FaultCodeOpenType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__FaultCodeOpenType(soap, data), 0) || soap_put_wsdd__FaultCodeOpenType(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsdd__FaultCodeOpenType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsdd__FaultCodeOpenType
#define soap_read_wsdd__FaultCodeOpenType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__FaultCodeOpenType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsdd__UriListType
#define SOAP_TYPE_wsdd__UriListType (57)
#endif

#define soap_default_wsdd__UriListType(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__UriListType(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__UriListType(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsdd__UriListType(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__UriListType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsdd__UriListType
#define soap_write_wsdd__UriListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__UriListType(soap, data), 0) || soap_put_wsdd__UriListType(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsdd__UriListType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsdd__UriListType
#define soap_read_wsdd__UriListType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__UriListType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsdd__QNameListType
#define SOAP_TYPE_wsdd__QNameListType (56)
#endif

#define soap_default_wsdd__QNameListType(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__QNameListType(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__QNameListType(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsdd__QNameListType(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__QNameListType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsdd__QNameListType
#define soap_write_wsdd__QNameListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__QNameListType(soap, data), 0) || soap_put_wsdd__QNameListType(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsdd__QNameListType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsdd__QNameListType
#define soap_read_wsdd__QNameListType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__QNameListType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_wsa__FaultTo
#define SOAP_TYPE_PointerTo_wsa__FaultTo (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa__FaultTo(struct soap*, struct wsa__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa__FaultTo(struct soap*, const char *, int, struct wsa__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa__FaultTo(struct soap*, const char*, struct wsa__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa__FaultTo(struct soap*, struct wsa__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa__FaultTo
#define soap_write_PointerTo_wsa__FaultTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa__FaultTo(soap, data), 0) || soap_put_PointerTo_wsa__FaultTo(soap, data, "wsa:FaultTo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa__FaultTo(struct soap*, struct wsa__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa__FaultTo
#define soap_read_PointerTo_wsa__FaultTo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa__FaultTo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa__ReplyTo
#define SOAP_TYPE_PointerTo_wsa__ReplyTo (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa__ReplyTo(struct soap*, struct wsa__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa__ReplyTo(struct soap*, const char *, int, struct wsa__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa__ReplyTo(struct soap*, const char*, struct wsa__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa__ReplyTo(struct soap*, struct wsa__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa__ReplyTo
#define soap_write_PointerTo_wsa__ReplyTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa__ReplyTo(soap, data), 0) || soap_put_PointerTo_wsa__ReplyTo(soap, data, "wsa:ReplyTo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa__ReplyTo(struct soap*, struct wsa__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa__ReplyTo
#define soap_read_PointerTo_wsa__ReplyTo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa__ReplyTo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa__From
#define SOAP_TYPE_PointerTo_wsa__From (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa__From(struct soap*, struct wsa__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa__From(struct soap*, const char *, int, struct wsa__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa__From(struct soap*, const char*, struct wsa__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa__From(struct soap*, struct wsa__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa__From
#define soap_write_PointerTo_wsa__From(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa__From(soap, data), 0) || soap_put_PointerTo_wsa__From(soap, data, "wsa:From", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa__From(struct soap*, struct wsa__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa__From
#define soap_read_PointerTo_wsa__From(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa__From(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa__RelatesTo
#define SOAP_TYPE_PointerTo_wsa__RelatesTo (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa__RelatesTo(struct soap*, struct wsa__Relationship *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa__RelatesTo(struct soap*, const char *, int, struct wsa__Relationship *const*, const char *);
SOAP_FMAC3 struct wsa__Relationship ** SOAP_FMAC4 soap_in_PointerTo_wsa__RelatesTo(struct soap*, const char*, struct wsa__Relationship **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa__RelatesTo(struct soap*, struct wsa__Relationship *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa__RelatesTo
#define soap_write_PointerTo_wsa__RelatesTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa__RelatesTo(soap, data), 0) || soap_put_PointerTo_wsa__RelatesTo(soap, data, "wsa:RelatesTo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__Relationship ** SOAP_FMAC4 soap_get_PointerTo_wsa__RelatesTo(struct soap*, struct wsa__Relationship **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa__RelatesTo
#define soap_read_PointerTo_wsa__RelatesTo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa__RelatesTo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _wsa__Action is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__wsa__Action
#define SOAP_TYPE__wsa__Action (24)
#endif

#define soap_default__wsa__Action(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa__Action soap_serialize_string


#define soap_out__wsa__Action soap_out_string


#define soap_in__wsa__Action soap_in_string


#define soap_put__wsa__Action soap_put_string


#define soap_get__wsa__Action soap_get_string


/* _wsa__To is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__wsa__To
#define SOAP_TYPE__wsa__To (23)
#endif

#define soap_default__wsa__To(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa__To soap_serialize_string


#define soap_out__wsa__To soap_out_string


#define soap_in__wsa__To soap_in_string


#define soap_put__wsa__To soap_put_string


#define soap_get__wsa__To soap_get_string


/* _wsa__MessageID is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__wsa__MessageID
#define SOAP_TYPE__wsa__MessageID (21)
#endif

#define soap_default__wsa__MessageID(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa__MessageID soap_serialize_string


#define soap_out__wsa__MessageID soap_out_string


#define soap_in__wsa__MessageID soap_in_string


#define soap_put__wsa__MessageID soap_put_string


#define soap_get__wsa__MessageID soap_get_string


#ifndef SOAP_TYPE_PointerTowsa__ServiceNameType
#define SOAP_TYPE_PointerTowsa__ServiceNameType (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa__ServiceNameType(struct soap*, struct wsa__ServiceNameType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa__ServiceNameType(struct soap*, const char *, int, struct wsa__ServiceNameType *const*, const char *);
SOAP_FMAC3 struct wsa__ServiceNameType ** SOAP_FMAC4 soap_in_PointerTowsa__ServiceNameType(struct soap*, const char*, struct wsa__ServiceNameType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa__ServiceNameType(struct soap*, struct wsa__ServiceNameType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsa__ServiceNameType
#define soap_write_PointerTowsa__ServiceNameType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsa__ServiceNameType(soap, data), 0) || soap_put_PointerTowsa__ServiceNameType(soap, data, "wsa:ServiceNameType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__ServiceNameType ** SOAP_FMAC4 soap_get_PointerTowsa__ServiceNameType(struct soap*, struct wsa__ServiceNameType **, const char*, const char*);

#ifndef soap_read_PointerTowsa__ServiceNameType
#define soap_read_PointerTowsa__ServiceNameType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsa__ServiceNameType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_QName
#define SOAP_TYPE_PointerTo_QName (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_QName(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_QName(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTo_QName(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_QName(struct soap*, char **const*, const char*, const char*);

#ifndef soap_write_PointerTo_QName
#define soap_write_PointerTo_QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_QName(soap, data), 0) || soap_put_PointerTo_QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTo_QName(struct soap*, char ***, const char*, const char*);

#ifndef soap_read_PointerTo_QName
#define soap_read_PointerTo_QName(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsa__ReferenceParametersType
#define SOAP_TYPE_PointerTowsa__ReferenceParametersType (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa__ReferenceParametersType(struct soap*, struct wsa__ReferenceParametersType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa__ReferenceParametersType(struct soap*, const char *, int, struct wsa__ReferenceParametersType *const*, const char *);
SOAP_FMAC3 struct wsa__ReferenceParametersType ** SOAP_FMAC4 soap_in_PointerTowsa__ReferenceParametersType(struct soap*, const char*, struct wsa__ReferenceParametersType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa__ReferenceParametersType(struct soap*, struct wsa__ReferenceParametersType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsa__ReferenceParametersType
#define soap_write_PointerTowsa__ReferenceParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsa__ReferenceParametersType(soap, data), 0) || soap_put_PointerTowsa__ReferenceParametersType(soap, data, "wsa:ReferenceParametersType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__ReferenceParametersType ** SOAP_FMAC4 soap_get_PointerTowsa__ReferenceParametersType(struct soap*, struct wsa__ReferenceParametersType **, const char*, const char*);

#ifndef soap_read_PointerTowsa__ReferenceParametersType
#define soap_read_PointerTowsa__ReferenceParametersType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsa__ReferenceParametersType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsa__ReferencePropertiesType
#define SOAP_TYPE_PointerTowsa__ReferencePropertiesType (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa__ReferencePropertiesType(struct soap*, struct wsa__ReferencePropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa__ReferencePropertiesType(struct soap*, const char *, int, struct wsa__ReferencePropertiesType *const*, const char *);
SOAP_FMAC3 struct wsa__ReferencePropertiesType ** SOAP_FMAC4 soap_in_PointerTowsa__ReferencePropertiesType(struct soap*, const char*, struct wsa__ReferencePropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa__ReferencePropertiesType(struct soap*, struct wsa__ReferencePropertiesType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsa__ReferencePropertiesType
#define soap_write_PointerTowsa__ReferencePropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsa__ReferencePropertiesType(soap, data), 0) || soap_put_PointerTowsa__ReferencePropertiesType(soap, data, "wsa:ReferencePropertiesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__ReferencePropertiesType ** SOAP_FMAC4 soap_get_PointerTowsa__ReferencePropertiesType(struct soap*, struct wsa__ReferencePropertiesType **, const char*, const char*);

#ifndef soap_read_PointerTowsa__ReferencePropertiesType
#define soap_read_PointerTowsa__ReferencePropertiesType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsa__ReferencePropertiesType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of onvifdiscoH.h */
