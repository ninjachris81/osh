/* onvifdeviceioMediaBindingService.cpp
   Generated by gSOAP 2.8.22 from rcx.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "onvifdeviceioMediaBindingService.h"

MediaBindingService::MediaBindingService()
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

MediaBindingService::MediaBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	MediaBindingService_init(_soap->imode, _soap->omode);
}

MediaBindingService::MediaBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingService_init(iomode, iomode);
}

MediaBindingService::MediaBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingService_init(imode, omode);
}

MediaBindingService::~MediaBindingService()
{	if (this->soap_own)
		soap_free(this->soap);
}

void MediaBindingService::MediaBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"deviceio", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"devicews", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"mediaws", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void MediaBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void MediaBindingService::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	MediaBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
MediaBindingService *MediaBindingService::copy()
{	MediaBindingService *dup = SOAP_NEW_COPY(MediaBindingService);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

int MediaBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int MediaBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int MediaBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int MediaBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int MediaBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int MediaBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void MediaBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void MediaBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *MediaBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void MediaBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void MediaBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
}

const SOAP_ENV__Header *MediaBindingService::soap_header()
{	return this->soap->header;
}

int MediaBindingService::run(int port)
{	if (soap_valid_socket(this->soap->master) || soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()) || serve())
				break;
			soap_destroy(this->soap);
			soap_end(this->soap);
		}
	}
	return this->soap->error;
}

SOAP_SOCKET MediaBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET MediaBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int MediaBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif

int MediaBindingService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->soap->max_keep_alive;
#endif
	do
	{

#ifndef WITH_FASTCGI
		if (this->soap->max_keep_alive > 0 && !--k)
			this->soap->keep_alive = 0;
#endif

		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if (dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___mediaws__GetServiceCapabilities(struct soap*, MediaBindingService*);
static int serve___mediaws__GetVideoSources(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioSources(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioOutputs(struct soap*, MediaBindingService*);
static int serve___mediaws__CreateProfile(struct soap*, MediaBindingService*);
static int serve___mediaws__GetProfile(struct soap*, MediaBindingService*);
static int serve___mediaws__GetProfiles(struct soap*, MediaBindingService*);
static int serve___mediaws__AddVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__AddVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__AddAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__AddAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__AddPTZConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__AddVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__AddMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__AddAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__AddAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__RemoveVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__RemoveVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__RemoveAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__RemoveAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__RemovePTZConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__RemoveVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__RemoveMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__RemoveAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__RemoveAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__DeleteProfile(struct soap*, MediaBindingService*);
static int serve___mediaws__GetVideoSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetVideoEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetVideoAnalyticsConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetMetadataConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioOutputConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioDecoderConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__GetVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__GetVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__GetMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__GetCompatibleVideoEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetCompatibleVideoSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetCompatibleAudioEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetCompatibleAudioSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetCompatibleVideoAnalyticsConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetCompatibleMetadataConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetCompatibleAudioOutputConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__GetCompatibleAudioDecoderConfigurations(struct soap*, MediaBindingService*);
static int serve___mediaws__SetVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__SetVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__SetAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__SetAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__SetVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__SetMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__SetAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__SetAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___mediaws__GetVideoSourceConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___mediaws__GetVideoEncoderConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioSourceConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioEncoderConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___mediaws__GetMetadataConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioOutputConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___mediaws__GetAudioDecoderConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___mediaws__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, MediaBindingService*);
static int serve___mediaws__GetStreamUri(struct soap*, MediaBindingService*);
static int serve___mediaws__StartMulticastStreaming(struct soap*, MediaBindingService*);
static int serve___mediaws__StopMulticastStreaming(struct soap*, MediaBindingService*);
static int serve___mediaws__SetSynchronizationPoint(struct soap*, MediaBindingService*);
static int serve___mediaws__GetSnapshotUri(struct soap*, MediaBindingService*);
static int serve___mediaws__GetVideoSourceModes(struct soap*, MediaBindingService*);
static int serve___mediaws__SetVideoSourceMode(struct soap*, MediaBindingService*);
static int serve___mediaws__GetOSDs(struct soap*, MediaBindingService*);
static int serve___mediaws__GetOSD(struct soap*, MediaBindingService*);
static int serve___mediaws__GetOSDOptions(struct soap*, MediaBindingService*);
static int serve___mediaws__SetOSD(struct soap*, MediaBindingService*);
static int serve___mediaws__CreateOSD(struct soap*, MediaBindingService*);
static int serve___mediaws__DeleteOSD(struct soap*, MediaBindingService*);

int MediaBindingService::dispatch()
{	return dispatch(this->soap);
}

int MediaBindingService::dispatch(struct soap* soap)
{	MediaBindingService_init(soap->imode, soap->omode);
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetServiceCapabilities"))
		return serve___mediaws__GetServiceCapabilities(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetVideoSources"))
		return serve___mediaws__GetVideoSources(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioSources"))
		return serve___mediaws__GetAudioSources(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioOutputs"))
		return serve___mediaws__GetAudioOutputs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:CreateProfile"))
		return serve___mediaws__CreateProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetProfile"))
		return serve___mediaws__GetProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetProfiles"))
		return serve___mediaws__GetProfiles(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:AddVideoEncoderConfiguration"))
		return serve___mediaws__AddVideoEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:AddVideoSourceConfiguration"))
		return serve___mediaws__AddVideoSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:AddAudioEncoderConfiguration"))
		return serve___mediaws__AddAudioEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:AddAudioSourceConfiguration"))
		return serve___mediaws__AddAudioSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:AddPTZConfiguration"))
		return serve___mediaws__AddPTZConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:AddVideoAnalyticsConfiguration"))
		return serve___mediaws__AddVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:AddMetadataConfiguration"))
		return serve___mediaws__AddMetadataConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:AddAudioOutputConfiguration"))
		return serve___mediaws__AddAudioOutputConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:AddAudioDecoderConfiguration"))
		return serve___mediaws__AddAudioDecoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:RemoveVideoEncoderConfiguration"))
		return serve___mediaws__RemoveVideoEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:RemoveVideoSourceConfiguration"))
		return serve___mediaws__RemoveVideoSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:RemoveAudioEncoderConfiguration"))
		return serve___mediaws__RemoveAudioEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:RemoveAudioSourceConfiguration"))
		return serve___mediaws__RemoveAudioSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:RemovePTZConfiguration"))
		return serve___mediaws__RemovePTZConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:RemoveVideoAnalyticsConfiguration"))
		return serve___mediaws__RemoveVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:RemoveMetadataConfiguration"))
		return serve___mediaws__RemoveMetadataConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:RemoveAudioOutputConfiguration"))
		return serve___mediaws__RemoveAudioOutputConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:RemoveAudioDecoderConfiguration"))
		return serve___mediaws__RemoveAudioDecoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:DeleteProfile"))
		return serve___mediaws__DeleteProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetVideoSourceConfigurations"))
		return serve___mediaws__GetVideoSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetVideoEncoderConfigurations"))
		return serve___mediaws__GetVideoEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioSourceConfigurations"))
		return serve___mediaws__GetAudioSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioEncoderConfigurations"))
		return serve___mediaws__GetAudioEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetVideoAnalyticsConfigurations"))
		return serve___mediaws__GetVideoAnalyticsConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetMetadataConfigurations"))
		return serve___mediaws__GetMetadataConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioOutputConfigurations"))
		return serve___mediaws__GetAudioOutputConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioDecoderConfigurations"))
		return serve___mediaws__GetAudioDecoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetVideoSourceConfiguration"))
		return serve___mediaws__GetVideoSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetVideoEncoderConfiguration"))
		return serve___mediaws__GetVideoEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioSourceConfiguration"))
		return serve___mediaws__GetAudioSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioEncoderConfiguration"))
		return serve___mediaws__GetAudioEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetVideoAnalyticsConfiguration"))
		return serve___mediaws__GetVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetMetadataConfiguration"))
		return serve___mediaws__GetMetadataConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioOutputConfiguration"))
		return serve___mediaws__GetAudioOutputConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioDecoderConfiguration"))
		return serve___mediaws__GetAudioDecoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetCompatibleVideoEncoderConfigurations"))
		return serve___mediaws__GetCompatibleVideoEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetCompatibleVideoSourceConfigurations"))
		return serve___mediaws__GetCompatibleVideoSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetCompatibleAudioEncoderConfigurations"))
		return serve___mediaws__GetCompatibleAudioEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetCompatibleAudioSourceConfigurations"))
		return serve___mediaws__GetCompatibleAudioSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetCompatibleVideoAnalyticsConfigurations"))
		return serve___mediaws__GetCompatibleVideoAnalyticsConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetCompatibleMetadataConfigurations"))
		return serve___mediaws__GetCompatibleMetadataConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetCompatibleAudioOutputConfigurations"))
		return serve___mediaws__GetCompatibleAudioOutputConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetCompatibleAudioDecoderConfigurations"))
		return serve___mediaws__GetCompatibleAudioDecoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:SetVideoSourceConfiguration"))
		return serve___mediaws__SetVideoSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:SetVideoEncoderConfiguration"))
		return serve___mediaws__SetVideoEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:SetAudioSourceConfiguration"))
		return serve___mediaws__SetAudioSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:SetAudioEncoderConfiguration"))
		return serve___mediaws__SetAudioEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:SetVideoAnalyticsConfiguration"))
		return serve___mediaws__SetVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:SetMetadataConfiguration"))
		return serve___mediaws__SetMetadataConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:SetAudioOutputConfiguration"))
		return serve___mediaws__SetAudioOutputConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:SetAudioDecoderConfiguration"))
		return serve___mediaws__SetAudioDecoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetVideoSourceConfigurationOptions"))
		return serve___mediaws__GetVideoSourceConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetVideoEncoderConfigurationOptions"))
		return serve___mediaws__GetVideoEncoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioSourceConfigurationOptions"))
		return serve___mediaws__GetAudioSourceConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioEncoderConfigurationOptions"))
		return serve___mediaws__GetAudioEncoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetMetadataConfigurationOptions"))
		return serve___mediaws__GetMetadataConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioOutputConfigurationOptions"))
		return serve___mediaws__GetAudioOutputConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetAudioDecoderConfigurationOptions"))
		return serve___mediaws__GetAudioDecoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetGuaranteedNumberOfVideoEncoderInstances"))
		return serve___mediaws__GetGuaranteedNumberOfVideoEncoderInstances(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetStreamUri"))
		return serve___mediaws__GetStreamUri(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:StartMulticastStreaming"))
		return serve___mediaws__StartMulticastStreaming(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:StopMulticastStreaming"))
		return serve___mediaws__StopMulticastStreaming(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:SetSynchronizationPoint"))
		return serve___mediaws__SetSynchronizationPoint(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetSnapshotUri"))
		return serve___mediaws__GetSnapshotUri(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetVideoSourceModes"))
		return serve___mediaws__GetVideoSourceModes(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:SetVideoSourceMode"))
		return serve___mediaws__SetVideoSourceMode(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetOSDs"))
		return serve___mediaws__GetOSDs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetOSD"))
		return serve___mediaws__GetOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:GetOSDOptions"))
		return serve___mediaws__GetOSDOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:SetOSD"))
		return serve___mediaws__SetOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:CreateOSD"))
		return serve___mediaws__CreateOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "mediaws:DeleteOSD"))
		return serve___mediaws__DeleteOSD(soap, this);
	return soap->error = SOAP_NO_METHOD;
}

static int serve___mediaws__GetServiceCapabilities(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetServiceCapabilities soap_tmp___mediaws__GetServiceCapabilities;
	_mediaws__GetServiceCapabilitiesResponse mediaws__GetServiceCapabilitiesResponse;
	mediaws__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___mediaws__GetServiceCapabilities(soap, &soap_tmp___mediaws__GetServiceCapabilities);
	if (!soap_get___mediaws__GetServiceCapabilities(soap, &soap_tmp___mediaws__GetServiceCapabilities, "-mediaws:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___mediaws__GetServiceCapabilities.mediaws__GetServiceCapabilities, mediaws__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetServiceCapabilitiesResponse.soap_put(soap, "mediaws:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetServiceCapabilitiesResponse.soap_put(soap, "mediaws:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetVideoSources(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetVideoSources soap_tmp___mediaws__GetVideoSources;
	_mediaws__GetVideoSourcesResponse mediaws__GetVideoSourcesResponse;
	mediaws__GetVideoSourcesResponse.soap_default(soap);
	soap_default___mediaws__GetVideoSources(soap, &soap_tmp___mediaws__GetVideoSources);
	if (!soap_get___mediaws__GetVideoSources(soap, &soap_tmp___mediaws__GetVideoSources, "-mediaws:GetVideoSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSources(soap_tmp___mediaws__GetVideoSources.mediaws__GetVideoSources, mediaws__GetVideoSourcesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetVideoSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetVideoSourcesResponse.soap_put(soap, "mediaws:GetVideoSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetVideoSourcesResponse.soap_put(soap, "mediaws:GetVideoSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioSources(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioSources soap_tmp___mediaws__GetAudioSources;
	_mediaws__GetAudioSourcesResponse mediaws__GetAudioSourcesResponse;
	mediaws__GetAudioSourcesResponse.soap_default(soap);
	soap_default___mediaws__GetAudioSources(soap, &soap_tmp___mediaws__GetAudioSources);
	if (!soap_get___mediaws__GetAudioSources(soap, &soap_tmp___mediaws__GetAudioSources, "-mediaws:GetAudioSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSources(soap_tmp___mediaws__GetAudioSources.mediaws__GetAudioSources, mediaws__GetAudioSourcesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioSourcesResponse.soap_put(soap, "mediaws:GetAudioSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioSourcesResponse.soap_put(soap, "mediaws:GetAudioSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioOutputs(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioOutputs soap_tmp___mediaws__GetAudioOutputs;
	_mediaws__GetAudioOutputsResponse mediaws__GetAudioOutputsResponse;
	mediaws__GetAudioOutputsResponse.soap_default(soap);
	soap_default___mediaws__GetAudioOutputs(soap, &soap_tmp___mediaws__GetAudioOutputs);
	if (!soap_get___mediaws__GetAudioOutputs(soap, &soap_tmp___mediaws__GetAudioOutputs, "-mediaws:GetAudioOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputs(soap_tmp___mediaws__GetAudioOutputs.mediaws__GetAudioOutputs, mediaws__GetAudioOutputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioOutputsResponse.soap_put(soap, "mediaws:GetAudioOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioOutputsResponse.soap_put(soap, "mediaws:GetAudioOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__CreateProfile(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__CreateProfile soap_tmp___mediaws__CreateProfile;
	_mediaws__CreateProfileResponse mediaws__CreateProfileResponse;
	mediaws__CreateProfileResponse.soap_default(soap);
	soap_default___mediaws__CreateProfile(soap, &soap_tmp___mediaws__CreateProfile);
	if (!soap_get___mediaws__CreateProfile(soap, &soap_tmp___mediaws__CreateProfile, "-mediaws:CreateProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateProfile(soap_tmp___mediaws__CreateProfile.mediaws__CreateProfile, mediaws__CreateProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__CreateProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__CreateProfileResponse.soap_put(soap, "mediaws:CreateProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__CreateProfileResponse.soap_put(soap, "mediaws:CreateProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetProfile(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetProfile soap_tmp___mediaws__GetProfile;
	_mediaws__GetProfileResponse mediaws__GetProfileResponse;
	mediaws__GetProfileResponse.soap_default(soap);
	soap_default___mediaws__GetProfile(soap, &soap_tmp___mediaws__GetProfile);
	if (!soap_get___mediaws__GetProfile(soap, &soap_tmp___mediaws__GetProfile, "-mediaws:GetProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetProfile(soap_tmp___mediaws__GetProfile.mediaws__GetProfile, mediaws__GetProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetProfileResponse.soap_put(soap, "mediaws:GetProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetProfileResponse.soap_put(soap, "mediaws:GetProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetProfiles(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetProfiles soap_tmp___mediaws__GetProfiles;
	_mediaws__GetProfilesResponse mediaws__GetProfilesResponse;
	mediaws__GetProfilesResponse.soap_default(soap);
	soap_default___mediaws__GetProfiles(soap, &soap_tmp___mediaws__GetProfiles);
	if (!soap_get___mediaws__GetProfiles(soap, &soap_tmp___mediaws__GetProfiles, "-mediaws:GetProfiles", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetProfiles(soap_tmp___mediaws__GetProfiles.mediaws__GetProfiles, mediaws__GetProfilesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetProfilesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetProfilesResponse.soap_put(soap, "mediaws:GetProfilesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetProfilesResponse.soap_put(soap, "mediaws:GetProfilesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__AddVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__AddVideoEncoderConfiguration soap_tmp___mediaws__AddVideoEncoderConfiguration;
	_mediaws__AddVideoEncoderConfigurationResponse mediaws__AddVideoEncoderConfigurationResponse;
	mediaws__AddVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__AddVideoEncoderConfiguration(soap, &soap_tmp___mediaws__AddVideoEncoderConfiguration);
	if (!soap_get___mediaws__AddVideoEncoderConfiguration(soap, &soap_tmp___mediaws__AddVideoEncoderConfiguration, "-mediaws:AddVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddVideoEncoderConfiguration(soap_tmp___mediaws__AddVideoEncoderConfiguration.mediaws__AddVideoEncoderConfiguration, mediaws__AddVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__AddVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__AddVideoEncoderConfigurationResponse.soap_put(soap, "mediaws:AddVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__AddVideoEncoderConfigurationResponse.soap_put(soap, "mediaws:AddVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__AddVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__AddVideoSourceConfiguration soap_tmp___mediaws__AddVideoSourceConfiguration;
	_mediaws__AddVideoSourceConfigurationResponse mediaws__AddVideoSourceConfigurationResponse;
	mediaws__AddVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___mediaws__AddVideoSourceConfiguration(soap, &soap_tmp___mediaws__AddVideoSourceConfiguration);
	if (!soap_get___mediaws__AddVideoSourceConfiguration(soap, &soap_tmp___mediaws__AddVideoSourceConfiguration, "-mediaws:AddVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddVideoSourceConfiguration(soap_tmp___mediaws__AddVideoSourceConfiguration.mediaws__AddVideoSourceConfiguration, mediaws__AddVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__AddVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__AddVideoSourceConfigurationResponse.soap_put(soap, "mediaws:AddVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__AddVideoSourceConfigurationResponse.soap_put(soap, "mediaws:AddVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__AddAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__AddAudioEncoderConfiguration soap_tmp___mediaws__AddAudioEncoderConfiguration;
	_mediaws__AddAudioEncoderConfigurationResponse mediaws__AddAudioEncoderConfigurationResponse;
	mediaws__AddAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__AddAudioEncoderConfiguration(soap, &soap_tmp___mediaws__AddAudioEncoderConfiguration);
	if (!soap_get___mediaws__AddAudioEncoderConfiguration(soap, &soap_tmp___mediaws__AddAudioEncoderConfiguration, "-mediaws:AddAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioEncoderConfiguration(soap_tmp___mediaws__AddAudioEncoderConfiguration.mediaws__AddAudioEncoderConfiguration, mediaws__AddAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__AddAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__AddAudioEncoderConfigurationResponse.soap_put(soap, "mediaws:AddAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__AddAudioEncoderConfigurationResponse.soap_put(soap, "mediaws:AddAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__AddAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__AddAudioSourceConfiguration soap_tmp___mediaws__AddAudioSourceConfiguration;
	_mediaws__AddAudioSourceConfigurationResponse mediaws__AddAudioSourceConfigurationResponse;
	mediaws__AddAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___mediaws__AddAudioSourceConfiguration(soap, &soap_tmp___mediaws__AddAudioSourceConfiguration);
	if (!soap_get___mediaws__AddAudioSourceConfiguration(soap, &soap_tmp___mediaws__AddAudioSourceConfiguration, "-mediaws:AddAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioSourceConfiguration(soap_tmp___mediaws__AddAudioSourceConfiguration.mediaws__AddAudioSourceConfiguration, mediaws__AddAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__AddAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__AddAudioSourceConfigurationResponse.soap_put(soap, "mediaws:AddAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__AddAudioSourceConfigurationResponse.soap_put(soap, "mediaws:AddAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__AddPTZConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__AddPTZConfiguration soap_tmp___mediaws__AddPTZConfiguration;
	_mediaws__AddPTZConfigurationResponse mediaws__AddPTZConfigurationResponse;
	mediaws__AddPTZConfigurationResponse.soap_default(soap);
	soap_default___mediaws__AddPTZConfiguration(soap, &soap_tmp___mediaws__AddPTZConfiguration);
	if (!soap_get___mediaws__AddPTZConfiguration(soap, &soap_tmp___mediaws__AddPTZConfiguration, "-mediaws:AddPTZConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddPTZConfiguration(soap_tmp___mediaws__AddPTZConfiguration.mediaws__AddPTZConfiguration, mediaws__AddPTZConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__AddPTZConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__AddPTZConfigurationResponse.soap_put(soap, "mediaws:AddPTZConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__AddPTZConfigurationResponse.soap_put(soap, "mediaws:AddPTZConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__AddVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__AddVideoAnalyticsConfiguration soap_tmp___mediaws__AddVideoAnalyticsConfiguration;
	_mediaws__AddVideoAnalyticsConfigurationResponse mediaws__AddVideoAnalyticsConfigurationResponse;
	mediaws__AddVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___mediaws__AddVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__AddVideoAnalyticsConfiguration);
	if (!soap_get___mediaws__AddVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__AddVideoAnalyticsConfiguration, "-mediaws:AddVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddVideoAnalyticsConfiguration(soap_tmp___mediaws__AddVideoAnalyticsConfiguration.mediaws__AddVideoAnalyticsConfiguration, mediaws__AddVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__AddVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__AddVideoAnalyticsConfigurationResponse.soap_put(soap, "mediaws:AddVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__AddVideoAnalyticsConfigurationResponse.soap_put(soap, "mediaws:AddVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__AddMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__AddMetadataConfiguration soap_tmp___mediaws__AddMetadataConfiguration;
	_mediaws__AddMetadataConfigurationResponse mediaws__AddMetadataConfigurationResponse;
	mediaws__AddMetadataConfigurationResponse.soap_default(soap);
	soap_default___mediaws__AddMetadataConfiguration(soap, &soap_tmp___mediaws__AddMetadataConfiguration);
	if (!soap_get___mediaws__AddMetadataConfiguration(soap, &soap_tmp___mediaws__AddMetadataConfiguration, "-mediaws:AddMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddMetadataConfiguration(soap_tmp___mediaws__AddMetadataConfiguration.mediaws__AddMetadataConfiguration, mediaws__AddMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__AddMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__AddMetadataConfigurationResponse.soap_put(soap, "mediaws:AddMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__AddMetadataConfigurationResponse.soap_put(soap, "mediaws:AddMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__AddAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__AddAudioOutputConfiguration soap_tmp___mediaws__AddAudioOutputConfiguration;
	_mediaws__AddAudioOutputConfigurationResponse mediaws__AddAudioOutputConfigurationResponse;
	mediaws__AddAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___mediaws__AddAudioOutputConfiguration(soap, &soap_tmp___mediaws__AddAudioOutputConfiguration);
	if (!soap_get___mediaws__AddAudioOutputConfiguration(soap, &soap_tmp___mediaws__AddAudioOutputConfiguration, "-mediaws:AddAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioOutputConfiguration(soap_tmp___mediaws__AddAudioOutputConfiguration.mediaws__AddAudioOutputConfiguration, mediaws__AddAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__AddAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__AddAudioOutputConfigurationResponse.soap_put(soap, "mediaws:AddAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__AddAudioOutputConfigurationResponse.soap_put(soap, "mediaws:AddAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__AddAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__AddAudioDecoderConfiguration soap_tmp___mediaws__AddAudioDecoderConfiguration;
	_mediaws__AddAudioDecoderConfigurationResponse mediaws__AddAudioDecoderConfigurationResponse;
	mediaws__AddAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__AddAudioDecoderConfiguration(soap, &soap_tmp___mediaws__AddAudioDecoderConfiguration);
	if (!soap_get___mediaws__AddAudioDecoderConfiguration(soap, &soap_tmp___mediaws__AddAudioDecoderConfiguration, "-mediaws:AddAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioDecoderConfiguration(soap_tmp___mediaws__AddAudioDecoderConfiguration.mediaws__AddAudioDecoderConfiguration, mediaws__AddAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__AddAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__AddAudioDecoderConfigurationResponse.soap_put(soap, "mediaws:AddAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__AddAudioDecoderConfigurationResponse.soap_put(soap, "mediaws:AddAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__RemoveVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__RemoveVideoEncoderConfiguration soap_tmp___mediaws__RemoveVideoEncoderConfiguration;
	_mediaws__RemoveVideoEncoderConfigurationResponse mediaws__RemoveVideoEncoderConfigurationResponse;
	mediaws__RemoveVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__RemoveVideoEncoderConfiguration(soap, &soap_tmp___mediaws__RemoveVideoEncoderConfiguration);
	if (!soap_get___mediaws__RemoveVideoEncoderConfiguration(soap, &soap_tmp___mediaws__RemoveVideoEncoderConfiguration, "-mediaws:RemoveVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveVideoEncoderConfiguration(soap_tmp___mediaws__RemoveVideoEncoderConfiguration.mediaws__RemoveVideoEncoderConfiguration, mediaws__RemoveVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__RemoveVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__RemoveVideoEncoderConfigurationResponse.soap_put(soap, "mediaws:RemoveVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__RemoveVideoEncoderConfigurationResponse.soap_put(soap, "mediaws:RemoveVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__RemoveVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__RemoveVideoSourceConfiguration soap_tmp___mediaws__RemoveVideoSourceConfiguration;
	_mediaws__RemoveVideoSourceConfigurationResponse mediaws__RemoveVideoSourceConfigurationResponse;
	mediaws__RemoveVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___mediaws__RemoveVideoSourceConfiguration(soap, &soap_tmp___mediaws__RemoveVideoSourceConfiguration);
	if (!soap_get___mediaws__RemoveVideoSourceConfiguration(soap, &soap_tmp___mediaws__RemoveVideoSourceConfiguration, "-mediaws:RemoveVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveVideoSourceConfiguration(soap_tmp___mediaws__RemoveVideoSourceConfiguration.mediaws__RemoveVideoSourceConfiguration, mediaws__RemoveVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__RemoveVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__RemoveVideoSourceConfigurationResponse.soap_put(soap, "mediaws:RemoveVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__RemoveVideoSourceConfigurationResponse.soap_put(soap, "mediaws:RemoveVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__RemoveAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__RemoveAudioEncoderConfiguration soap_tmp___mediaws__RemoveAudioEncoderConfiguration;
	_mediaws__RemoveAudioEncoderConfigurationResponse mediaws__RemoveAudioEncoderConfigurationResponse;
	mediaws__RemoveAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__RemoveAudioEncoderConfiguration(soap, &soap_tmp___mediaws__RemoveAudioEncoderConfiguration);
	if (!soap_get___mediaws__RemoveAudioEncoderConfiguration(soap, &soap_tmp___mediaws__RemoveAudioEncoderConfiguration, "-mediaws:RemoveAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioEncoderConfiguration(soap_tmp___mediaws__RemoveAudioEncoderConfiguration.mediaws__RemoveAudioEncoderConfiguration, mediaws__RemoveAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__RemoveAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__RemoveAudioEncoderConfigurationResponse.soap_put(soap, "mediaws:RemoveAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__RemoveAudioEncoderConfigurationResponse.soap_put(soap, "mediaws:RemoveAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__RemoveAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__RemoveAudioSourceConfiguration soap_tmp___mediaws__RemoveAudioSourceConfiguration;
	_mediaws__RemoveAudioSourceConfigurationResponse mediaws__RemoveAudioSourceConfigurationResponse;
	mediaws__RemoveAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___mediaws__RemoveAudioSourceConfiguration(soap, &soap_tmp___mediaws__RemoveAudioSourceConfiguration);
	if (!soap_get___mediaws__RemoveAudioSourceConfiguration(soap, &soap_tmp___mediaws__RemoveAudioSourceConfiguration, "-mediaws:RemoveAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioSourceConfiguration(soap_tmp___mediaws__RemoveAudioSourceConfiguration.mediaws__RemoveAudioSourceConfiguration, mediaws__RemoveAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__RemoveAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__RemoveAudioSourceConfigurationResponse.soap_put(soap, "mediaws:RemoveAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__RemoveAudioSourceConfigurationResponse.soap_put(soap, "mediaws:RemoveAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__RemovePTZConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__RemovePTZConfiguration soap_tmp___mediaws__RemovePTZConfiguration;
	_mediaws__RemovePTZConfigurationResponse mediaws__RemovePTZConfigurationResponse;
	mediaws__RemovePTZConfigurationResponse.soap_default(soap);
	soap_default___mediaws__RemovePTZConfiguration(soap, &soap_tmp___mediaws__RemovePTZConfiguration);
	if (!soap_get___mediaws__RemovePTZConfiguration(soap, &soap_tmp___mediaws__RemovePTZConfiguration, "-mediaws:RemovePTZConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemovePTZConfiguration(soap_tmp___mediaws__RemovePTZConfiguration.mediaws__RemovePTZConfiguration, mediaws__RemovePTZConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__RemovePTZConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__RemovePTZConfigurationResponse.soap_put(soap, "mediaws:RemovePTZConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__RemovePTZConfigurationResponse.soap_put(soap, "mediaws:RemovePTZConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__RemoveVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__RemoveVideoAnalyticsConfiguration soap_tmp___mediaws__RemoveVideoAnalyticsConfiguration;
	_mediaws__RemoveVideoAnalyticsConfigurationResponse mediaws__RemoveVideoAnalyticsConfigurationResponse;
	mediaws__RemoveVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___mediaws__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__RemoveVideoAnalyticsConfiguration);
	if (!soap_get___mediaws__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__RemoveVideoAnalyticsConfiguration, "-mediaws:RemoveVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveVideoAnalyticsConfiguration(soap_tmp___mediaws__RemoveVideoAnalyticsConfiguration.mediaws__RemoveVideoAnalyticsConfiguration, mediaws__RemoveVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__RemoveVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__RemoveVideoAnalyticsConfigurationResponse.soap_put(soap, "mediaws:RemoveVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__RemoveVideoAnalyticsConfigurationResponse.soap_put(soap, "mediaws:RemoveVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__RemoveMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__RemoveMetadataConfiguration soap_tmp___mediaws__RemoveMetadataConfiguration;
	_mediaws__RemoveMetadataConfigurationResponse mediaws__RemoveMetadataConfigurationResponse;
	mediaws__RemoveMetadataConfigurationResponse.soap_default(soap);
	soap_default___mediaws__RemoveMetadataConfiguration(soap, &soap_tmp___mediaws__RemoveMetadataConfiguration);
	if (!soap_get___mediaws__RemoveMetadataConfiguration(soap, &soap_tmp___mediaws__RemoveMetadataConfiguration, "-mediaws:RemoveMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveMetadataConfiguration(soap_tmp___mediaws__RemoveMetadataConfiguration.mediaws__RemoveMetadataConfiguration, mediaws__RemoveMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__RemoveMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__RemoveMetadataConfigurationResponse.soap_put(soap, "mediaws:RemoveMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__RemoveMetadataConfigurationResponse.soap_put(soap, "mediaws:RemoveMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__RemoveAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__RemoveAudioOutputConfiguration soap_tmp___mediaws__RemoveAudioOutputConfiguration;
	_mediaws__RemoveAudioOutputConfigurationResponse mediaws__RemoveAudioOutputConfigurationResponse;
	mediaws__RemoveAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___mediaws__RemoveAudioOutputConfiguration(soap, &soap_tmp___mediaws__RemoveAudioOutputConfiguration);
	if (!soap_get___mediaws__RemoveAudioOutputConfiguration(soap, &soap_tmp___mediaws__RemoveAudioOutputConfiguration, "-mediaws:RemoveAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioOutputConfiguration(soap_tmp___mediaws__RemoveAudioOutputConfiguration.mediaws__RemoveAudioOutputConfiguration, mediaws__RemoveAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__RemoveAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__RemoveAudioOutputConfigurationResponse.soap_put(soap, "mediaws:RemoveAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__RemoveAudioOutputConfigurationResponse.soap_put(soap, "mediaws:RemoveAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__RemoveAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__RemoveAudioDecoderConfiguration soap_tmp___mediaws__RemoveAudioDecoderConfiguration;
	_mediaws__RemoveAudioDecoderConfigurationResponse mediaws__RemoveAudioDecoderConfigurationResponse;
	mediaws__RemoveAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__RemoveAudioDecoderConfiguration(soap, &soap_tmp___mediaws__RemoveAudioDecoderConfiguration);
	if (!soap_get___mediaws__RemoveAudioDecoderConfiguration(soap, &soap_tmp___mediaws__RemoveAudioDecoderConfiguration, "-mediaws:RemoveAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioDecoderConfiguration(soap_tmp___mediaws__RemoveAudioDecoderConfiguration.mediaws__RemoveAudioDecoderConfiguration, mediaws__RemoveAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__RemoveAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__RemoveAudioDecoderConfigurationResponse.soap_put(soap, "mediaws:RemoveAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__RemoveAudioDecoderConfigurationResponse.soap_put(soap, "mediaws:RemoveAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__DeleteProfile(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__DeleteProfile soap_tmp___mediaws__DeleteProfile;
	_mediaws__DeleteProfileResponse mediaws__DeleteProfileResponse;
	mediaws__DeleteProfileResponse.soap_default(soap);
	soap_default___mediaws__DeleteProfile(soap, &soap_tmp___mediaws__DeleteProfile);
	if (!soap_get___mediaws__DeleteProfile(soap, &soap_tmp___mediaws__DeleteProfile, "-mediaws:DeleteProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteProfile(soap_tmp___mediaws__DeleteProfile.mediaws__DeleteProfile, mediaws__DeleteProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__DeleteProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__DeleteProfileResponse.soap_put(soap, "mediaws:DeleteProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__DeleteProfileResponse.soap_put(soap, "mediaws:DeleteProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetVideoSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetVideoSourceConfigurations soap_tmp___mediaws__GetVideoSourceConfigurations;
	_mediaws__GetVideoSourceConfigurationsResponse mediaws__GetVideoSourceConfigurationsResponse;
	mediaws__GetVideoSourceConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetVideoSourceConfigurations(soap, &soap_tmp___mediaws__GetVideoSourceConfigurations);
	if (!soap_get___mediaws__GetVideoSourceConfigurations(soap, &soap_tmp___mediaws__GetVideoSourceConfigurations, "-mediaws:GetVideoSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurations(soap_tmp___mediaws__GetVideoSourceConfigurations.mediaws__GetVideoSourceConfigurations, mediaws__GetVideoSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetVideoSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetVideoSourceConfigurationsResponse.soap_put(soap, "mediaws:GetVideoSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetVideoSourceConfigurationsResponse.soap_put(soap, "mediaws:GetVideoSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetVideoEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetVideoEncoderConfigurations soap_tmp___mediaws__GetVideoEncoderConfigurations;
	_mediaws__GetVideoEncoderConfigurationsResponse mediaws__GetVideoEncoderConfigurationsResponse;
	mediaws__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetVideoEncoderConfigurations(soap, &soap_tmp___mediaws__GetVideoEncoderConfigurations);
	if (!soap_get___mediaws__GetVideoEncoderConfigurations(soap, &soap_tmp___mediaws__GetVideoEncoderConfigurations, "-mediaws:GetVideoEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfigurations(soap_tmp___mediaws__GetVideoEncoderConfigurations.mediaws__GetVideoEncoderConfigurations, mediaws__GetVideoEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetVideoEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetVideoEncoderConfigurationsResponse.soap_put(soap, "mediaws:GetVideoEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetVideoEncoderConfigurationsResponse.soap_put(soap, "mediaws:GetVideoEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioSourceConfigurations soap_tmp___mediaws__GetAudioSourceConfigurations;
	_mediaws__GetAudioSourceConfigurationsResponse mediaws__GetAudioSourceConfigurationsResponse;
	mediaws__GetAudioSourceConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetAudioSourceConfigurations(soap, &soap_tmp___mediaws__GetAudioSourceConfigurations);
	if (!soap_get___mediaws__GetAudioSourceConfigurations(soap, &soap_tmp___mediaws__GetAudioSourceConfigurations, "-mediaws:GetAudioSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurations(soap_tmp___mediaws__GetAudioSourceConfigurations.mediaws__GetAudioSourceConfigurations, mediaws__GetAudioSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioSourceConfigurationsResponse.soap_put(soap, "mediaws:GetAudioSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioSourceConfigurationsResponse.soap_put(soap, "mediaws:GetAudioSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioEncoderConfigurations soap_tmp___mediaws__GetAudioEncoderConfigurations;
	_mediaws__GetAudioEncoderConfigurationsResponse mediaws__GetAudioEncoderConfigurationsResponse;
	mediaws__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetAudioEncoderConfigurations(soap, &soap_tmp___mediaws__GetAudioEncoderConfigurations);
	if (!soap_get___mediaws__GetAudioEncoderConfigurations(soap, &soap_tmp___mediaws__GetAudioEncoderConfigurations, "-mediaws:GetAudioEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfigurations(soap_tmp___mediaws__GetAudioEncoderConfigurations.mediaws__GetAudioEncoderConfigurations, mediaws__GetAudioEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioEncoderConfigurationsResponse.soap_put(soap, "mediaws:GetAudioEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioEncoderConfigurationsResponse.soap_put(soap, "mediaws:GetAudioEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetVideoAnalyticsConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetVideoAnalyticsConfigurations soap_tmp___mediaws__GetVideoAnalyticsConfigurations;
	_mediaws__GetVideoAnalyticsConfigurationsResponse mediaws__GetVideoAnalyticsConfigurationsResponse;
	mediaws__GetVideoAnalyticsConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetVideoAnalyticsConfigurations(soap, &soap_tmp___mediaws__GetVideoAnalyticsConfigurations);
	if (!soap_get___mediaws__GetVideoAnalyticsConfigurations(soap, &soap_tmp___mediaws__GetVideoAnalyticsConfigurations, "-mediaws:GetVideoAnalyticsConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoAnalyticsConfigurations(soap_tmp___mediaws__GetVideoAnalyticsConfigurations.mediaws__GetVideoAnalyticsConfigurations, mediaws__GetVideoAnalyticsConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetVideoAnalyticsConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetVideoAnalyticsConfigurationsResponse.soap_put(soap, "mediaws:GetVideoAnalyticsConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetVideoAnalyticsConfigurationsResponse.soap_put(soap, "mediaws:GetVideoAnalyticsConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetMetadataConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetMetadataConfigurations soap_tmp___mediaws__GetMetadataConfigurations;
	_mediaws__GetMetadataConfigurationsResponse mediaws__GetMetadataConfigurationsResponse;
	mediaws__GetMetadataConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetMetadataConfigurations(soap, &soap_tmp___mediaws__GetMetadataConfigurations);
	if (!soap_get___mediaws__GetMetadataConfigurations(soap, &soap_tmp___mediaws__GetMetadataConfigurations, "-mediaws:GetMetadataConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfigurations(soap_tmp___mediaws__GetMetadataConfigurations.mediaws__GetMetadataConfigurations, mediaws__GetMetadataConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetMetadataConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetMetadataConfigurationsResponse.soap_put(soap, "mediaws:GetMetadataConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetMetadataConfigurationsResponse.soap_put(soap, "mediaws:GetMetadataConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioOutputConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioOutputConfigurations soap_tmp___mediaws__GetAudioOutputConfigurations;
	_mediaws__GetAudioOutputConfigurationsResponse mediaws__GetAudioOutputConfigurationsResponse;
	mediaws__GetAudioOutputConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetAudioOutputConfigurations(soap, &soap_tmp___mediaws__GetAudioOutputConfigurations);
	if (!soap_get___mediaws__GetAudioOutputConfigurations(soap, &soap_tmp___mediaws__GetAudioOutputConfigurations, "-mediaws:GetAudioOutputConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurations(soap_tmp___mediaws__GetAudioOutputConfigurations.mediaws__GetAudioOutputConfigurations, mediaws__GetAudioOutputConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioOutputConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioOutputConfigurationsResponse.soap_put(soap, "mediaws:GetAudioOutputConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioOutputConfigurationsResponse.soap_put(soap, "mediaws:GetAudioOutputConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioDecoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioDecoderConfigurations soap_tmp___mediaws__GetAudioDecoderConfigurations;
	_mediaws__GetAudioDecoderConfigurationsResponse mediaws__GetAudioDecoderConfigurationsResponse;
	mediaws__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetAudioDecoderConfigurations(soap, &soap_tmp___mediaws__GetAudioDecoderConfigurations);
	if (!soap_get___mediaws__GetAudioDecoderConfigurations(soap, &soap_tmp___mediaws__GetAudioDecoderConfigurations, "-mediaws:GetAudioDecoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfigurations(soap_tmp___mediaws__GetAudioDecoderConfigurations.mediaws__GetAudioDecoderConfigurations, mediaws__GetAudioDecoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioDecoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioDecoderConfigurationsResponse.soap_put(soap, "mediaws:GetAudioDecoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioDecoderConfigurationsResponse.soap_put(soap, "mediaws:GetAudioDecoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetVideoSourceConfiguration soap_tmp___mediaws__GetVideoSourceConfiguration;
	_mediaws__GetVideoSourceConfigurationResponse mediaws__GetVideoSourceConfigurationResponse;
	mediaws__GetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___mediaws__GetVideoSourceConfiguration(soap, &soap_tmp___mediaws__GetVideoSourceConfiguration);
	if (!soap_get___mediaws__GetVideoSourceConfiguration(soap, &soap_tmp___mediaws__GetVideoSourceConfiguration, "-mediaws:GetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfiguration(soap_tmp___mediaws__GetVideoSourceConfiguration.mediaws__GetVideoSourceConfiguration, mediaws__GetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetVideoSourceConfigurationResponse.soap_put(soap, "mediaws:GetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetVideoSourceConfigurationResponse.soap_put(soap, "mediaws:GetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetVideoEncoderConfiguration soap_tmp___mediaws__GetVideoEncoderConfiguration;
	_mediaws__GetVideoEncoderConfigurationResponse mediaws__GetVideoEncoderConfigurationResponse;
	mediaws__GetVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__GetVideoEncoderConfiguration(soap, &soap_tmp___mediaws__GetVideoEncoderConfiguration);
	if (!soap_get___mediaws__GetVideoEncoderConfiguration(soap, &soap_tmp___mediaws__GetVideoEncoderConfiguration, "-mediaws:GetVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfiguration(soap_tmp___mediaws__GetVideoEncoderConfiguration.mediaws__GetVideoEncoderConfiguration, mediaws__GetVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetVideoEncoderConfigurationResponse.soap_put(soap, "mediaws:GetVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetVideoEncoderConfigurationResponse.soap_put(soap, "mediaws:GetVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioSourceConfiguration soap_tmp___mediaws__GetAudioSourceConfiguration;
	_mediaws__GetAudioSourceConfigurationResponse mediaws__GetAudioSourceConfigurationResponse;
	mediaws__GetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___mediaws__GetAudioSourceConfiguration(soap, &soap_tmp___mediaws__GetAudioSourceConfiguration);
	if (!soap_get___mediaws__GetAudioSourceConfiguration(soap, &soap_tmp___mediaws__GetAudioSourceConfiguration, "-mediaws:GetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfiguration(soap_tmp___mediaws__GetAudioSourceConfiguration.mediaws__GetAudioSourceConfiguration, mediaws__GetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioSourceConfigurationResponse.soap_put(soap, "mediaws:GetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioSourceConfigurationResponse.soap_put(soap, "mediaws:GetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioEncoderConfiguration soap_tmp___mediaws__GetAudioEncoderConfiguration;
	_mediaws__GetAudioEncoderConfigurationResponse mediaws__GetAudioEncoderConfigurationResponse;
	mediaws__GetAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__GetAudioEncoderConfiguration(soap, &soap_tmp___mediaws__GetAudioEncoderConfiguration);
	if (!soap_get___mediaws__GetAudioEncoderConfiguration(soap, &soap_tmp___mediaws__GetAudioEncoderConfiguration, "-mediaws:GetAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfiguration(soap_tmp___mediaws__GetAudioEncoderConfiguration.mediaws__GetAudioEncoderConfiguration, mediaws__GetAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioEncoderConfigurationResponse.soap_put(soap, "mediaws:GetAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioEncoderConfigurationResponse.soap_put(soap, "mediaws:GetAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetVideoAnalyticsConfiguration soap_tmp___mediaws__GetVideoAnalyticsConfiguration;
	_mediaws__GetVideoAnalyticsConfigurationResponse mediaws__GetVideoAnalyticsConfigurationResponse;
	mediaws__GetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___mediaws__GetVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__GetVideoAnalyticsConfiguration);
	if (!soap_get___mediaws__GetVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__GetVideoAnalyticsConfiguration, "-mediaws:GetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoAnalyticsConfiguration(soap_tmp___mediaws__GetVideoAnalyticsConfiguration.mediaws__GetVideoAnalyticsConfiguration, mediaws__GetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "mediaws:GetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "mediaws:GetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetMetadataConfiguration soap_tmp___mediaws__GetMetadataConfiguration;
	_mediaws__GetMetadataConfigurationResponse mediaws__GetMetadataConfigurationResponse;
	mediaws__GetMetadataConfigurationResponse.soap_default(soap);
	soap_default___mediaws__GetMetadataConfiguration(soap, &soap_tmp___mediaws__GetMetadataConfiguration);
	if (!soap_get___mediaws__GetMetadataConfiguration(soap, &soap_tmp___mediaws__GetMetadataConfiguration, "-mediaws:GetMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfiguration(soap_tmp___mediaws__GetMetadataConfiguration.mediaws__GetMetadataConfiguration, mediaws__GetMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetMetadataConfigurationResponse.soap_put(soap, "mediaws:GetMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetMetadataConfigurationResponse.soap_put(soap, "mediaws:GetMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioOutputConfiguration soap_tmp___mediaws__GetAudioOutputConfiguration;
	_mediaws__GetAudioOutputConfigurationResponse mediaws__GetAudioOutputConfigurationResponse;
	mediaws__GetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___mediaws__GetAudioOutputConfiguration(soap, &soap_tmp___mediaws__GetAudioOutputConfiguration);
	if (!soap_get___mediaws__GetAudioOutputConfiguration(soap, &soap_tmp___mediaws__GetAudioOutputConfiguration, "-mediaws:GetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfiguration(soap_tmp___mediaws__GetAudioOutputConfiguration.mediaws__GetAudioOutputConfiguration, mediaws__GetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioOutputConfigurationResponse.soap_put(soap, "mediaws:GetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioOutputConfigurationResponse.soap_put(soap, "mediaws:GetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioDecoderConfiguration soap_tmp___mediaws__GetAudioDecoderConfiguration;
	_mediaws__GetAudioDecoderConfigurationResponse mediaws__GetAudioDecoderConfigurationResponse;
	mediaws__GetAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__GetAudioDecoderConfiguration(soap, &soap_tmp___mediaws__GetAudioDecoderConfiguration);
	if (!soap_get___mediaws__GetAudioDecoderConfiguration(soap, &soap_tmp___mediaws__GetAudioDecoderConfiguration, "-mediaws:GetAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfiguration(soap_tmp___mediaws__GetAudioDecoderConfiguration.mediaws__GetAudioDecoderConfiguration, mediaws__GetAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioDecoderConfigurationResponse.soap_put(soap, "mediaws:GetAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioDecoderConfigurationResponse.soap_put(soap, "mediaws:GetAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetCompatibleVideoEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetCompatibleVideoEncoderConfigurations soap_tmp___mediaws__GetCompatibleVideoEncoderConfigurations;
	_mediaws__GetCompatibleVideoEncoderConfigurationsResponse mediaws__GetCompatibleVideoEncoderConfigurationsResponse;
	mediaws__GetCompatibleVideoEncoderConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoEncoderConfigurations);
	if (!soap_get___mediaws__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoEncoderConfigurations, "-mediaws:GetCompatibleVideoEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleVideoEncoderConfigurations(soap_tmp___mediaws__GetCompatibleVideoEncoderConfigurations.mediaws__GetCompatibleVideoEncoderConfigurations, mediaws__GetCompatibleVideoEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetCompatibleVideoEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetCompatibleVideoEncoderConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleVideoEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetCompatibleVideoEncoderConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleVideoEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetCompatibleVideoSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetCompatibleVideoSourceConfigurations soap_tmp___mediaws__GetCompatibleVideoSourceConfigurations;
	_mediaws__GetCompatibleVideoSourceConfigurationsResponse mediaws__GetCompatibleVideoSourceConfigurationsResponse;
	mediaws__GetCompatibleVideoSourceConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoSourceConfigurations);
	if (!soap_get___mediaws__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoSourceConfigurations, "-mediaws:GetCompatibleVideoSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleVideoSourceConfigurations(soap_tmp___mediaws__GetCompatibleVideoSourceConfigurations.mediaws__GetCompatibleVideoSourceConfigurations, mediaws__GetCompatibleVideoSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetCompatibleVideoSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetCompatibleVideoSourceConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleVideoSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetCompatibleVideoSourceConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleVideoSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetCompatibleAudioEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetCompatibleAudioEncoderConfigurations soap_tmp___mediaws__GetCompatibleAudioEncoderConfigurations;
	_mediaws__GetCompatibleAudioEncoderConfigurationsResponse mediaws__GetCompatibleAudioEncoderConfigurationsResponse;
	mediaws__GetCompatibleAudioEncoderConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioEncoderConfigurations);
	if (!soap_get___mediaws__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioEncoderConfigurations, "-mediaws:GetCompatibleAudioEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioEncoderConfigurations(soap_tmp___mediaws__GetCompatibleAudioEncoderConfigurations.mediaws__GetCompatibleAudioEncoderConfigurations, mediaws__GetCompatibleAudioEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetCompatibleAudioEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetCompatibleAudioEncoderConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleAudioEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetCompatibleAudioEncoderConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleAudioEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetCompatibleAudioSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetCompatibleAudioSourceConfigurations soap_tmp___mediaws__GetCompatibleAudioSourceConfigurations;
	_mediaws__GetCompatibleAudioSourceConfigurationsResponse mediaws__GetCompatibleAudioSourceConfigurationsResponse;
	mediaws__GetCompatibleAudioSourceConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioSourceConfigurations);
	if (!soap_get___mediaws__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioSourceConfigurations, "-mediaws:GetCompatibleAudioSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioSourceConfigurations(soap_tmp___mediaws__GetCompatibleAudioSourceConfigurations.mediaws__GetCompatibleAudioSourceConfigurations, mediaws__GetCompatibleAudioSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetCompatibleAudioSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetCompatibleAudioSourceConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleAudioSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetCompatibleAudioSourceConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleAudioSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetCompatibleVideoAnalyticsConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetCompatibleVideoAnalyticsConfigurations soap_tmp___mediaws__GetCompatibleVideoAnalyticsConfigurations;
	_mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse;
	mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoAnalyticsConfigurations);
	if (!soap_get___mediaws__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoAnalyticsConfigurations, "-mediaws:GetCompatibleVideoAnalyticsConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleVideoAnalyticsConfigurations(soap_tmp___mediaws__GetCompatibleVideoAnalyticsConfigurations.mediaws__GetCompatibleVideoAnalyticsConfigurations, mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleVideoAnalyticsConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleVideoAnalyticsConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetCompatibleMetadataConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetCompatibleMetadataConfigurations soap_tmp___mediaws__GetCompatibleMetadataConfigurations;
	_mediaws__GetCompatibleMetadataConfigurationsResponse mediaws__GetCompatibleMetadataConfigurationsResponse;
	mediaws__GetCompatibleMetadataConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetCompatibleMetadataConfigurations(soap, &soap_tmp___mediaws__GetCompatibleMetadataConfigurations);
	if (!soap_get___mediaws__GetCompatibleMetadataConfigurations(soap, &soap_tmp___mediaws__GetCompatibleMetadataConfigurations, "-mediaws:GetCompatibleMetadataConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleMetadataConfigurations(soap_tmp___mediaws__GetCompatibleMetadataConfigurations.mediaws__GetCompatibleMetadataConfigurations, mediaws__GetCompatibleMetadataConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetCompatibleMetadataConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetCompatibleMetadataConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleMetadataConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetCompatibleMetadataConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleMetadataConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetCompatibleAudioOutputConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetCompatibleAudioOutputConfigurations soap_tmp___mediaws__GetCompatibleAudioOutputConfigurations;
	_mediaws__GetCompatibleAudioOutputConfigurationsResponse mediaws__GetCompatibleAudioOutputConfigurationsResponse;
	mediaws__GetCompatibleAudioOutputConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioOutputConfigurations);
	if (!soap_get___mediaws__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioOutputConfigurations, "-mediaws:GetCompatibleAudioOutputConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioOutputConfigurations(soap_tmp___mediaws__GetCompatibleAudioOutputConfigurations.mediaws__GetCompatibleAudioOutputConfigurations, mediaws__GetCompatibleAudioOutputConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetCompatibleAudioOutputConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetCompatibleAudioOutputConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleAudioOutputConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetCompatibleAudioOutputConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleAudioOutputConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetCompatibleAudioDecoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetCompatibleAudioDecoderConfigurations soap_tmp___mediaws__GetCompatibleAudioDecoderConfigurations;
	_mediaws__GetCompatibleAudioDecoderConfigurationsResponse mediaws__GetCompatibleAudioDecoderConfigurationsResponse;
	mediaws__GetCompatibleAudioDecoderConfigurationsResponse.soap_default(soap);
	soap_default___mediaws__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioDecoderConfigurations);
	if (!soap_get___mediaws__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioDecoderConfigurations, "-mediaws:GetCompatibleAudioDecoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioDecoderConfigurations(soap_tmp___mediaws__GetCompatibleAudioDecoderConfigurations.mediaws__GetCompatibleAudioDecoderConfigurations, mediaws__GetCompatibleAudioDecoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetCompatibleAudioDecoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetCompatibleAudioDecoderConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleAudioDecoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetCompatibleAudioDecoderConfigurationsResponse.soap_put(soap, "mediaws:GetCompatibleAudioDecoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__SetVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__SetVideoSourceConfiguration soap_tmp___mediaws__SetVideoSourceConfiguration;
	_mediaws__SetVideoSourceConfigurationResponse mediaws__SetVideoSourceConfigurationResponse;
	mediaws__SetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___mediaws__SetVideoSourceConfiguration(soap, &soap_tmp___mediaws__SetVideoSourceConfiguration);
	if (!soap_get___mediaws__SetVideoSourceConfiguration(soap, &soap_tmp___mediaws__SetVideoSourceConfiguration, "-mediaws:SetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceConfiguration(soap_tmp___mediaws__SetVideoSourceConfiguration.mediaws__SetVideoSourceConfiguration, mediaws__SetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__SetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__SetVideoSourceConfigurationResponse.soap_put(soap, "mediaws:SetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__SetVideoSourceConfigurationResponse.soap_put(soap, "mediaws:SetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__SetVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__SetVideoEncoderConfiguration soap_tmp___mediaws__SetVideoEncoderConfiguration;
	_mediaws__SetVideoEncoderConfigurationResponse mediaws__SetVideoEncoderConfigurationResponse;
	mediaws__SetVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__SetVideoEncoderConfiguration(soap, &soap_tmp___mediaws__SetVideoEncoderConfiguration);
	if (!soap_get___mediaws__SetVideoEncoderConfiguration(soap, &soap_tmp___mediaws__SetVideoEncoderConfiguration, "-mediaws:SetVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoEncoderConfiguration(soap_tmp___mediaws__SetVideoEncoderConfiguration.mediaws__SetVideoEncoderConfiguration, mediaws__SetVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__SetVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__SetVideoEncoderConfigurationResponse.soap_put(soap, "mediaws:SetVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__SetVideoEncoderConfigurationResponse.soap_put(soap, "mediaws:SetVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__SetAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__SetAudioSourceConfiguration soap_tmp___mediaws__SetAudioSourceConfiguration;
	_mediaws__SetAudioSourceConfigurationResponse mediaws__SetAudioSourceConfigurationResponse;
	mediaws__SetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___mediaws__SetAudioSourceConfiguration(soap, &soap_tmp___mediaws__SetAudioSourceConfiguration);
	if (!soap_get___mediaws__SetAudioSourceConfiguration(soap, &soap_tmp___mediaws__SetAudioSourceConfiguration, "-mediaws:SetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioSourceConfiguration(soap_tmp___mediaws__SetAudioSourceConfiguration.mediaws__SetAudioSourceConfiguration, mediaws__SetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__SetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__SetAudioSourceConfigurationResponse.soap_put(soap, "mediaws:SetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__SetAudioSourceConfigurationResponse.soap_put(soap, "mediaws:SetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__SetAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__SetAudioEncoderConfiguration soap_tmp___mediaws__SetAudioEncoderConfiguration;
	_mediaws__SetAudioEncoderConfigurationResponse mediaws__SetAudioEncoderConfigurationResponse;
	mediaws__SetAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__SetAudioEncoderConfiguration(soap, &soap_tmp___mediaws__SetAudioEncoderConfiguration);
	if (!soap_get___mediaws__SetAudioEncoderConfiguration(soap, &soap_tmp___mediaws__SetAudioEncoderConfiguration, "-mediaws:SetAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioEncoderConfiguration(soap_tmp___mediaws__SetAudioEncoderConfiguration.mediaws__SetAudioEncoderConfiguration, mediaws__SetAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__SetAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__SetAudioEncoderConfigurationResponse.soap_put(soap, "mediaws:SetAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__SetAudioEncoderConfigurationResponse.soap_put(soap, "mediaws:SetAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__SetVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__SetVideoAnalyticsConfiguration soap_tmp___mediaws__SetVideoAnalyticsConfiguration;
	_mediaws__SetVideoAnalyticsConfigurationResponse mediaws__SetVideoAnalyticsConfigurationResponse;
	mediaws__SetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___mediaws__SetVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__SetVideoAnalyticsConfiguration);
	if (!soap_get___mediaws__SetVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__SetVideoAnalyticsConfiguration, "-mediaws:SetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoAnalyticsConfiguration(soap_tmp___mediaws__SetVideoAnalyticsConfiguration.mediaws__SetVideoAnalyticsConfiguration, mediaws__SetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__SetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "mediaws:SetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "mediaws:SetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__SetMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__SetMetadataConfiguration soap_tmp___mediaws__SetMetadataConfiguration;
	_mediaws__SetMetadataConfigurationResponse mediaws__SetMetadataConfigurationResponse;
	mediaws__SetMetadataConfigurationResponse.soap_default(soap);
	soap_default___mediaws__SetMetadataConfiguration(soap, &soap_tmp___mediaws__SetMetadataConfiguration);
	if (!soap_get___mediaws__SetMetadataConfiguration(soap, &soap_tmp___mediaws__SetMetadataConfiguration, "-mediaws:SetMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetMetadataConfiguration(soap_tmp___mediaws__SetMetadataConfiguration.mediaws__SetMetadataConfiguration, mediaws__SetMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__SetMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__SetMetadataConfigurationResponse.soap_put(soap, "mediaws:SetMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__SetMetadataConfigurationResponse.soap_put(soap, "mediaws:SetMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__SetAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__SetAudioOutputConfiguration soap_tmp___mediaws__SetAudioOutputConfiguration;
	_mediaws__SetAudioOutputConfigurationResponse mediaws__SetAudioOutputConfigurationResponse;
	mediaws__SetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___mediaws__SetAudioOutputConfiguration(soap, &soap_tmp___mediaws__SetAudioOutputConfiguration);
	if (!soap_get___mediaws__SetAudioOutputConfiguration(soap, &soap_tmp___mediaws__SetAudioOutputConfiguration, "-mediaws:SetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioOutputConfiguration(soap_tmp___mediaws__SetAudioOutputConfiguration.mediaws__SetAudioOutputConfiguration, mediaws__SetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__SetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__SetAudioOutputConfigurationResponse.soap_put(soap, "mediaws:SetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__SetAudioOutputConfigurationResponse.soap_put(soap, "mediaws:SetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__SetAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__SetAudioDecoderConfiguration soap_tmp___mediaws__SetAudioDecoderConfiguration;
	_mediaws__SetAudioDecoderConfigurationResponse mediaws__SetAudioDecoderConfigurationResponse;
	mediaws__SetAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___mediaws__SetAudioDecoderConfiguration(soap, &soap_tmp___mediaws__SetAudioDecoderConfiguration);
	if (!soap_get___mediaws__SetAudioDecoderConfiguration(soap, &soap_tmp___mediaws__SetAudioDecoderConfiguration, "-mediaws:SetAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioDecoderConfiguration(soap_tmp___mediaws__SetAudioDecoderConfiguration.mediaws__SetAudioDecoderConfiguration, mediaws__SetAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__SetAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__SetAudioDecoderConfigurationResponse.soap_put(soap, "mediaws:SetAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__SetAudioDecoderConfigurationResponse.soap_put(soap, "mediaws:SetAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetVideoSourceConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetVideoSourceConfigurationOptions soap_tmp___mediaws__GetVideoSourceConfigurationOptions;
	_mediaws__GetVideoSourceConfigurationOptionsResponse mediaws__GetVideoSourceConfigurationOptionsResponse;
	mediaws__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___mediaws__GetVideoSourceConfigurationOptions(soap, &soap_tmp___mediaws__GetVideoSourceConfigurationOptions);
	if (!soap_get___mediaws__GetVideoSourceConfigurationOptions(soap, &soap_tmp___mediaws__GetVideoSourceConfigurationOptions, "-mediaws:GetVideoSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurationOptions(soap_tmp___mediaws__GetVideoSourceConfigurationOptions.mediaws__GetVideoSourceConfigurationOptions, mediaws__GetVideoSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetVideoSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "mediaws:GetVideoSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "mediaws:GetVideoSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetVideoEncoderConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetVideoEncoderConfigurationOptions soap_tmp___mediaws__GetVideoEncoderConfigurationOptions;
	_mediaws__GetVideoEncoderConfigurationOptionsResponse mediaws__GetVideoEncoderConfigurationOptionsResponse;
	mediaws__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___mediaws__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___mediaws__GetVideoEncoderConfigurationOptions);
	if (!soap_get___mediaws__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___mediaws__GetVideoEncoderConfigurationOptions, "-mediaws:GetVideoEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfigurationOptions(soap_tmp___mediaws__GetVideoEncoderConfigurationOptions.mediaws__GetVideoEncoderConfigurationOptions, mediaws__GetVideoEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetVideoEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "mediaws:GetVideoEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "mediaws:GetVideoEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioSourceConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioSourceConfigurationOptions soap_tmp___mediaws__GetAudioSourceConfigurationOptions;
	_mediaws__GetAudioSourceConfigurationOptionsResponse mediaws__GetAudioSourceConfigurationOptionsResponse;
	mediaws__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___mediaws__GetAudioSourceConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioSourceConfigurationOptions);
	if (!soap_get___mediaws__GetAudioSourceConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioSourceConfigurationOptions, "-mediaws:GetAudioSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurationOptions(soap_tmp___mediaws__GetAudioSourceConfigurationOptions.mediaws__GetAudioSourceConfigurationOptions, mediaws__GetAudioSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "mediaws:GetAudioSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "mediaws:GetAudioSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioEncoderConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioEncoderConfigurationOptions soap_tmp___mediaws__GetAudioEncoderConfigurationOptions;
	_mediaws__GetAudioEncoderConfigurationOptionsResponse mediaws__GetAudioEncoderConfigurationOptionsResponse;
	mediaws__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___mediaws__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioEncoderConfigurationOptions);
	if (!soap_get___mediaws__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioEncoderConfigurationOptions, "-mediaws:GetAudioEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfigurationOptions(soap_tmp___mediaws__GetAudioEncoderConfigurationOptions.mediaws__GetAudioEncoderConfigurationOptions, mediaws__GetAudioEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "mediaws:GetAudioEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "mediaws:GetAudioEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetMetadataConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetMetadataConfigurationOptions soap_tmp___mediaws__GetMetadataConfigurationOptions;
	_mediaws__GetMetadataConfigurationOptionsResponse mediaws__GetMetadataConfigurationOptionsResponse;
	mediaws__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	soap_default___mediaws__GetMetadataConfigurationOptions(soap, &soap_tmp___mediaws__GetMetadataConfigurationOptions);
	if (!soap_get___mediaws__GetMetadataConfigurationOptions(soap, &soap_tmp___mediaws__GetMetadataConfigurationOptions, "-mediaws:GetMetadataConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfigurationOptions(soap_tmp___mediaws__GetMetadataConfigurationOptions.mediaws__GetMetadataConfigurationOptions, mediaws__GetMetadataConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetMetadataConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetMetadataConfigurationOptionsResponse.soap_put(soap, "mediaws:GetMetadataConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetMetadataConfigurationOptionsResponse.soap_put(soap, "mediaws:GetMetadataConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioOutputConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioOutputConfigurationOptions soap_tmp___mediaws__GetAudioOutputConfigurationOptions;
	_mediaws__GetAudioOutputConfigurationOptionsResponse mediaws__GetAudioOutputConfigurationOptionsResponse;
	mediaws__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___mediaws__GetAudioOutputConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioOutputConfigurationOptions);
	if (!soap_get___mediaws__GetAudioOutputConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioOutputConfigurationOptions, "-mediaws:GetAudioOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurationOptions(soap_tmp___mediaws__GetAudioOutputConfigurationOptions.mediaws__GetAudioOutputConfigurationOptions, mediaws__GetAudioOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "mediaws:GetAudioOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "mediaws:GetAudioOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetAudioDecoderConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetAudioDecoderConfigurationOptions soap_tmp___mediaws__GetAudioDecoderConfigurationOptions;
	_mediaws__GetAudioDecoderConfigurationOptionsResponse mediaws__GetAudioDecoderConfigurationOptionsResponse;
	mediaws__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___mediaws__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioDecoderConfigurationOptions);
	if (!soap_get___mediaws__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioDecoderConfigurationOptions, "-mediaws:GetAudioDecoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfigurationOptions(soap_tmp___mediaws__GetAudioDecoderConfigurationOptions.mediaws__GetAudioDecoderConfigurationOptions, mediaws__GetAudioDecoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetAudioDecoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "mediaws:GetAudioDecoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "mediaws:GetAudioDecoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetGuaranteedNumberOfVideoEncoderInstances(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetGuaranteedNumberOfVideoEncoderInstances soap_tmp___mediaws__GetGuaranteedNumberOfVideoEncoderInstances;
	_mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse;
	mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_default(soap);
	soap_default___mediaws__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___mediaws__GetGuaranteedNumberOfVideoEncoderInstances);
	if (!soap_get___mediaws__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___mediaws__GetGuaranteedNumberOfVideoEncoderInstances, "-mediaws:GetGuaranteedNumberOfVideoEncoderInstances", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetGuaranteedNumberOfVideoEncoderInstances(soap_tmp___mediaws__GetGuaranteedNumberOfVideoEncoderInstances.mediaws__GetGuaranteedNumberOfVideoEncoderInstances, mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_put(soap, "mediaws:GetGuaranteedNumberOfVideoEncoderInstancesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_put(soap, "mediaws:GetGuaranteedNumberOfVideoEncoderInstancesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetStreamUri(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetStreamUri soap_tmp___mediaws__GetStreamUri;
	_mediaws__GetStreamUriResponse mediaws__GetStreamUriResponse;
	mediaws__GetStreamUriResponse.soap_default(soap);
	soap_default___mediaws__GetStreamUri(soap, &soap_tmp___mediaws__GetStreamUri);
	if (!soap_get___mediaws__GetStreamUri(soap, &soap_tmp___mediaws__GetStreamUri, "-mediaws:GetStreamUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetStreamUri(soap_tmp___mediaws__GetStreamUri.mediaws__GetStreamUri, mediaws__GetStreamUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetStreamUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetStreamUriResponse.soap_put(soap, "mediaws:GetStreamUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetStreamUriResponse.soap_put(soap, "mediaws:GetStreamUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__StartMulticastStreaming(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__StartMulticastStreaming soap_tmp___mediaws__StartMulticastStreaming;
	_mediaws__StartMulticastStreamingResponse mediaws__StartMulticastStreamingResponse;
	mediaws__StartMulticastStreamingResponse.soap_default(soap);
	soap_default___mediaws__StartMulticastStreaming(soap, &soap_tmp___mediaws__StartMulticastStreaming);
	if (!soap_get___mediaws__StartMulticastStreaming(soap, &soap_tmp___mediaws__StartMulticastStreaming, "-mediaws:StartMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->StartMulticastStreaming(soap_tmp___mediaws__StartMulticastStreaming.mediaws__StartMulticastStreaming, mediaws__StartMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__StartMulticastStreamingResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__StartMulticastStreamingResponse.soap_put(soap, "mediaws:StartMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__StartMulticastStreamingResponse.soap_put(soap, "mediaws:StartMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__StopMulticastStreaming(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__StopMulticastStreaming soap_tmp___mediaws__StopMulticastStreaming;
	_mediaws__StopMulticastStreamingResponse mediaws__StopMulticastStreamingResponse;
	mediaws__StopMulticastStreamingResponse.soap_default(soap);
	soap_default___mediaws__StopMulticastStreaming(soap, &soap_tmp___mediaws__StopMulticastStreaming);
	if (!soap_get___mediaws__StopMulticastStreaming(soap, &soap_tmp___mediaws__StopMulticastStreaming, "-mediaws:StopMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->StopMulticastStreaming(soap_tmp___mediaws__StopMulticastStreaming.mediaws__StopMulticastStreaming, mediaws__StopMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__StopMulticastStreamingResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__StopMulticastStreamingResponse.soap_put(soap, "mediaws:StopMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__StopMulticastStreamingResponse.soap_put(soap, "mediaws:StopMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__SetSynchronizationPoint(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__SetSynchronizationPoint soap_tmp___mediaws__SetSynchronizationPoint;
	_mediaws__SetSynchronizationPointResponse mediaws__SetSynchronizationPointResponse;
	mediaws__SetSynchronizationPointResponse.soap_default(soap);
	soap_default___mediaws__SetSynchronizationPoint(soap, &soap_tmp___mediaws__SetSynchronizationPoint);
	if (!soap_get___mediaws__SetSynchronizationPoint(soap, &soap_tmp___mediaws__SetSynchronizationPoint, "-mediaws:SetSynchronizationPoint", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetSynchronizationPoint(soap_tmp___mediaws__SetSynchronizationPoint.mediaws__SetSynchronizationPoint, mediaws__SetSynchronizationPointResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__SetSynchronizationPointResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__SetSynchronizationPointResponse.soap_put(soap, "mediaws:SetSynchronizationPointResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__SetSynchronizationPointResponse.soap_put(soap, "mediaws:SetSynchronizationPointResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetSnapshotUri(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetSnapshotUri soap_tmp___mediaws__GetSnapshotUri;
	_mediaws__GetSnapshotUriResponse mediaws__GetSnapshotUriResponse;
	mediaws__GetSnapshotUriResponse.soap_default(soap);
	soap_default___mediaws__GetSnapshotUri(soap, &soap_tmp___mediaws__GetSnapshotUri);
	if (!soap_get___mediaws__GetSnapshotUri(soap, &soap_tmp___mediaws__GetSnapshotUri, "-mediaws:GetSnapshotUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetSnapshotUri(soap_tmp___mediaws__GetSnapshotUri.mediaws__GetSnapshotUri, mediaws__GetSnapshotUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetSnapshotUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetSnapshotUriResponse.soap_put(soap, "mediaws:GetSnapshotUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetSnapshotUriResponse.soap_put(soap, "mediaws:GetSnapshotUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetVideoSourceModes(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetVideoSourceModes soap_tmp___mediaws__GetVideoSourceModes;
	_mediaws__GetVideoSourceModesResponse mediaws__GetVideoSourceModesResponse;
	mediaws__GetVideoSourceModesResponse.soap_default(soap);
	soap_default___mediaws__GetVideoSourceModes(soap, &soap_tmp___mediaws__GetVideoSourceModes);
	if (!soap_get___mediaws__GetVideoSourceModes(soap, &soap_tmp___mediaws__GetVideoSourceModes, "-mediaws:GetVideoSourceModes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceModes(soap_tmp___mediaws__GetVideoSourceModes.mediaws__GetVideoSourceModes, mediaws__GetVideoSourceModesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetVideoSourceModesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetVideoSourceModesResponse.soap_put(soap, "mediaws:GetVideoSourceModesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetVideoSourceModesResponse.soap_put(soap, "mediaws:GetVideoSourceModesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__SetVideoSourceMode(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__SetVideoSourceMode soap_tmp___mediaws__SetVideoSourceMode;
	_mediaws__SetVideoSourceModeResponse mediaws__SetVideoSourceModeResponse;
	mediaws__SetVideoSourceModeResponse.soap_default(soap);
	soap_default___mediaws__SetVideoSourceMode(soap, &soap_tmp___mediaws__SetVideoSourceMode);
	if (!soap_get___mediaws__SetVideoSourceMode(soap, &soap_tmp___mediaws__SetVideoSourceMode, "-mediaws:SetVideoSourceMode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceMode(soap_tmp___mediaws__SetVideoSourceMode.mediaws__SetVideoSourceMode, mediaws__SetVideoSourceModeResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__SetVideoSourceModeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__SetVideoSourceModeResponse.soap_put(soap, "mediaws:SetVideoSourceModeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__SetVideoSourceModeResponse.soap_put(soap, "mediaws:SetVideoSourceModeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetOSDs(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetOSDs soap_tmp___mediaws__GetOSDs;
	_mediaws__GetOSDsResponse mediaws__GetOSDsResponse;
	mediaws__GetOSDsResponse.soap_default(soap);
	soap_default___mediaws__GetOSDs(soap, &soap_tmp___mediaws__GetOSDs);
	if (!soap_get___mediaws__GetOSDs(soap, &soap_tmp___mediaws__GetOSDs, "-mediaws:GetOSDs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSDs(soap_tmp___mediaws__GetOSDs.mediaws__GetOSDs, mediaws__GetOSDsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetOSDsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetOSDsResponse.soap_put(soap, "mediaws:GetOSDsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetOSDsResponse.soap_put(soap, "mediaws:GetOSDsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetOSD(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetOSD soap_tmp___mediaws__GetOSD;
	_mediaws__GetOSDResponse mediaws__GetOSDResponse;
	mediaws__GetOSDResponse.soap_default(soap);
	soap_default___mediaws__GetOSD(soap, &soap_tmp___mediaws__GetOSD);
	if (!soap_get___mediaws__GetOSD(soap, &soap_tmp___mediaws__GetOSD, "-mediaws:GetOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSD(soap_tmp___mediaws__GetOSD.mediaws__GetOSD, mediaws__GetOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetOSDResponse.soap_put(soap, "mediaws:GetOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetOSDResponse.soap_put(soap, "mediaws:GetOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__GetOSDOptions(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__GetOSDOptions soap_tmp___mediaws__GetOSDOptions;
	_mediaws__GetOSDOptionsResponse mediaws__GetOSDOptionsResponse;
	mediaws__GetOSDOptionsResponse.soap_default(soap);
	soap_default___mediaws__GetOSDOptions(soap, &soap_tmp___mediaws__GetOSDOptions);
	if (!soap_get___mediaws__GetOSDOptions(soap, &soap_tmp___mediaws__GetOSDOptions, "-mediaws:GetOSDOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSDOptions(soap_tmp___mediaws__GetOSDOptions.mediaws__GetOSDOptions, mediaws__GetOSDOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__GetOSDOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__GetOSDOptionsResponse.soap_put(soap, "mediaws:GetOSDOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__GetOSDOptionsResponse.soap_put(soap, "mediaws:GetOSDOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__SetOSD(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__SetOSD soap_tmp___mediaws__SetOSD;
	_mediaws__SetOSDResponse mediaws__SetOSDResponse;
	mediaws__SetOSDResponse.soap_default(soap);
	soap_default___mediaws__SetOSD(soap, &soap_tmp___mediaws__SetOSD);
	if (!soap_get___mediaws__SetOSD(soap, &soap_tmp___mediaws__SetOSD, "-mediaws:SetOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetOSD(soap_tmp___mediaws__SetOSD.mediaws__SetOSD, mediaws__SetOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__SetOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__SetOSDResponse.soap_put(soap, "mediaws:SetOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__SetOSDResponse.soap_put(soap, "mediaws:SetOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__CreateOSD(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__CreateOSD soap_tmp___mediaws__CreateOSD;
	_mediaws__CreateOSDResponse mediaws__CreateOSDResponse;
	mediaws__CreateOSDResponse.soap_default(soap);
	soap_default___mediaws__CreateOSD(soap, &soap_tmp___mediaws__CreateOSD);
	if (!soap_get___mediaws__CreateOSD(soap, &soap_tmp___mediaws__CreateOSD, "-mediaws:CreateOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateOSD(soap_tmp___mediaws__CreateOSD.mediaws__CreateOSD, mediaws__CreateOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__CreateOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__CreateOSDResponse.soap_put(soap, "mediaws:CreateOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__CreateOSDResponse.soap_put(soap, "mediaws:CreateOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___mediaws__DeleteOSD(struct soap *soap, MediaBindingService *service)
{	struct __mediaws__DeleteOSD soap_tmp___mediaws__DeleteOSD;
	_mediaws__DeleteOSDResponse mediaws__DeleteOSDResponse;
	mediaws__DeleteOSDResponse.soap_default(soap);
	soap_default___mediaws__DeleteOSD(soap, &soap_tmp___mediaws__DeleteOSD);
	if (!soap_get___mediaws__DeleteOSD(soap, &soap_tmp___mediaws__DeleteOSD, "-mediaws:DeleteOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteOSD(soap_tmp___mediaws__DeleteOSD.mediaws__DeleteOSD, mediaws__DeleteOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	mediaws__DeleteOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || mediaws__DeleteOSDResponse.soap_put(soap, "mediaws:DeleteOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || mediaws__DeleteOSDResponse.soap_put(soap, "mediaws:DeleteOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
