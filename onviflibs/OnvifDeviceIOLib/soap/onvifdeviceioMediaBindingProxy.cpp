/* onvifdeviceioMediaBindingProxy.cpp
   Generated by gSOAP 2.8.22 from rcx.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "onvifdeviceioMediaBindingProxy.h"

MediaBindingProxy::MediaBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

MediaBindingProxy::MediaBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	MediaBindingProxy_init(_soap->imode, _soap->omode);
}

MediaBindingProxy::MediaBindingProxy(const char *url)
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

MediaBindingProxy::MediaBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingProxy_init(iomode, iomode);
}

MediaBindingProxy::MediaBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

MediaBindingProxy::MediaBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingProxy_init(imode, omode);
}

MediaBindingProxy::~MediaBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void MediaBindingProxy::MediaBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"deviceio", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"devicews", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"mediaws", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void MediaBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void MediaBindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	MediaBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void MediaBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void MediaBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
}

const SOAP_ENV__Header *MediaBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *MediaBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *MediaBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *MediaBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int MediaBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int MediaBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void MediaBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void MediaBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *MediaBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int MediaBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _mediaws__GetServiceCapabilities *mediaws__GetServiceCapabilities, _mediaws__GetServiceCapabilitiesResponse &mediaws__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetServiceCapabilities soap_tmp___mediaws__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetServiceCapabilities.mediaws__GetServiceCapabilities = mediaws__GetServiceCapabilities;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetServiceCapabilities(soap, &soap_tmp___mediaws__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetServiceCapabilities(soap, &soap_tmp___mediaws__GetServiceCapabilities, "-mediaws:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetServiceCapabilities(soap, &soap_tmp___mediaws__GetServiceCapabilities, "-mediaws:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	mediaws__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetServiceCapabilitiesResponse.soap_get(soap, "mediaws:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSources(const char *endpoint, const char *soap_action, _mediaws__GetVideoSources *mediaws__GetVideoSources, _mediaws__GetVideoSourcesResponse &mediaws__GetVideoSourcesResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetVideoSources soap_tmp___mediaws__GetVideoSources;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetVideoSources/";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetVideoSources.mediaws__GetVideoSources = mediaws__GetVideoSources;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetVideoSources(soap, &soap_tmp___mediaws__GetVideoSources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetVideoSources(soap, &soap_tmp___mediaws__GetVideoSources, "-mediaws:GetVideoSources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetVideoSources(soap, &soap_tmp___mediaws__GetVideoSources, "-mediaws:GetVideoSources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetVideoSourcesResponse)
		return soap_closesock(soap);
	mediaws__GetVideoSourcesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetVideoSourcesResponse.soap_get(soap, "mediaws:GetVideoSourcesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSources(const char *endpoint, const char *soap_action, _mediaws__GetAudioSources *mediaws__GetAudioSources, _mediaws__GetAudioSourcesResponse &mediaws__GetAudioSourcesResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioSources soap_tmp___mediaws__GetAudioSources;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSources";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioSources.mediaws__GetAudioSources = mediaws__GetAudioSources;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioSources(soap, &soap_tmp___mediaws__GetAudioSources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioSources(soap, &soap_tmp___mediaws__GetAudioSources, "-mediaws:GetAudioSources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioSources(soap, &soap_tmp___mediaws__GetAudioSources, "-mediaws:GetAudioSources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioSourcesResponse)
		return soap_closesock(soap);
	mediaws__GetAudioSourcesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioSourcesResponse.soap_get(soap, "mediaws:GetAudioSourcesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputs(const char *endpoint, const char *soap_action, _mediaws__GetAudioOutputs *mediaws__GetAudioOutputs, _mediaws__GetAudioOutputsResponse &mediaws__GetAudioOutputsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioOutputs soap_tmp___mediaws__GetAudioOutputs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioOutputs.mediaws__GetAudioOutputs = mediaws__GetAudioOutputs;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioOutputs(soap, &soap_tmp___mediaws__GetAudioOutputs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioOutputs(soap, &soap_tmp___mediaws__GetAudioOutputs, "-mediaws:GetAudioOutputs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioOutputs(soap, &soap_tmp___mediaws__GetAudioOutputs, "-mediaws:GetAudioOutputs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioOutputsResponse)
		return soap_closesock(soap);
	mediaws__GetAudioOutputsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioOutputsResponse.soap_get(soap, "mediaws:GetAudioOutputsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::CreateProfile(const char *endpoint, const char *soap_action, _mediaws__CreateProfile *mediaws__CreateProfile, _mediaws__CreateProfileResponse &mediaws__CreateProfileResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__CreateProfile soap_tmp___mediaws__CreateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/CreateProfile";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__CreateProfile.mediaws__CreateProfile = mediaws__CreateProfile;
	soap_serializeheader(soap);
	soap_serialize___mediaws__CreateProfile(soap, &soap_tmp___mediaws__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__CreateProfile(soap, &soap_tmp___mediaws__CreateProfile, "-mediaws:CreateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__CreateProfile(soap, &soap_tmp___mediaws__CreateProfile, "-mediaws:CreateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__CreateProfileResponse)
		return soap_closesock(soap);
	mediaws__CreateProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__CreateProfileResponse.soap_get(soap, "mediaws:CreateProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetProfile(const char *endpoint, const char *soap_action, _mediaws__GetProfile *mediaws__GetProfile, _mediaws__GetProfileResponse &mediaws__GetProfileResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetProfile soap_tmp___mediaws__GetProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetProfile/";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetProfile.mediaws__GetProfile = mediaws__GetProfile;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetProfile(soap, &soap_tmp___mediaws__GetProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetProfile(soap, &soap_tmp___mediaws__GetProfile, "-mediaws:GetProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetProfile(soap, &soap_tmp___mediaws__GetProfile, "-mediaws:GetProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetProfileResponse)
		return soap_closesock(soap);
	mediaws__GetProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetProfileResponse.soap_get(soap, "mediaws:GetProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetProfiles(const char *endpoint, const char *soap_action, _mediaws__GetProfiles *mediaws__GetProfiles, _mediaws__GetProfilesResponse &mediaws__GetProfilesResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetProfiles soap_tmp___mediaws__GetProfiles;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetProfiles";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetProfiles.mediaws__GetProfiles = mediaws__GetProfiles;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetProfiles(soap, &soap_tmp___mediaws__GetProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetProfiles(soap, &soap_tmp___mediaws__GetProfiles, "-mediaws:GetProfiles", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetProfiles(soap, &soap_tmp___mediaws__GetProfiles, "-mediaws:GetProfiles", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetProfilesResponse)
		return soap_closesock(soap);
	mediaws__GetProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetProfilesResponse.soap_get(soap, "mediaws:GetProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__AddVideoEncoderConfiguration *mediaws__AddVideoEncoderConfiguration, _mediaws__AddVideoEncoderConfigurationResponse &mediaws__AddVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__AddVideoEncoderConfiguration soap_tmp___mediaws__AddVideoEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__AddVideoEncoderConfiguration.mediaws__AddVideoEncoderConfiguration = mediaws__AddVideoEncoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__AddVideoEncoderConfiguration(soap, &soap_tmp___mediaws__AddVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__AddVideoEncoderConfiguration(soap, &soap_tmp___mediaws__AddVideoEncoderConfiguration, "-mediaws:AddVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__AddVideoEncoderConfiguration(soap, &soap_tmp___mediaws__AddVideoEncoderConfiguration, "-mediaws:AddVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__AddVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__AddVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__AddVideoEncoderConfigurationResponse.soap_get(soap, "mediaws:AddVideoEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoSourceConfiguration(const char *endpoint, const char *soap_action, _mediaws__AddVideoSourceConfiguration *mediaws__AddVideoSourceConfiguration, _mediaws__AddVideoSourceConfigurationResponse &mediaws__AddVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__AddVideoSourceConfiguration soap_tmp___mediaws__AddVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__AddVideoSourceConfiguration.mediaws__AddVideoSourceConfiguration = mediaws__AddVideoSourceConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__AddVideoSourceConfiguration(soap, &soap_tmp___mediaws__AddVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__AddVideoSourceConfiguration(soap, &soap_tmp___mediaws__AddVideoSourceConfiguration, "-mediaws:AddVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__AddVideoSourceConfiguration(soap, &soap_tmp___mediaws__AddVideoSourceConfiguration, "-mediaws:AddVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__AddVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	mediaws__AddVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__AddVideoSourceConfigurationResponse.soap_get(soap, "mediaws:AddVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__AddAudioEncoderConfiguration *mediaws__AddAudioEncoderConfiguration, _mediaws__AddAudioEncoderConfigurationResponse &mediaws__AddAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__AddAudioEncoderConfiguration soap_tmp___mediaws__AddAudioEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__AddAudioEncoderConfiguration.mediaws__AddAudioEncoderConfiguration = mediaws__AddAudioEncoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__AddAudioEncoderConfiguration(soap, &soap_tmp___mediaws__AddAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__AddAudioEncoderConfiguration(soap, &soap_tmp___mediaws__AddAudioEncoderConfiguration, "-mediaws:AddAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__AddAudioEncoderConfiguration(soap, &soap_tmp___mediaws__AddAudioEncoderConfiguration, "-mediaws:AddAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__AddAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__AddAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__AddAudioEncoderConfigurationResponse.soap_get(soap, "mediaws:AddAudioEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioSourceConfiguration(const char *endpoint, const char *soap_action, _mediaws__AddAudioSourceConfiguration *mediaws__AddAudioSourceConfiguration, _mediaws__AddAudioSourceConfigurationResponse &mediaws__AddAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__AddAudioSourceConfiguration soap_tmp___mediaws__AddAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__AddAudioSourceConfiguration.mediaws__AddAudioSourceConfiguration = mediaws__AddAudioSourceConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__AddAudioSourceConfiguration(soap, &soap_tmp___mediaws__AddAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__AddAudioSourceConfiguration(soap, &soap_tmp___mediaws__AddAudioSourceConfiguration, "-mediaws:AddAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__AddAudioSourceConfiguration(soap, &soap_tmp___mediaws__AddAudioSourceConfiguration, "-mediaws:AddAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__AddAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	mediaws__AddAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__AddAudioSourceConfigurationResponse.soap_get(soap, "mediaws:AddAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddPTZConfiguration(const char *endpoint, const char *soap_action, _mediaws__AddPTZConfiguration *mediaws__AddPTZConfiguration, _mediaws__AddPTZConfigurationResponse &mediaws__AddPTZConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__AddPTZConfiguration soap_tmp___mediaws__AddPTZConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__AddPTZConfiguration.mediaws__AddPTZConfiguration = mediaws__AddPTZConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__AddPTZConfiguration(soap, &soap_tmp___mediaws__AddPTZConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__AddPTZConfiguration(soap, &soap_tmp___mediaws__AddPTZConfiguration, "-mediaws:AddPTZConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__AddPTZConfiguration(soap, &soap_tmp___mediaws__AddPTZConfiguration, "-mediaws:AddPTZConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__AddPTZConfigurationResponse)
		return soap_closesock(soap);
	mediaws__AddPTZConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__AddPTZConfigurationResponse.soap_get(soap, "mediaws:AddPTZConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _mediaws__AddVideoAnalyticsConfiguration *mediaws__AddVideoAnalyticsConfiguration, _mediaws__AddVideoAnalyticsConfigurationResponse &mediaws__AddVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__AddVideoAnalyticsConfiguration soap_tmp___mediaws__AddVideoAnalyticsConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__AddVideoAnalyticsConfiguration.mediaws__AddVideoAnalyticsConfiguration = mediaws__AddVideoAnalyticsConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__AddVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__AddVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__AddVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__AddVideoAnalyticsConfiguration, "-mediaws:AddVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__AddVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__AddVideoAnalyticsConfiguration, "-mediaws:AddVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__AddVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	mediaws__AddVideoAnalyticsConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__AddVideoAnalyticsConfigurationResponse.soap_get(soap, "mediaws:AddVideoAnalyticsConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddMetadataConfiguration(const char *endpoint, const char *soap_action, _mediaws__AddMetadataConfiguration *mediaws__AddMetadataConfiguration, _mediaws__AddMetadataConfigurationResponse &mediaws__AddMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__AddMetadataConfiguration soap_tmp___mediaws__AddMetadataConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__AddMetadataConfiguration.mediaws__AddMetadataConfiguration = mediaws__AddMetadataConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__AddMetadataConfiguration(soap, &soap_tmp___mediaws__AddMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__AddMetadataConfiguration(soap, &soap_tmp___mediaws__AddMetadataConfiguration, "-mediaws:AddMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__AddMetadataConfiguration(soap, &soap_tmp___mediaws__AddMetadataConfiguration, "-mediaws:AddMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__AddMetadataConfigurationResponse)
		return soap_closesock(soap);
	mediaws__AddMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__AddMetadataConfigurationResponse.soap_get(soap, "mediaws:AddMetadataConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioOutputConfiguration(const char *endpoint, const char *soap_action, _mediaws__AddAudioOutputConfiguration *mediaws__AddAudioOutputConfiguration, _mediaws__AddAudioOutputConfigurationResponse &mediaws__AddAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__AddAudioOutputConfiguration soap_tmp___mediaws__AddAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__AddAudioOutputConfiguration.mediaws__AddAudioOutputConfiguration = mediaws__AddAudioOutputConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__AddAudioOutputConfiguration(soap, &soap_tmp___mediaws__AddAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__AddAudioOutputConfiguration(soap, &soap_tmp___mediaws__AddAudioOutputConfiguration, "-mediaws:AddAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__AddAudioOutputConfiguration(soap, &soap_tmp___mediaws__AddAudioOutputConfiguration, "-mediaws:AddAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__AddAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	mediaws__AddAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__AddAudioOutputConfigurationResponse.soap_get(soap, "mediaws:AddAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__AddAudioDecoderConfiguration *mediaws__AddAudioDecoderConfiguration, _mediaws__AddAudioDecoderConfigurationResponse &mediaws__AddAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__AddAudioDecoderConfiguration soap_tmp___mediaws__AddAudioDecoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__AddAudioDecoderConfiguration.mediaws__AddAudioDecoderConfiguration = mediaws__AddAudioDecoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__AddAudioDecoderConfiguration(soap, &soap_tmp___mediaws__AddAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__AddAudioDecoderConfiguration(soap, &soap_tmp___mediaws__AddAudioDecoderConfiguration, "-mediaws:AddAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__AddAudioDecoderConfiguration(soap, &soap_tmp___mediaws__AddAudioDecoderConfiguration, "-mediaws:AddAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__AddAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__AddAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__AddAudioDecoderConfigurationResponse.soap_get(soap, "mediaws:AddAudioDecoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__RemoveVideoEncoderConfiguration *mediaws__RemoveVideoEncoderConfiguration, _mediaws__RemoveVideoEncoderConfigurationResponse &mediaws__RemoveVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__RemoveVideoEncoderConfiguration soap_tmp___mediaws__RemoveVideoEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__RemoveVideoEncoderConfiguration.mediaws__RemoveVideoEncoderConfiguration = mediaws__RemoveVideoEncoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__RemoveVideoEncoderConfiguration(soap, &soap_tmp___mediaws__RemoveVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__RemoveVideoEncoderConfiguration(soap, &soap_tmp___mediaws__RemoveVideoEncoderConfiguration, "-mediaws:RemoveVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__RemoveVideoEncoderConfiguration(soap, &soap_tmp___mediaws__RemoveVideoEncoderConfiguration, "-mediaws:RemoveVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__RemoveVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__RemoveVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__RemoveVideoEncoderConfigurationResponse.soap_get(soap, "mediaws:RemoveVideoEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoSourceConfiguration(const char *endpoint, const char *soap_action, _mediaws__RemoveVideoSourceConfiguration *mediaws__RemoveVideoSourceConfiguration, _mediaws__RemoveVideoSourceConfigurationResponse &mediaws__RemoveVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__RemoveVideoSourceConfiguration soap_tmp___mediaws__RemoveVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__RemoveVideoSourceConfiguration.mediaws__RemoveVideoSourceConfiguration = mediaws__RemoveVideoSourceConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__RemoveVideoSourceConfiguration(soap, &soap_tmp___mediaws__RemoveVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__RemoveVideoSourceConfiguration(soap, &soap_tmp___mediaws__RemoveVideoSourceConfiguration, "-mediaws:RemoveVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__RemoveVideoSourceConfiguration(soap, &soap_tmp___mediaws__RemoveVideoSourceConfiguration, "-mediaws:RemoveVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__RemoveVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	mediaws__RemoveVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__RemoveVideoSourceConfigurationResponse.soap_get(soap, "mediaws:RemoveVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__RemoveAudioEncoderConfiguration *mediaws__RemoveAudioEncoderConfiguration, _mediaws__RemoveAudioEncoderConfigurationResponse &mediaws__RemoveAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__RemoveAudioEncoderConfiguration soap_tmp___mediaws__RemoveAudioEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__RemoveAudioEncoderConfiguration.mediaws__RemoveAudioEncoderConfiguration = mediaws__RemoveAudioEncoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__RemoveAudioEncoderConfiguration(soap, &soap_tmp___mediaws__RemoveAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__RemoveAudioEncoderConfiguration(soap, &soap_tmp___mediaws__RemoveAudioEncoderConfiguration, "-mediaws:RemoveAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__RemoveAudioEncoderConfiguration(soap, &soap_tmp___mediaws__RemoveAudioEncoderConfiguration, "-mediaws:RemoveAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__RemoveAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__RemoveAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__RemoveAudioEncoderConfigurationResponse.soap_get(soap, "mediaws:RemoveAudioEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioSourceConfiguration(const char *endpoint, const char *soap_action, _mediaws__RemoveAudioSourceConfiguration *mediaws__RemoveAudioSourceConfiguration, _mediaws__RemoveAudioSourceConfigurationResponse &mediaws__RemoveAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__RemoveAudioSourceConfiguration soap_tmp___mediaws__RemoveAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__RemoveAudioSourceConfiguration.mediaws__RemoveAudioSourceConfiguration = mediaws__RemoveAudioSourceConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__RemoveAudioSourceConfiguration(soap, &soap_tmp___mediaws__RemoveAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__RemoveAudioSourceConfiguration(soap, &soap_tmp___mediaws__RemoveAudioSourceConfiguration, "-mediaws:RemoveAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__RemoveAudioSourceConfiguration(soap, &soap_tmp___mediaws__RemoveAudioSourceConfiguration, "-mediaws:RemoveAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__RemoveAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	mediaws__RemoveAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__RemoveAudioSourceConfigurationResponse.soap_get(soap, "mediaws:RemoveAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemovePTZConfiguration(const char *endpoint, const char *soap_action, _mediaws__RemovePTZConfiguration *mediaws__RemovePTZConfiguration, _mediaws__RemovePTZConfigurationResponse &mediaws__RemovePTZConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__RemovePTZConfiguration soap_tmp___mediaws__RemovePTZConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__RemovePTZConfiguration.mediaws__RemovePTZConfiguration = mediaws__RemovePTZConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__RemovePTZConfiguration(soap, &soap_tmp___mediaws__RemovePTZConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__RemovePTZConfiguration(soap, &soap_tmp___mediaws__RemovePTZConfiguration, "-mediaws:RemovePTZConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__RemovePTZConfiguration(soap, &soap_tmp___mediaws__RemovePTZConfiguration, "-mediaws:RemovePTZConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__RemovePTZConfigurationResponse)
		return soap_closesock(soap);
	mediaws__RemovePTZConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__RemovePTZConfigurationResponse.soap_get(soap, "mediaws:RemovePTZConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _mediaws__RemoveVideoAnalyticsConfiguration *mediaws__RemoveVideoAnalyticsConfiguration, _mediaws__RemoveVideoAnalyticsConfigurationResponse &mediaws__RemoveVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__RemoveVideoAnalyticsConfiguration soap_tmp___mediaws__RemoveVideoAnalyticsConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__RemoveVideoAnalyticsConfiguration.mediaws__RemoveVideoAnalyticsConfiguration = mediaws__RemoveVideoAnalyticsConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__RemoveVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__RemoveVideoAnalyticsConfiguration, "-mediaws:RemoveVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__RemoveVideoAnalyticsConfiguration, "-mediaws:RemoveVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__RemoveVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	mediaws__RemoveVideoAnalyticsConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__RemoveVideoAnalyticsConfigurationResponse.soap_get(soap, "mediaws:RemoveVideoAnalyticsConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveMetadataConfiguration(const char *endpoint, const char *soap_action, _mediaws__RemoveMetadataConfiguration *mediaws__RemoveMetadataConfiguration, _mediaws__RemoveMetadataConfigurationResponse &mediaws__RemoveMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__RemoveMetadataConfiguration soap_tmp___mediaws__RemoveMetadataConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__RemoveMetadataConfiguration.mediaws__RemoveMetadataConfiguration = mediaws__RemoveMetadataConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__RemoveMetadataConfiguration(soap, &soap_tmp___mediaws__RemoveMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__RemoveMetadataConfiguration(soap, &soap_tmp___mediaws__RemoveMetadataConfiguration, "-mediaws:RemoveMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__RemoveMetadataConfiguration(soap, &soap_tmp___mediaws__RemoveMetadataConfiguration, "-mediaws:RemoveMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__RemoveMetadataConfigurationResponse)
		return soap_closesock(soap);
	mediaws__RemoveMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__RemoveMetadataConfigurationResponse.soap_get(soap, "mediaws:RemoveMetadataConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioOutputConfiguration(const char *endpoint, const char *soap_action, _mediaws__RemoveAudioOutputConfiguration *mediaws__RemoveAudioOutputConfiguration, _mediaws__RemoveAudioOutputConfigurationResponse &mediaws__RemoveAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__RemoveAudioOutputConfiguration soap_tmp___mediaws__RemoveAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__RemoveAudioOutputConfiguration.mediaws__RemoveAudioOutputConfiguration = mediaws__RemoveAudioOutputConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__RemoveAudioOutputConfiguration(soap, &soap_tmp___mediaws__RemoveAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__RemoveAudioOutputConfiguration(soap, &soap_tmp___mediaws__RemoveAudioOutputConfiguration, "-mediaws:RemoveAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__RemoveAudioOutputConfiguration(soap, &soap_tmp___mediaws__RemoveAudioOutputConfiguration, "-mediaws:RemoveAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__RemoveAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	mediaws__RemoveAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__RemoveAudioOutputConfigurationResponse.soap_get(soap, "mediaws:RemoveAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__RemoveAudioDecoderConfiguration *mediaws__RemoveAudioDecoderConfiguration, _mediaws__RemoveAudioDecoderConfigurationResponse &mediaws__RemoveAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__RemoveAudioDecoderConfiguration soap_tmp___mediaws__RemoveAudioDecoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__RemoveAudioDecoderConfiguration.mediaws__RemoveAudioDecoderConfiguration = mediaws__RemoveAudioDecoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__RemoveAudioDecoderConfiguration(soap, &soap_tmp___mediaws__RemoveAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__RemoveAudioDecoderConfiguration(soap, &soap_tmp___mediaws__RemoveAudioDecoderConfiguration, "-mediaws:RemoveAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__RemoveAudioDecoderConfiguration(soap, &soap_tmp___mediaws__RemoveAudioDecoderConfiguration, "-mediaws:RemoveAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__RemoveAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__RemoveAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__RemoveAudioDecoderConfigurationResponse.soap_get(soap, "mediaws:RemoveAudioDecoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::DeleteProfile(const char *endpoint, const char *soap_action, _mediaws__DeleteProfile *mediaws__DeleteProfile, _mediaws__DeleteProfileResponse &mediaws__DeleteProfileResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__DeleteProfile soap_tmp___mediaws__DeleteProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/DeleteProfile";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__DeleteProfile.mediaws__DeleteProfile = mediaws__DeleteProfile;
	soap_serializeheader(soap);
	soap_serialize___mediaws__DeleteProfile(soap, &soap_tmp___mediaws__DeleteProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__DeleteProfile(soap, &soap_tmp___mediaws__DeleteProfile, "-mediaws:DeleteProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__DeleteProfile(soap, &soap_tmp___mediaws__DeleteProfile, "-mediaws:DeleteProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__DeleteProfileResponse)
		return soap_closesock(soap);
	mediaws__DeleteProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__DeleteProfileResponse.soap_get(soap, "mediaws:DeleteProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetVideoSourceConfigurations *mediaws__GetVideoSourceConfigurations, _mediaws__GetVideoSourceConfigurationsResponse &mediaws__GetVideoSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetVideoSourceConfigurations soap_tmp___mediaws__GetVideoSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetVideoSourceConfigurations.mediaws__GetVideoSourceConfigurations = mediaws__GetVideoSourceConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetVideoSourceConfigurations(soap, &soap_tmp___mediaws__GetVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetVideoSourceConfigurations(soap, &soap_tmp___mediaws__GetVideoSourceConfigurations, "-mediaws:GetVideoSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetVideoSourceConfigurations(soap, &soap_tmp___mediaws__GetVideoSourceConfigurations, "-mediaws:GetVideoSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetVideoSourceConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetVideoSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetVideoSourceConfigurationsResponse.soap_get(soap, "mediaws:GetVideoSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetVideoEncoderConfigurations *mediaws__GetVideoEncoderConfigurations, _mediaws__GetVideoEncoderConfigurationsResponse &mediaws__GetVideoEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetVideoEncoderConfigurations soap_tmp___mediaws__GetVideoEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetVideoEncoderConfigurations.mediaws__GetVideoEncoderConfigurations = mediaws__GetVideoEncoderConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetVideoEncoderConfigurations(soap, &soap_tmp___mediaws__GetVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetVideoEncoderConfigurations(soap, &soap_tmp___mediaws__GetVideoEncoderConfigurations, "-mediaws:GetVideoEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetVideoEncoderConfigurations(soap, &soap_tmp___mediaws__GetVideoEncoderConfigurations, "-mediaws:GetVideoEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetVideoEncoderConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetVideoEncoderConfigurationsResponse.soap_get(soap, "mediaws:GetVideoEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetAudioSourceConfigurations *mediaws__GetAudioSourceConfigurations, _mediaws__GetAudioSourceConfigurationsResponse &mediaws__GetAudioSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioSourceConfigurations soap_tmp___mediaws__GetAudioSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioSourceConfigurations.mediaws__GetAudioSourceConfigurations = mediaws__GetAudioSourceConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioSourceConfigurations(soap, &soap_tmp___mediaws__GetAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioSourceConfigurations(soap, &soap_tmp___mediaws__GetAudioSourceConfigurations, "-mediaws:GetAudioSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioSourceConfigurations(soap, &soap_tmp___mediaws__GetAudioSourceConfigurations, "-mediaws:GetAudioSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioSourceConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetAudioSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioSourceConfigurationsResponse.soap_get(soap, "mediaws:GetAudioSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetAudioEncoderConfigurations *mediaws__GetAudioEncoderConfigurations, _mediaws__GetAudioEncoderConfigurationsResponse &mediaws__GetAudioEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioEncoderConfigurations soap_tmp___mediaws__GetAudioEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioEncoderConfigurations.mediaws__GetAudioEncoderConfigurations = mediaws__GetAudioEncoderConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioEncoderConfigurations(soap, &soap_tmp___mediaws__GetAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioEncoderConfigurations(soap, &soap_tmp___mediaws__GetAudioEncoderConfigurations, "-mediaws:GetAudioEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioEncoderConfigurations(soap, &soap_tmp___mediaws__GetAudioEncoderConfigurations, "-mediaws:GetAudioEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioEncoderConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioEncoderConfigurationsResponse.soap_get(soap, "mediaws:GetAudioEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoAnalyticsConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetVideoAnalyticsConfigurations *mediaws__GetVideoAnalyticsConfigurations, _mediaws__GetVideoAnalyticsConfigurationsResponse &mediaws__GetVideoAnalyticsConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetVideoAnalyticsConfigurations soap_tmp___mediaws__GetVideoAnalyticsConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetVideoAnalyticsConfigurations.mediaws__GetVideoAnalyticsConfigurations = mediaws__GetVideoAnalyticsConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetVideoAnalyticsConfigurations(soap, &soap_tmp___mediaws__GetVideoAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetVideoAnalyticsConfigurations(soap, &soap_tmp___mediaws__GetVideoAnalyticsConfigurations, "-mediaws:GetVideoAnalyticsConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetVideoAnalyticsConfigurations(soap, &soap_tmp___mediaws__GetVideoAnalyticsConfigurations, "-mediaws:GetVideoAnalyticsConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetVideoAnalyticsConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetVideoAnalyticsConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetVideoAnalyticsConfigurationsResponse.soap_get(soap, "mediaws:GetVideoAnalyticsConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetMetadataConfigurations *mediaws__GetMetadataConfigurations, _mediaws__GetMetadataConfigurationsResponse &mediaws__GetMetadataConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetMetadataConfigurations soap_tmp___mediaws__GetMetadataConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetMetadataConfigurations.mediaws__GetMetadataConfigurations = mediaws__GetMetadataConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetMetadataConfigurations(soap, &soap_tmp___mediaws__GetMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetMetadataConfigurations(soap, &soap_tmp___mediaws__GetMetadataConfigurations, "-mediaws:GetMetadataConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetMetadataConfigurations(soap, &soap_tmp___mediaws__GetMetadataConfigurations, "-mediaws:GetMetadataConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetMetadataConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetMetadataConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetMetadataConfigurationsResponse.soap_get(soap, "mediaws:GetMetadataConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetAudioOutputConfigurations *mediaws__GetAudioOutputConfigurations, _mediaws__GetAudioOutputConfigurationsResponse &mediaws__GetAudioOutputConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioOutputConfigurations soap_tmp___mediaws__GetAudioOutputConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioOutputConfigurations.mediaws__GetAudioOutputConfigurations = mediaws__GetAudioOutputConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioOutputConfigurations(soap, &soap_tmp___mediaws__GetAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioOutputConfigurations(soap, &soap_tmp___mediaws__GetAudioOutputConfigurations, "-mediaws:GetAudioOutputConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioOutputConfigurations(soap, &soap_tmp___mediaws__GetAudioOutputConfigurations, "-mediaws:GetAudioOutputConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioOutputConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetAudioOutputConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioOutputConfigurationsResponse.soap_get(soap, "mediaws:GetAudioOutputConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetAudioDecoderConfigurations *mediaws__GetAudioDecoderConfigurations, _mediaws__GetAudioDecoderConfigurationsResponse &mediaws__GetAudioDecoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioDecoderConfigurations soap_tmp___mediaws__GetAudioDecoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioDecoderConfigurations.mediaws__GetAudioDecoderConfigurations = mediaws__GetAudioDecoderConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioDecoderConfigurations(soap, &soap_tmp___mediaws__GetAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioDecoderConfigurations(soap, &soap_tmp___mediaws__GetAudioDecoderConfigurations, "-mediaws:GetAudioDecoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioDecoderConfigurations(soap, &soap_tmp___mediaws__GetAudioDecoderConfigurations, "-mediaws:GetAudioDecoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioDecoderConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioDecoderConfigurationsResponse.soap_get(soap, "mediaws:GetAudioDecoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _mediaws__GetVideoSourceConfiguration *mediaws__GetVideoSourceConfiguration, _mediaws__GetVideoSourceConfigurationResponse &mediaws__GetVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetVideoSourceConfiguration soap_tmp___mediaws__GetVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetVideoSourceConfiguration.mediaws__GetVideoSourceConfiguration = mediaws__GetVideoSourceConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetVideoSourceConfiguration(soap, &soap_tmp___mediaws__GetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetVideoSourceConfiguration(soap, &soap_tmp___mediaws__GetVideoSourceConfiguration, "-mediaws:GetVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetVideoSourceConfiguration(soap, &soap_tmp___mediaws__GetVideoSourceConfiguration, "-mediaws:GetVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	mediaws__GetVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetVideoSourceConfigurationResponse.soap_get(soap, "mediaws:GetVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__GetVideoEncoderConfiguration *mediaws__GetVideoEncoderConfiguration, _mediaws__GetVideoEncoderConfigurationResponse &mediaws__GetVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetVideoEncoderConfiguration soap_tmp___mediaws__GetVideoEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetVideoEncoderConfiguration.mediaws__GetVideoEncoderConfiguration = mediaws__GetVideoEncoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetVideoEncoderConfiguration(soap, &soap_tmp___mediaws__GetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetVideoEncoderConfiguration(soap, &soap_tmp___mediaws__GetVideoEncoderConfiguration, "-mediaws:GetVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetVideoEncoderConfiguration(soap, &soap_tmp___mediaws__GetVideoEncoderConfiguration, "-mediaws:GetVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__GetVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetVideoEncoderConfigurationResponse.soap_get(soap, "mediaws:GetVideoEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _mediaws__GetAudioSourceConfiguration *mediaws__GetAudioSourceConfiguration, _mediaws__GetAudioSourceConfigurationResponse &mediaws__GetAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioSourceConfiguration soap_tmp___mediaws__GetAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioSourceConfiguration.mediaws__GetAudioSourceConfiguration = mediaws__GetAudioSourceConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioSourceConfiguration(soap, &soap_tmp___mediaws__GetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioSourceConfiguration(soap, &soap_tmp___mediaws__GetAudioSourceConfiguration, "-mediaws:GetAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioSourceConfiguration(soap, &soap_tmp___mediaws__GetAudioSourceConfiguration, "-mediaws:GetAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	mediaws__GetAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioSourceConfigurationResponse.soap_get(soap, "mediaws:GetAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__GetAudioEncoderConfiguration *mediaws__GetAudioEncoderConfiguration, _mediaws__GetAudioEncoderConfigurationResponse &mediaws__GetAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioEncoderConfiguration soap_tmp___mediaws__GetAudioEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioEncoderConfiguration.mediaws__GetAudioEncoderConfiguration = mediaws__GetAudioEncoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioEncoderConfiguration(soap, &soap_tmp___mediaws__GetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioEncoderConfiguration(soap, &soap_tmp___mediaws__GetAudioEncoderConfiguration, "-mediaws:GetAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioEncoderConfiguration(soap, &soap_tmp___mediaws__GetAudioEncoderConfiguration, "-mediaws:GetAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__GetAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioEncoderConfigurationResponse.soap_get(soap, "mediaws:GetAudioEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _mediaws__GetVideoAnalyticsConfiguration *mediaws__GetVideoAnalyticsConfiguration, _mediaws__GetVideoAnalyticsConfigurationResponse &mediaws__GetVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetVideoAnalyticsConfiguration soap_tmp___mediaws__GetVideoAnalyticsConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetVideoAnalyticsConfiguration.mediaws__GetVideoAnalyticsConfiguration = mediaws__GetVideoAnalyticsConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__GetVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__GetVideoAnalyticsConfiguration, "-mediaws:GetVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__GetVideoAnalyticsConfiguration, "-mediaws:GetVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	mediaws__GetVideoAnalyticsConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetVideoAnalyticsConfigurationResponse.soap_get(soap, "mediaws:GetVideoAnalyticsConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfiguration(const char *endpoint, const char *soap_action, _mediaws__GetMetadataConfiguration *mediaws__GetMetadataConfiguration, _mediaws__GetMetadataConfigurationResponse &mediaws__GetMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetMetadataConfiguration soap_tmp___mediaws__GetMetadataConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetMetadataConfiguration.mediaws__GetMetadataConfiguration = mediaws__GetMetadataConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetMetadataConfiguration(soap, &soap_tmp___mediaws__GetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetMetadataConfiguration(soap, &soap_tmp___mediaws__GetMetadataConfiguration, "-mediaws:GetMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetMetadataConfiguration(soap, &soap_tmp___mediaws__GetMetadataConfiguration, "-mediaws:GetMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetMetadataConfigurationResponse)
		return soap_closesock(soap);
	mediaws__GetMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetMetadataConfigurationResponse.soap_get(soap, "mediaws:GetMetadataConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _mediaws__GetAudioOutputConfiguration *mediaws__GetAudioOutputConfiguration, _mediaws__GetAudioOutputConfigurationResponse &mediaws__GetAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioOutputConfiguration soap_tmp___mediaws__GetAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioOutputConfiguration.mediaws__GetAudioOutputConfiguration = mediaws__GetAudioOutputConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioOutputConfiguration(soap, &soap_tmp___mediaws__GetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioOutputConfiguration(soap, &soap_tmp___mediaws__GetAudioOutputConfiguration, "-mediaws:GetAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioOutputConfiguration(soap, &soap_tmp___mediaws__GetAudioOutputConfiguration, "-mediaws:GetAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	mediaws__GetAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioOutputConfigurationResponse.soap_get(soap, "mediaws:GetAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__GetAudioDecoderConfiguration *mediaws__GetAudioDecoderConfiguration, _mediaws__GetAudioDecoderConfigurationResponse &mediaws__GetAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioDecoderConfiguration soap_tmp___mediaws__GetAudioDecoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioDecoderConfiguration.mediaws__GetAudioDecoderConfiguration = mediaws__GetAudioDecoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioDecoderConfiguration(soap, &soap_tmp___mediaws__GetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioDecoderConfiguration(soap, &soap_tmp___mediaws__GetAudioDecoderConfiguration, "-mediaws:GetAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioDecoderConfiguration(soap, &soap_tmp___mediaws__GetAudioDecoderConfiguration, "-mediaws:GetAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__GetAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioDecoderConfigurationResponse.soap_get(soap, "mediaws:GetAudioDecoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoEncoderConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetCompatibleVideoEncoderConfigurations *mediaws__GetCompatibleVideoEncoderConfigurations, _mediaws__GetCompatibleVideoEncoderConfigurationsResponse &mediaws__GetCompatibleVideoEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetCompatibleVideoEncoderConfigurations soap_tmp___mediaws__GetCompatibleVideoEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetCompatibleVideoEncoderConfigurations.mediaws__GetCompatibleVideoEncoderConfigurations = mediaws__GetCompatibleVideoEncoderConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoEncoderConfigurations, "-mediaws:GetCompatibleVideoEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoEncoderConfigurations, "-mediaws:GetCompatibleVideoEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetCompatibleVideoEncoderConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetCompatibleVideoEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetCompatibleVideoEncoderConfigurationsResponse.soap_get(soap, "mediaws:GetCompatibleVideoEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoSourceConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetCompatibleVideoSourceConfigurations *mediaws__GetCompatibleVideoSourceConfigurations, _mediaws__GetCompatibleVideoSourceConfigurationsResponse &mediaws__GetCompatibleVideoSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetCompatibleVideoSourceConfigurations soap_tmp___mediaws__GetCompatibleVideoSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetCompatibleVideoSourceConfigurations.mediaws__GetCompatibleVideoSourceConfigurations = mediaws__GetCompatibleVideoSourceConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoSourceConfigurations, "-mediaws:GetCompatibleVideoSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoSourceConfigurations, "-mediaws:GetCompatibleVideoSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetCompatibleVideoSourceConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetCompatibleVideoSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetCompatibleVideoSourceConfigurationsResponse.soap_get(soap, "mediaws:GetCompatibleVideoSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioEncoderConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetCompatibleAudioEncoderConfigurations *mediaws__GetCompatibleAudioEncoderConfigurations, _mediaws__GetCompatibleAudioEncoderConfigurationsResponse &mediaws__GetCompatibleAudioEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetCompatibleAudioEncoderConfigurations soap_tmp___mediaws__GetCompatibleAudioEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetCompatibleAudioEncoderConfigurations.mediaws__GetCompatibleAudioEncoderConfigurations = mediaws__GetCompatibleAudioEncoderConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioEncoderConfigurations, "-mediaws:GetCompatibleAudioEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioEncoderConfigurations, "-mediaws:GetCompatibleAudioEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetCompatibleAudioEncoderConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetCompatibleAudioEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetCompatibleAudioEncoderConfigurationsResponse.soap_get(soap, "mediaws:GetCompatibleAudioEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioSourceConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetCompatibleAudioSourceConfigurations *mediaws__GetCompatibleAudioSourceConfigurations, _mediaws__GetCompatibleAudioSourceConfigurationsResponse &mediaws__GetCompatibleAudioSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetCompatibleAudioSourceConfigurations soap_tmp___mediaws__GetCompatibleAudioSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetCompatibleAudioSourceConfigurations.mediaws__GetCompatibleAudioSourceConfigurations = mediaws__GetCompatibleAudioSourceConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioSourceConfigurations, "-mediaws:GetCompatibleAudioSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioSourceConfigurations, "-mediaws:GetCompatibleAudioSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetCompatibleAudioSourceConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetCompatibleAudioSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetCompatibleAudioSourceConfigurationsResponse.soap_get(soap, "mediaws:GetCompatibleAudioSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoAnalyticsConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetCompatibleVideoAnalyticsConfigurations *mediaws__GetCompatibleVideoAnalyticsConfigurations, _mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse &mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetCompatibleVideoAnalyticsConfigurations soap_tmp___mediaws__GetCompatibleVideoAnalyticsConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetCompatibleVideoAnalyticsConfigurations.mediaws__GetCompatibleVideoAnalyticsConfigurations = mediaws__GetCompatibleVideoAnalyticsConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoAnalyticsConfigurations, "-mediaws:GetCompatibleVideoAnalyticsConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___mediaws__GetCompatibleVideoAnalyticsConfigurations, "-mediaws:GetCompatibleVideoAnalyticsConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_get(soap, "mediaws:GetCompatibleVideoAnalyticsConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleMetadataConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetCompatibleMetadataConfigurations *mediaws__GetCompatibleMetadataConfigurations, _mediaws__GetCompatibleMetadataConfigurationsResponse &mediaws__GetCompatibleMetadataConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetCompatibleMetadataConfigurations soap_tmp___mediaws__GetCompatibleMetadataConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetCompatibleMetadataConfigurations.mediaws__GetCompatibleMetadataConfigurations = mediaws__GetCompatibleMetadataConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetCompatibleMetadataConfigurations(soap, &soap_tmp___mediaws__GetCompatibleMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetCompatibleMetadataConfigurations(soap, &soap_tmp___mediaws__GetCompatibleMetadataConfigurations, "-mediaws:GetCompatibleMetadataConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetCompatibleMetadataConfigurations(soap, &soap_tmp___mediaws__GetCompatibleMetadataConfigurations, "-mediaws:GetCompatibleMetadataConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetCompatibleMetadataConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetCompatibleMetadataConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetCompatibleMetadataConfigurationsResponse.soap_get(soap, "mediaws:GetCompatibleMetadataConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioOutputConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetCompatibleAudioOutputConfigurations *mediaws__GetCompatibleAudioOutputConfigurations, _mediaws__GetCompatibleAudioOutputConfigurationsResponse &mediaws__GetCompatibleAudioOutputConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetCompatibleAudioOutputConfigurations soap_tmp___mediaws__GetCompatibleAudioOutputConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetCompatibleAudioOutputConfigurations.mediaws__GetCompatibleAudioOutputConfigurations = mediaws__GetCompatibleAudioOutputConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioOutputConfigurations, "-mediaws:GetCompatibleAudioOutputConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioOutputConfigurations, "-mediaws:GetCompatibleAudioOutputConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetCompatibleAudioOutputConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetCompatibleAudioOutputConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetCompatibleAudioOutputConfigurationsResponse.soap_get(soap, "mediaws:GetCompatibleAudioOutputConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioDecoderConfigurations(const char *endpoint, const char *soap_action, _mediaws__GetCompatibleAudioDecoderConfigurations *mediaws__GetCompatibleAudioDecoderConfigurations, _mediaws__GetCompatibleAudioDecoderConfigurationsResponse &mediaws__GetCompatibleAudioDecoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetCompatibleAudioDecoderConfigurations soap_tmp___mediaws__GetCompatibleAudioDecoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetCompatibleAudioDecoderConfigurations.mediaws__GetCompatibleAudioDecoderConfigurations = mediaws__GetCompatibleAudioDecoderConfigurations;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioDecoderConfigurations, "-mediaws:GetCompatibleAudioDecoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___mediaws__GetCompatibleAudioDecoderConfigurations, "-mediaws:GetCompatibleAudioDecoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetCompatibleAudioDecoderConfigurationsResponse)
		return soap_closesock(soap);
	mediaws__GetCompatibleAudioDecoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetCompatibleAudioDecoderConfigurationsResponse.soap_get(soap, "mediaws:GetCompatibleAudioDecoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _mediaws__SetVideoSourceConfiguration *mediaws__SetVideoSourceConfiguration, _mediaws__SetVideoSourceConfigurationResponse &mediaws__SetVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__SetVideoSourceConfiguration soap_tmp___mediaws__SetVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__SetVideoSourceConfiguration.mediaws__SetVideoSourceConfiguration = mediaws__SetVideoSourceConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__SetVideoSourceConfiguration(soap, &soap_tmp___mediaws__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__SetVideoSourceConfiguration(soap, &soap_tmp___mediaws__SetVideoSourceConfiguration, "-mediaws:SetVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__SetVideoSourceConfiguration(soap, &soap_tmp___mediaws__SetVideoSourceConfiguration, "-mediaws:SetVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__SetVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	mediaws__SetVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__SetVideoSourceConfigurationResponse.soap_get(soap, "mediaws:SetVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__SetVideoEncoderConfiguration *mediaws__SetVideoEncoderConfiguration, _mediaws__SetVideoEncoderConfigurationResponse &mediaws__SetVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__SetVideoEncoderConfiguration soap_tmp___mediaws__SetVideoEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__SetVideoEncoderConfiguration.mediaws__SetVideoEncoderConfiguration = mediaws__SetVideoEncoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__SetVideoEncoderConfiguration(soap, &soap_tmp___mediaws__SetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__SetVideoEncoderConfiguration(soap, &soap_tmp___mediaws__SetVideoEncoderConfiguration, "-mediaws:SetVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__SetVideoEncoderConfiguration(soap, &soap_tmp___mediaws__SetVideoEncoderConfiguration, "-mediaws:SetVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__SetVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__SetVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__SetVideoEncoderConfigurationResponse.soap_get(soap, "mediaws:SetVideoEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _mediaws__SetAudioSourceConfiguration *mediaws__SetAudioSourceConfiguration, _mediaws__SetAudioSourceConfigurationResponse &mediaws__SetAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__SetAudioSourceConfiguration soap_tmp___mediaws__SetAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__SetAudioSourceConfiguration.mediaws__SetAudioSourceConfiguration = mediaws__SetAudioSourceConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__SetAudioSourceConfiguration(soap, &soap_tmp___mediaws__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__SetAudioSourceConfiguration(soap, &soap_tmp___mediaws__SetAudioSourceConfiguration, "-mediaws:SetAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__SetAudioSourceConfiguration(soap, &soap_tmp___mediaws__SetAudioSourceConfiguration, "-mediaws:SetAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__SetAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	mediaws__SetAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__SetAudioSourceConfigurationResponse.soap_get(soap, "mediaws:SetAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__SetAudioEncoderConfiguration *mediaws__SetAudioEncoderConfiguration, _mediaws__SetAudioEncoderConfigurationResponse &mediaws__SetAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__SetAudioEncoderConfiguration soap_tmp___mediaws__SetAudioEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__SetAudioEncoderConfiguration.mediaws__SetAudioEncoderConfiguration = mediaws__SetAudioEncoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__SetAudioEncoderConfiguration(soap, &soap_tmp___mediaws__SetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__SetAudioEncoderConfiguration(soap, &soap_tmp___mediaws__SetAudioEncoderConfiguration, "-mediaws:SetAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__SetAudioEncoderConfiguration(soap, &soap_tmp___mediaws__SetAudioEncoderConfiguration, "-mediaws:SetAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__SetAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__SetAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__SetAudioEncoderConfigurationResponse.soap_get(soap, "mediaws:SetAudioEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _mediaws__SetVideoAnalyticsConfiguration *mediaws__SetVideoAnalyticsConfiguration, _mediaws__SetVideoAnalyticsConfigurationResponse &mediaws__SetVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__SetVideoAnalyticsConfiguration soap_tmp___mediaws__SetVideoAnalyticsConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__SetVideoAnalyticsConfiguration.mediaws__SetVideoAnalyticsConfiguration = mediaws__SetVideoAnalyticsConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__SetVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__SetVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__SetVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__SetVideoAnalyticsConfiguration, "-mediaws:SetVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__SetVideoAnalyticsConfiguration(soap, &soap_tmp___mediaws__SetVideoAnalyticsConfiguration, "-mediaws:SetVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__SetVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	mediaws__SetVideoAnalyticsConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__SetVideoAnalyticsConfigurationResponse.soap_get(soap, "mediaws:SetVideoAnalyticsConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetMetadataConfiguration(const char *endpoint, const char *soap_action, _mediaws__SetMetadataConfiguration *mediaws__SetMetadataConfiguration, _mediaws__SetMetadataConfigurationResponse &mediaws__SetMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__SetMetadataConfiguration soap_tmp___mediaws__SetMetadataConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__SetMetadataConfiguration.mediaws__SetMetadataConfiguration = mediaws__SetMetadataConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__SetMetadataConfiguration(soap, &soap_tmp___mediaws__SetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__SetMetadataConfiguration(soap, &soap_tmp___mediaws__SetMetadataConfiguration, "-mediaws:SetMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__SetMetadataConfiguration(soap, &soap_tmp___mediaws__SetMetadataConfiguration, "-mediaws:SetMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__SetMetadataConfigurationResponse)
		return soap_closesock(soap);
	mediaws__SetMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__SetMetadataConfigurationResponse.soap_get(soap, "mediaws:SetMetadataConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _mediaws__SetAudioOutputConfiguration *mediaws__SetAudioOutputConfiguration, _mediaws__SetAudioOutputConfigurationResponse &mediaws__SetAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__SetAudioOutputConfiguration soap_tmp___mediaws__SetAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__SetAudioOutputConfiguration.mediaws__SetAudioOutputConfiguration = mediaws__SetAudioOutputConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__SetAudioOutputConfiguration(soap, &soap_tmp___mediaws__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__SetAudioOutputConfiguration(soap, &soap_tmp___mediaws__SetAudioOutputConfiguration, "-mediaws:SetAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__SetAudioOutputConfiguration(soap, &soap_tmp___mediaws__SetAudioOutputConfiguration, "-mediaws:SetAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__SetAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	mediaws__SetAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__SetAudioOutputConfigurationResponse.soap_get(soap, "mediaws:SetAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _mediaws__SetAudioDecoderConfiguration *mediaws__SetAudioDecoderConfiguration, _mediaws__SetAudioDecoderConfigurationResponse &mediaws__SetAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__SetAudioDecoderConfiguration soap_tmp___mediaws__SetAudioDecoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__SetAudioDecoderConfiguration.mediaws__SetAudioDecoderConfiguration = mediaws__SetAudioDecoderConfiguration;
	soap_serializeheader(soap);
	soap_serialize___mediaws__SetAudioDecoderConfiguration(soap, &soap_tmp___mediaws__SetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__SetAudioDecoderConfiguration(soap, &soap_tmp___mediaws__SetAudioDecoderConfiguration, "-mediaws:SetAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__SetAudioDecoderConfiguration(soap, &soap_tmp___mediaws__SetAudioDecoderConfiguration, "-mediaws:SetAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__SetAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	mediaws__SetAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__SetAudioDecoderConfigurationResponse.soap_get(soap, "mediaws:SetAudioDecoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfigurationOptions(const char *endpoint, const char *soap_action, _mediaws__GetVideoSourceConfigurationOptions *mediaws__GetVideoSourceConfigurationOptions, _mediaws__GetVideoSourceConfigurationOptionsResponse &mediaws__GetVideoSourceConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetVideoSourceConfigurationOptions soap_tmp___mediaws__GetVideoSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetVideoSourceConfigurationOptions.mediaws__GetVideoSourceConfigurationOptions = mediaws__GetVideoSourceConfigurationOptions;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetVideoSourceConfigurationOptions(soap, &soap_tmp___mediaws__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetVideoSourceConfigurationOptions(soap, &soap_tmp___mediaws__GetVideoSourceConfigurationOptions, "-mediaws:GetVideoSourceConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetVideoSourceConfigurationOptions(soap, &soap_tmp___mediaws__GetVideoSourceConfigurationOptions, "-mediaws:GetVideoSourceConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetVideoSourceConfigurationOptionsResponse)
		return soap_closesock(soap);
	mediaws__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetVideoSourceConfigurationOptionsResponse.soap_get(soap, "mediaws:GetVideoSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfigurationOptions(const char *endpoint, const char *soap_action, _mediaws__GetVideoEncoderConfigurationOptions *mediaws__GetVideoEncoderConfigurationOptions, _mediaws__GetVideoEncoderConfigurationOptionsResponse &mediaws__GetVideoEncoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetVideoEncoderConfigurationOptions soap_tmp___mediaws__GetVideoEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetVideoEncoderConfigurationOptions.mediaws__GetVideoEncoderConfigurationOptions = mediaws__GetVideoEncoderConfigurationOptions;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___mediaws__GetVideoEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___mediaws__GetVideoEncoderConfigurationOptions, "-mediaws:GetVideoEncoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___mediaws__GetVideoEncoderConfigurationOptions, "-mediaws:GetVideoEncoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetVideoEncoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	mediaws__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetVideoEncoderConfigurationOptionsResponse.soap_get(soap, "mediaws:GetVideoEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfigurationOptions(const char *endpoint, const char *soap_action, _mediaws__GetAudioSourceConfigurationOptions *mediaws__GetAudioSourceConfigurationOptions, _mediaws__GetAudioSourceConfigurationOptionsResponse &mediaws__GetAudioSourceConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioSourceConfigurationOptions soap_tmp___mediaws__GetAudioSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioSourceConfigurationOptions.mediaws__GetAudioSourceConfigurationOptions = mediaws__GetAudioSourceConfigurationOptions;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioSourceConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioSourceConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioSourceConfigurationOptions, "-mediaws:GetAudioSourceConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioSourceConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioSourceConfigurationOptions, "-mediaws:GetAudioSourceConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioSourceConfigurationOptionsResponse)
		return soap_closesock(soap);
	mediaws__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioSourceConfigurationOptionsResponse.soap_get(soap, "mediaws:GetAudioSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfigurationOptions(const char *endpoint, const char *soap_action, _mediaws__GetAudioEncoderConfigurationOptions *mediaws__GetAudioEncoderConfigurationOptions, _mediaws__GetAudioEncoderConfigurationOptionsResponse &mediaws__GetAudioEncoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioEncoderConfigurationOptions soap_tmp___mediaws__GetAudioEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioEncoderConfigurationOptions.mediaws__GetAudioEncoderConfigurationOptions = mediaws__GetAudioEncoderConfigurationOptions;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioEncoderConfigurationOptions, "-mediaws:GetAudioEncoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioEncoderConfigurationOptions, "-mediaws:GetAudioEncoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioEncoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	mediaws__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioEncoderConfigurationOptionsResponse.soap_get(soap, "mediaws:GetAudioEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfigurationOptions(const char *endpoint, const char *soap_action, _mediaws__GetMetadataConfigurationOptions *mediaws__GetMetadataConfigurationOptions, _mediaws__GetMetadataConfigurationOptionsResponse &mediaws__GetMetadataConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetMetadataConfigurationOptions soap_tmp___mediaws__GetMetadataConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetMetadataConfigurationOptions.mediaws__GetMetadataConfigurationOptions = mediaws__GetMetadataConfigurationOptions;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetMetadataConfigurationOptions(soap, &soap_tmp___mediaws__GetMetadataConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetMetadataConfigurationOptions(soap, &soap_tmp___mediaws__GetMetadataConfigurationOptions, "-mediaws:GetMetadataConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetMetadataConfigurationOptions(soap, &soap_tmp___mediaws__GetMetadataConfigurationOptions, "-mediaws:GetMetadataConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetMetadataConfigurationOptionsResponse)
		return soap_closesock(soap);
	mediaws__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetMetadataConfigurationOptionsResponse.soap_get(soap, "mediaws:GetMetadataConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfigurationOptions(const char *endpoint, const char *soap_action, _mediaws__GetAudioOutputConfigurationOptions *mediaws__GetAudioOutputConfigurationOptions, _mediaws__GetAudioOutputConfigurationOptionsResponse &mediaws__GetAudioOutputConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioOutputConfigurationOptions soap_tmp___mediaws__GetAudioOutputConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioOutputConfigurationOptions.mediaws__GetAudioOutputConfigurationOptions = mediaws__GetAudioOutputConfigurationOptions;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioOutputConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioOutputConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioOutputConfigurationOptions, "-mediaws:GetAudioOutputConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioOutputConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioOutputConfigurationOptions, "-mediaws:GetAudioOutputConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioOutputConfigurationOptionsResponse)
		return soap_closesock(soap);
	mediaws__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioOutputConfigurationOptionsResponse.soap_get(soap, "mediaws:GetAudioOutputConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfigurationOptions(const char *endpoint, const char *soap_action, _mediaws__GetAudioDecoderConfigurationOptions *mediaws__GetAudioDecoderConfigurationOptions, _mediaws__GetAudioDecoderConfigurationOptionsResponse &mediaws__GetAudioDecoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetAudioDecoderConfigurationOptions soap_tmp___mediaws__GetAudioDecoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetAudioDecoderConfigurationOptions.mediaws__GetAudioDecoderConfigurationOptions = mediaws__GetAudioDecoderConfigurationOptions;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioDecoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioDecoderConfigurationOptions, "-mediaws:GetAudioDecoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___mediaws__GetAudioDecoderConfigurationOptions, "-mediaws:GetAudioDecoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetAudioDecoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	mediaws__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetAudioDecoderConfigurationOptionsResponse.soap_get(soap, "mediaws:GetAudioDecoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetGuaranteedNumberOfVideoEncoderInstances(const char *endpoint, const char *soap_action, _mediaws__GetGuaranteedNumberOfVideoEncoderInstances *mediaws__GetGuaranteedNumberOfVideoEncoderInstances, _mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse &mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetGuaranteedNumberOfVideoEncoderInstances soap_tmp___mediaws__GetGuaranteedNumberOfVideoEncoderInstances;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetGuaranteedNumberOfVideoEncoderInstances.mediaws__GetGuaranteedNumberOfVideoEncoderInstances = mediaws__GetGuaranteedNumberOfVideoEncoderInstances;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___mediaws__GetGuaranteedNumberOfVideoEncoderInstances);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___mediaws__GetGuaranteedNumberOfVideoEncoderInstances, "-mediaws:GetGuaranteedNumberOfVideoEncoderInstances", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___mediaws__GetGuaranteedNumberOfVideoEncoderInstances, "-mediaws:GetGuaranteedNumberOfVideoEncoderInstances", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse)
		return soap_closesock(soap);
	mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_get(soap, "mediaws:GetGuaranteedNumberOfVideoEncoderInstancesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetStreamUri(const char *endpoint, const char *soap_action, _mediaws__GetStreamUri *mediaws__GetStreamUri, _mediaws__GetStreamUriResponse &mediaws__GetStreamUriResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetStreamUri soap_tmp___mediaws__GetStreamUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetStreamUri";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetStreamUri.mediaws__GetStreamUri = mediaws__GetStreamUri;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetStreamUri(soap, &soap_tmp___mediaws__GetStreamUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetStreamUri(soap, &soap_tmp___mediaws__GetStreamUri, "-mediaws:GetStreamUri", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetStreamUri(soap, &soap_tmp___mediaws__GetStreamUri, "-mediaws:GetStreamUri", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetStreamUriResponse)
		return soap_closesock(soap);
	mediaws__GetStreamUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetStreamUriResponse.soap_get(soap, "mediaws:GetStreamUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::StartMulticastStreaming(const char *endpoint, const char *soap_action, _mediaws__StartMulticastStreaming *mediaws__StartMulticastStreaming, _mediaws__StartMulticastStreamingResponse &mediaws__StartMulticastStreamingResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__StartMulticastStreaming soap_tmp___mediaws__StartMulticastStreaming;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__StartMulticastStreaming.mediaws__StartMulticastStreaming = mediaws__StartMulticastStreaming;
	soap_serializeheader(soap);
	soap_serialize___mediaws__StartMulticastStreaming(soap, &soap_tmp___mediaws__StartMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__StartMulticastStreaming(soap, &soap_tmp___mediaws__StartMulticastStreaming, "-mediaws:StartMulticastStreaming", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__StartMulticastStreaming(soap, &soap_tmp___mediaws__StartMulticastStreaming, "-mediaws:StartMulticastStreaming", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__StartMulticastStreamingResponse)
		return soap_closesock(soap);
	mediaws__StartMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__StartMulticastStreamingResponse.soap_get(soap, "mediaws:StartMulticastStreamingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::StopMulticastStreaming(const char *endpoint, const char *soap_action, _mediaws__StopMulticastStreaming *mediaws__StopMulticastStreaming, _mediaws__StopMulticastStreamingResponse &mediaws__StopMulticastStreamingResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__StopMulticastStreaming soap_tmp___mediaws__StopMulticastStreaming;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__StopMulticastStreaming.mediaws__StopMulticastStreaming = mediaws__StopMulticastStreaming;
	soap_serializeheader(soap);
	soap_serialize___mediaws__StopMulticastStreaming(soap, &soap_tmp___mediaws__StopMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__StopMulticastStreaming(soap, &soap_tmp___mediaws__StopMulticastStreaming, "-mediaws:StopMulticastStreaming", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__StopMulticastStreaming(soap, &soap_tmp___mediaws__StopMulticastStreaming, "-mediaws:StopMulticastStreaming", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__StopMulticastStreamingResponse)
		return soap_closesock(soap);
	mediaws__StopMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__StopMulticastStreamingResponse.soap_get(soap, "mediaws:StopMulticastStreamingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetSynchronizationPoint(const char *endpoint, const char *soap_action, _mediaws__SetSynchronizationPoint *mediaws__SetSynchronizationPoint, _mediaws__SetSynchronizationPointResponse &mediaws__SetSynchronizationPointResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__SetSynchronizationPoint soap_tmp___mediaws__SetSynchronizationPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__SetSynchronizationPoint.mediaws__SetSynchronizationPoint = mediaws__SetSynchronizationPoint;
	soap_serializeheader(soap);
	soap_serialize___mediaws__SetSynchronizationPoint(soap, &soap_tmp___mediaws__SetSynchronizationPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__SetSynchronizationPoint(soap, &soap_tmp___mediaws__SetSynchronizationPoint, "-mediaws:SetSynchronizationPoint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__SetSynchronizationPoint(soap, &soap_tmp___mediaws__SetSynchronizationPoint, "-mediaws:SetSynchronizationPoint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__SetSynchronizationPointResponse)
		return soap_closesock(soap);
	mediaws__SetSynchronizationPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__SetSynchronizationPointResponse.soap_get(soap, "mediaws:SetSynchronizationPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetSnapshotUri(const char *endpoint, const char *soap_action, _mediaws__GetSnapshotUri *mediaws__GetSnapshotUri, _mediaws__GetSnapshotUriResponse &mediaws__GetSnapshotUriResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetSnapshotUri soap_tmp___mediaws__GetSnapshotUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetSnapshotUri.mediaws__GetSnapshotUri = mediaws__GetSnapshotUri;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetSnapshotUri(soap, &soap_tmp___mediaws__GetSnapshotUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetSnapshotUri(soap, &soap_tmp___mediaws__GetSnapshotUri, "-mediaws:GetSnapshotUri", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetSnapshotUri(soap, &soap_tmp___mediaws__GetSnapshotUri, "-mediaws:GetSnapshotUri", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetSnapshotUriResponse)
		return soap_closesock(soap);
	mediaws__GetSnapshotUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetSnapshotUriResponse.soap_get(soap, "mediaws:GetSnapshotUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceModes(const char *endpoint, const char *soap_action, _mediaws__GetVideoSourceModes *mediaws__GetVideoSourceModes, _mediaws__GetVideoSourceModesResponse &mediaws__GetVideoSourceModesResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetVideoSourceModes soap_tmp___mediaws__GetVideoSourceModes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetVideoSourceModes.mediaws__GetVideoSourceModes = mediaws__GetVideoSourceModes;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetVideoSourceModes(soap, &soap_tmp___mediaws__GetVideoSourceModes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetVideoSourceModes(soap, &soap_tmp___mediaws__GetVideoSourceModes, "-mediaws:GetVideoSourceModes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetVideoSourceModes(soap, &soap_tmp___mediaws__GetVideoSourceModes, "-mediaws:GetVideoSourceModes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetVideoSourceModesResponse)
		return soap_closesock(soap);
	mediaws__GetVideoSourceModesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetVideoSourceModesResponse.soap_get(soap, "mediaws:GetVideoSourceModesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoSourceMode(const char *endpoint, const char *soap_action, _mediaws__SetVideoSourceMode *mediaws__SetVideoSourceMode, _mediaws__SetVideoSourceModeResponse &mediaws__SetVideoSourceModeResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__SetVideoSourceMode soap_tmp___mediaws__SetVideoSourceMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__SetVideoSourceMode.mediaws__SetVideoSourceMode = mediaws__SetVideoSourceMode;
	soap_serializeheader(soap);
	soap_serialize___mediaws__SetVideoSourceMode(soap, &soap_tmp___mediaws__SetVideoSourceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__SetVideoSourceMode(soap, &soap_tmp___mediaws__SetVideoSourceMode, "-mediaws:SetVideoSourceMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__SetVideoSourceMode(soap, &soap_tmp___mediaws__SetVideoSourceMode, "-mediaws:SetVideoSourceMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__SetVideoSourceModeResponse)
		return soap_closesock(soap);
	mediaws__SetVideoSourceModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__SetVideoSourceModeResponse.soap_get(soap, "mediaws:SetVideoSourceModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetOSDs(const char *endpoint, const char *soap_action, _mediaws__GetOSDs *mediaws__GetOSDs, _mediaws__GetOSDsResponse &mediaws__GetOSDsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetOSDs soap_tmp___mediaws__GetOSDs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetOSDs";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetOSDs.mediaws__GetOSDs = mediaws__GetOSDs;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetOSDs(soap, &soap_tmp___mediaws__GetOSDs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetOSDs(soap, &soap_tmp___mediaws__GetOSDs, "-mediaws:GetOSDs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetOSDs(soap, &soap_tmp___mediaws__GetOSDs, "-mediaws:GetOSDs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetOSDsResponse)
		return soap_closesock(soap);
	mediaws__GetOSDsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetOSDsResponse.soap_get(soap, "mediaws:GetOSDsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetOSD(const char *endpoint, const char *soap_action, _mediaws__GetOSD *mediaws__GetOSD, _mediaws__GetOSDResponse &mediaws__GetOSDResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetOSD soap_tmp___mediaws__GetOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetOSD";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetOSD.mediaws__GetOSD = mediaws__GetOSD;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetOSD(soap, &soap_tmp___mediaws__GetOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetOSD(soap, &soap_tmp___mediaws__GetOSD, "-mediaws:GetOSD", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetOSD(soap, &soap_tmp___mediaws__GetOSD, "-mediaws:GetOSD", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetOSDResponse)
		return soap_closesock(soap);
	mediaws__GetOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetOSDResponse.soap_get(soap, "mediaws:GetOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetOSDOptions(const char *endpoint, const char *soap_action, _mediaws__GetOSDOptions *mediaws__GetOSDOptions, _mediaws__GetOSDOptionsResponse &mediaws__GetOSDOptionsResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__GetOSDOptions soap_tmp___mediaws__GetOSDOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__GetOSDOptions.mediaws__GetOSDOptions = mediaws__GetOSDOptions;
	soap_serializeheader(soap);
	soap_serialize___mediaws__GetOSDOptions(soap, &soap_tmp___mediaws__GetOSDOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__GetOSDOptions(soap, &soap_tmp___mediaws__GetOSDOptions, "-mediaws:GetOSDOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__GetOSDOptions(soap, &soap_tmp___mediaws__GetOSDOptions, "-mediaws:GetOSDOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__GetOSDOptionsResponse)
		return soap_closesock(soap);
	mediaws__GetOSDOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__GetOSDOptionsResponse.soap_get(soap, "mediaws:GetOSDOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetOSD(const char *endpoint, const char *soap_action, _mediaws__SetOSD *mediaws__SetOSD, _mediaws__SetOSDResponse &mediaws__SetOSDResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__SetOSD soap_tmp___mediaws__SetOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetOSD";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__SetOSD.mediaws__SetOSD = mediaws__SetOSD;
	soap_serializeheader(soap);
	soap_serialize___mediaws__SetOSD(soap, &soap_tmp___mediaws__SetOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__SetOSD(soap, &soap_tmp___mediaws__SetOSD, "-mediaws:SetOSD", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__SetOSD(soap, &soap_tmp___mediaws__SetOSD, "-mediaws:SetOSD", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__SetOSDResponse)
		return soap_closesock(soap);
	mediaws__SetOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__SetOSDResponse.soap_get(soap, "mediaws:SetOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::CreateOSD(const char *endpoint, const char *soap_action, _mediaws__CreateOSD *mediaws__CreateOSD, _mediaws__CreateOSDResponse &mediaws__CreateOSDResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__CreateOSD soap_tmp___mediaws__CreateOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/CreateOSD";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__CreateOSD.mediaws__CreateOSD = mediaws__CreateOSD;
	soap_serializeheader(soap);
	soap_serialize___mediaws__CreateOSD(soap, &soap_tmp___mediaws__CreateOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__CreateOSD(soap, &soap_tmp___mediaws__CreateOSD, "-mediaws:CreateOSD", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__CreateOSD(soap, &soap_tmp___mediaws__CreateOSD, "-mediaws:CreateOSD", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__CreateOSDResponse)
		return soap_closesock(soap);
	mediaws__CreateOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__CreateOSDResponse.soap_get(soap, "mediaws:CreateOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::DeleteOSD(const char *endpoint, const char *soap_action, _mediaws__DeleteOSD *mediaws__DeleteOSD, _mediaws__DeleteOSDResponse &mediaws__DeleteOSDResponse)
{	struct soap *soap = this->soap;
	struct __mediaws__DeleteOSD soap_tmp___mediaws__DeleteOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/DeleteOSD";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___mediaws__DeleteOSD.mediaws__DeleteOSD = mediaws__DeleteOSD;
	soap_serializeheader(soap);
	soap_serialize___mediaws__DeleteOSD(soap, &soap_tmp___mediaws__DeleteOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___mediaws__DeleteOSD(soap, &soap_tmp___mediaws__DeleteOSD, "-mediaws:DeleteOSD", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___mediaws__DeleteOSD(soap, &soap_tmp___mediaws__DeleteOSD, "-mediaws:DeleteOSD", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&mediaws__DeleteOSDResponse)
		return soap_closesock(soap);
	mediaws__DeleteOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	mediaws__DeleteOSDResponse.soap_get(soap, "mediaws:DeleteOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
