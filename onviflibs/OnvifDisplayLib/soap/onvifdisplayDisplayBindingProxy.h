/* onvifdisplayDisplayBindingProxy.h
   Generated by gSOAP 2.8.22 from rcx.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef onvifdisplayDisplayBindingProxy_H
#define onvifdisplayDisplayBindingProxy_H
#include "onvifdisplayH.h"

class SOAP_CMAC DisplayBindingProxy
{ public:
	struct soap *soap;
	bool soap_own;
	/// Endpoint URL of service 'DisplayBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Variables globally declared in rcx.h (non-static)
	/// Constructor
	DisplayBindingProxy();
	/// Constructor to use/share an engine state
	DisplayBindingProxy(struct soap*);
	/// Constructor with endpoint URL
	DisplayBindingProxy(const char *url);
	/// Constructor with engine input+output mode control
	DisplayBindingProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	DisplayBindingProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	DisplayBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~DisplayBindingProxy();
	/// Initializer used by constructors
	virtual	void DisplayBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'GetServiceCapabilities' (returns error code or SOAP_OK)
	virtual	int GetServiceCapabilities(_displayws__GetServiceCapabilities *displayws__GetServiceCapabilities, _displayws__GetServiceCapabilitiesResponse &displayws__GetServiceCapabilitiesResponse) { return this->GetServiceCapabilities(NULL, NULL, displayws__GetServiceCapabilities, displayws__GetServiceCapabilitiesResponse); }
	virtual	int GetServiceCapabilities(const char *endpoint, const char *soap_action, _displayws__GetServiceCapabilities *displayws__GetServiceCapabilities, _displayws__GetServiceCapabilitiesResponse &displayws__GetServiceCapabilitiesResponse);

	/// Web service operation 'GetLayout' (returns error code or SOAP_OK)
	virtual	int GetLayout(_displayws__GetLayout *displayws__GetLayout, _displayws__GetLayoutResponse &displayws__GetLayoutResponse) { return this->GetLayout(NULL, NULL, displayws__GetLayout, displayws__GetLayoutResponse); }
	virtual	int GetLayout(const char *endpoint, const char *soap_action, _displayws__GetLayout *displayws__GetLayout, _displayws__GetLayoutResponse &displayws__GetLayoutResponse);

	/// Web service operation 'SetLayout' (returns error code or SOAP_OK)
	virtual	int SetLayout(_displayws__SetLayout *displayws__SetLayout, _displayws__SetLayoutResponse &displayws__SetLayoutResponse) { return this->SetLayout(NULL, NULL, displayws__SetLayout, displayws__SetLayoutResponse); }
	virtual	int SetLayout(const char *endpoint, const char *soap_action, _displayws__SetLayout *displayws__SetLayout, _displayws__SetLayoutResponse &displayws__SetLayoutResponse);

	/// Web service operation 'GetDisplayOptions' (returns error code or SOAP_OK)
	virtual	int GetDisplayOptions(_displayws__GetDisplayOptions *displayws__GetDisplayOptions, _displayws__GetDisplayOptionsResponse &displayws__GetDisplayOptionsResponse) { return this->GetDisplayOptions(NULL, NULL, displayws__GetDisplayOptions, displayws__GetDisplayOptionsResponse); }
	virtual	int GetDisplayOptions(const char *endpoint, const char *soap_action, _displayws__GetDisplayOptions *displayws__GetDisplayOptions, _displayws__GetDisplayOptionsResponse &displayws__GetDisplayOptionsResponse);

	/// Web service operation 'GetPaneConfigurations' (returns error code or SOAP_OK)
	virtual	int GetPaneConfigurations(_displayws__GetPaneConfigurations *displayws__GetPaneConfigurations, _displayws__GetPaneConfigurationsResponse &displayws__GetPaneConfigurationsResponse) { return this->GetPaneConfigurations(NULL, NULL, displayws__GetPaneConfigurations, displayws__GetPaneConfigurationsResponse); }
	virtual	int GetPaneConfigurations(const char *endpoint, const char *soap_action, _displayws__GetPaneConfigurations *displayws__GetPaneConfigurations, _displayws__GetPaneConfigurationsResponse &displayws__GetPaneConfigurationsResponse);

	/// Web service operation 'GetPaneConfiguration' (returns error code or SOAP_OK)
	virtual	int GetPaneConfiguration(_displayws__GetPaneConfiguration *displayws__GetPaneConfiguration, _displayws__GetPaneConfigurationResponse &displayws__GetPaneConfigurationResponse) { return this->GetPaneConfiguration(NULL, NULL, displayws__GetPaneConfiguration, displayws__GetPaneConfigurationResponse); }
	virtual	int GetPaneConfiguration(const char *endpoint, const char *soap_action, _displayws__GetPaneConfiguration *displayws__GetPaneConfiguration, _displayws__GetPaneConfigurationResponse &displayws__GetPaneConfigurationResponse);

	/// Web service operation 'SetPaneConfigurations' (returns error code or SOAP_OK)
	virtual	int SetPaneConfigurations(_displayws__SetPaneConfigurations *displayws__SetPaneConfigurations, _displayws__SetPaneConfigurationsResponse &displayws__SetPaneConfigurationsResponse) { return this->SetPaneConfigurations(NULL, NULL, displayws__SetPaneConfigurations, displayws__SetPaneConfigurationsResponse); }
	virtual	int SetPaneConfigurations(const char *endpoint, const char *soap_action, _displayws__SetPaneConfigurations *displayws__SetPaneConfigurations, _displayws__SetPaneConfigurationsResponse &displayws__SetPaneConfigurationsResponse);

	/// Web service operation 'SetPaneConfiguration' (returns error code or SOAP_OK)
	virtual	int SetPaneConfiguration(_displayws__SetPaneConfiguration *displayws__SetPaneConfiguration, _displayws__SetPaneConfigurationResponse &displayws__SetPaneConfigurationResponse) { return this->SetPaneConfiguration(NULL, NULL, displayws__SetPaneConfiguration, displayws__SetPaneConfigurationResponse); }
	virtual	int SetPaneConfiguration(const char *endpoint, const char *soap_action, _displayws__SetPaneConfiguration *displayws__SetPaneConfiguration, _displayws__SetPaneConfigurationResponse &displayws__SetPaneConfigurationResponse);

	/// Web service operation 'CreatePaneConfiguration' (returns error code or SOAP_OK)
	virtual	int CreatePaneConfiguration(_displayws__CreatePaneConfiguration *displayws__CreatePaneConfiguration, _displayws__CreatePaneConfigurationResponse &displayws__CreatePaneConfigurationResponse) { return this->CreatePaneConfiguration(NULL, NULL, displayws__CreatePaneConfiguration, displayws__CreatePaneConfigurationResponse); }
	virtual	int CreatePaneConfiguration(const char *endpoint, const char *soap_action, _displayws__CreatePaneConfiguration *displayws__CreatePaneConfiguration, _displayws__CreatePaneConfigurationResponse &displayws__CreatePaneConfigurationResponse);

	/// Web service operation 'DeletePaneConfiguration' (returns error code or SOAP_OK)
	virtual	int DeletePaneConfiguration(_displayws__DeletePaneConfiguration *displayws__DeletePaneConfiguration, _displayws__DeletePaneConfigurationResponse &displayws__DeletePaneConfigurationResponse) { return this->DeletePaneConfiguration(NULL, NULL, displayws__DeletePaneConfiguration, displayws__DeletePaneConfigurationResponse); }
	virtual	int DeletePaneConfiguration(const char *endpoint, const char *soap_action, _displayws__DeletePaneConfiguration *displayws__DeletePaneConfiguration, _displayws__DeletePaneConfigurationResponse &displayws__DeletePaneConfigurationResponse);
};
#endif
