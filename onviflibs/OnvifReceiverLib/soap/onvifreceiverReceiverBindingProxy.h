/* onvifreceiverReceiverBindingProxy.h
   Generated by gSOAP 2.8.22 from rcx.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef onvifreceiverReceiverBindingProxy_H
#define onvifreceiverReceiverBindingProxy_H
#include "onvifreceiverH.h"

class SOAP_CMAC ReceiverBindingProxy
{ public:
	struct soap *soap;
	bool soap_own;
	/// Endpoint URL of service 'ReceiverBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Variables globally declared in rcx.h (non-static)
	/// Constructor
	ReceiverBindingProxy();
	/// Constructor to use/share an engine state
	ReceiverBindingProxy(struct soap*);
	/// Constructor with endpoint URL
	ReceiverBindingProxy(const char *url);
	/// Constructor with engine input+output mode control
	ReceiverBindingProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	ReceiverBindingProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	ReceiverBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~ReceiverBindingProxy();
	/// Initializer used by constructors
	virtual	void ReceiverBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'GetServiceCapabilities' (returns error code or SOAP_OK)
	virtual	int GetServiceCapabilities(_receiverws__GetServiceCapabilities *receiverws__GetServiceCapabilities, _receiverws__GetServiceCapabilitiesResponse &receiverws__GetServiceCapabilitiesResponse) { return this->GetServiceCapabilities(NULL, NULL, receiverws__GetServiceCapabilities, receiverws__GetServiceCapabilitiesResponse); }
	virtual	int GetServiceCapabilities(const char *endpoint, const char *soap_action, _receiverws__GetServiceCapabilities *receiverws__GetServiceCapabilities, _receiverws__GetServiceCapabilitiesResponse &receiverws__GetServiceCapabilitiesResponse);

	/// Web service operation 'GetReceivers' (returns error code or SOAP_OK)
	virtual	int GetReceivers(_receiverws__GetReceivers *receiverws__GetReceivers, _receiverws__GetReceiversResponse &receiverws__GetReceiversResponse) { return this->GetReceivers(NULL, NULL, receiverws__GetReceivers, receiverws__GetReceiversResponse); }
	virtual	int GetReceivers(const char *endpoint, const char *soap_action, _receiverws__GetReceivers *receiverws__GetReceivers, _receiverws__GetReceiversResponse &receiverws__GetReceiversResponse);

	/// Web service operation 'GetReceiver' (returns error code or SOAP_OK)
	virtual	int GetReceiver(_receiverws__GetReceiver *receiverws__GetReceiver, _receiverws__GetReceiverResponse &receiverws__GetReceiverResponse) { return this->GetReceiver(NULL, NULL, receiverws__GetReceiver, receiverws__GetReceiverResponse); }
	virtual	int GetReceiver(const char *endpoint, const char *soap_action, _receiverws__GetReceiver *receiverws__GetReceiver, _receiverws__GetReceiverResponse &receiverws__GetReceiverResponse);

	/// Web service operation 'CreateReceiver' (returns error code or SOAP_OK)
	virtual	int CreateReceiver(_receiverws__CreateReceiver *receiverws__CreateReceiver, _receiverws__CreateReceiverResponse &receiverws__CreateReceiverResponse) { return this->CreateReceiver(NULL, NULL, receiverws__CreateReceiver, receiverws__CreateReceiverResponse); }
	virtual	int CreateReceiver(const char *endpoint, const char *soap_action, _receiverws__CreateReceiver *receiverws__CreateReceiver, _receiverws__CreateReceiverResponse &receiverws__CreateReceiverResponse);

	/// Web service operation 'DeleteReceiver' (returns error code or SOAP_OK)
	virtual	int DeleteReceiver(_receiverws__DeleteReceiver *receiverws__DeleteReceiver, _receiverws__DeleteReceiverResponse &receiverws__DeleteReceiverResponse) { return this->DeleteReceiver(NULL, NULL, receiverws__DeleteReceiver, receiverws__DeleteReceiverResponse); }
	virtual	int DeleteReceiver(const char *endpoint, const char *soap_action, _receiverws__DeleteReceiver *receiverws__DeleteReceiver, _receiverws__DeleteReceiverResponse &receiverws__DeleteReceiverResponse);

	/// Web service operation 'ConfigureReceiver' (returns error code or SOAP_OK)
	virtual	int ConfigureReceiver(_receiverws__ConfigureReceiver *receiverws__ConfigureReceiver, _receiverws__ConfigureReceiverResponse &receiverws__ConfigureReceiverResponse) { return this->ConfigureReceiver(NULL, NULL, receiverws__ConfigureReceiver, receiverws__ConfigureReceiverResponse); }
	virtual	int ConfigureReceiver(const char *endpoint, const char *soap_action, _receiverws__ConfigureReceiver *receiverws__ConfigureReceiver, _receiverws__ConfigureReceiverResponse &receiverws__ConfigureReceiverResponse);

	/// Web service operation 'SetReceiverMode' (returns error code or SOAP_OK)
	virtual	int SetReceiverMode(_receiverws__SetReceiverMode *receiverws__SetReceiverMode, _receiverws__SetReceiverModeResponse &receiverws__SetReceiverModeResponse) { return this->SetReceiverMode(NULL, NULL, receiverws__SetReceiverMode, receiverws__SetReceiverModeResponse); }
	virtual	int SetReceiverMode(const char *endpoint, const char *soap_action, _receiverws__SetReceiverMode *receiverws__SetReceiverMode, _receiverws__SetReceiverModeResponse &receiverws__SetReceiverModeResponse);

	/// Web service operation 'GetReceiverState' (returns error code or SOAP_OK)
	virtual	int GetReceiverState(_receiverws__GetReceiverState *receiverws__GetReceiverState, _receiverws__GetReceiverStateResponse &receiverws__GetReceiverStateResponse) { return this->GetReceiverState(NULL, NULL, receiverws__GetReceiverState, receiverws__GetReceiverStateResponse); }
	virtual	int GetReceiverState(const char *endpoint, const char *soap_action, _receiverws__GetReceiverState *receiverws__GetReceiverState, _receiverws__GetReceiverStateResponse &receiverws__GetReceiverStateResponse);
};
#endif
